import TObjectHashingStrategy = require('nashorn/gnu/trove/TObjectHashingStrategy');
import Collection = require('nashorn/java/util/Collection');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import TObjectHash = require('nashorn/gnu/trove/TObjectHash');
import Set = require('nashorn/java/util/Set');
import TObjectProcedure = require('nashorn/gnu/trove/TObjectProcedure');

declare class THashSet<E> {
	constructor();
	constructor(arg1 : TObjectHashingStrategy<E>);
	constructor(arg1 : number);
	constructor(arg1 : number, arg2 : TObjectHashingStrategy<E>);
	constructor(arg1 : number, arg2 : number);
	constructor(arg1 : number, arg2 : number, arg3 : TObjectHashingStrategy<E>);
	constructor(arg1 : Collection<E>);
	constructor(arg1 : Collection<E>, arg2 : TObjectHashingStrategy<E>);
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
}


declare interface THashSet<E> extends TObjectHash<E>, Set<E> {}

declare module THashSet {
	class HashProcedure {
		hashCode : number;
		getHashCode() : number;
	}


	interface HashProcedure extends TObjectProcedure<E> {}}

export = THashSet
