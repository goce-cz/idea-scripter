import Object = require('nashorn/java/lang/Object');
import TIntHashingStrategy = require('nashorn/gnu/trove/TIntHashingStrategy');
import TIntObjectIterator = require('nashorn/gnu/trove/TIntObjectIterator');
import TIntProcedure = require('nashorn/gnu/trove/TIntProcedure');
import TObjectProcedure = require('nashorn/gnu/trove/TObjectProcedure');
import TIntObjectProcedure = require('nashorn/gnu/trove/TIntObjectProcedure');
import TObjectFunction = require('nashorn/gnu/trove/TObjectFunction');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import THash = require('nashorn/gnu/trove/THash');

declare class TIntObjectHashMap<V> {
	values : Object[];
	constructor();
	constructor(arg1 : number);
	constructor(arg1 : number, arg2 : number);
	constructor(arg1 : TIntHashingStrategy);
	constructor(arg1 : number, arg2 : TIntHashingStrategy);
	constructor(arg1 : number, arg2 : number, arg3 : TIntHashingStrategy);
	iterator() : TIntObjectIterator<V>;
	contains(arg1 : number) : boolean;
	forEach(arg1 : TIntProcedure) : boolean;
	put(arg1 : number, arg2 : V) : V;
	get(arg1 : number) : V;
	static unwrapNull<V>(arg1 : V) : V;
	static wrapNull<V>(arg1 : V) : V;
	remove(arg1 : number) : V;
	index(arg1 : number) : number;
	insertionIndex(arg1 : number) : number;
	static isFull(arg1 : Object[], arg2 : number) : boolean;
	static isRemoved(arg1 : Object[], arg2 : number) : boolean;
	static isFree(arg1 : Object[], arg2 : number) : boolean;
	getValues() : Object[];
	keys() : number[];
	containsValue(arg1 : V) : boolean;
	containsKey(arg1 : number) : boolean;
	forEachKey(arg1 : TIntProcedure) : boolean;
	forEachValue(arg1 : TObjectProcedure<V>) : boolean;
	forEachEntry(arg1 : TIntObjectProcedure<V>) : boolean;
	retainEntries(arg1 : TIntObjectProcedure<V>) : boolean;
	transformValues(arg1 : TObjectFunction<V, V>) : void;
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
}


declare interface TIntObjectHashMap<V> extends THash, TIntHashingStrategy {}

declare module TIntObjectHashMap {
	class EqProcedure<V> {
		static eq(arg1 : Object, arg2 : Object) : boolean;
	}


	interface EqProcedure<V> extends TIntObjectProcedure<V> {}	class HashProcedure {
		hashCode : number;
		getHashCode() : number;
	}


	interface HashProcedure extends TIntObjectProcedure<V> {}}

export = TIntObjectHashMap
