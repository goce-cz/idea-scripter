import Object = require('nashorn/java/lang/Object');
import TObjectHashingStrategy = require('nashorn/gnu/trove/TObjectHashingStrategy');
import TObjectProcedure = require('nashorn/gnu/trove/TObjectProcedure');
import THash = require('nashorn/gnu/trove/THash');

declare class TObjectHash<T> {
	static REMOVED : Object;
	static NULL : TObjectHash.NULL;
	constructor();
	constructor(arg1 : TObjectHashingStrategy<T>);
	constructor(arg1 : number);
	constructor(arg1 : number, arg2 : TObjectHashingStrategy<T>);
	constructor(arg1 : number, arg2 : number);
	constructor(arg1 : number, arg2 : number, arg3 : TObjectHashingStrategy<T>);
	forEach(arg1 : TObjectProcedure<T>) : boolean;
	contains(arg1 : Object) : boolean;
	index(arg1 : T) : number;
	insertionIndex(arg1 : T) : number;
	throwObjectContractViolation(arg1 : Object, arg2 : Object) : void;
}


declare interface TObjectHash<T> extends THash, TObjectHashingStrategy<T> {}

declare module TObjectHash {
	class NULL extends Object {
	}
}

export = TObjectHash
