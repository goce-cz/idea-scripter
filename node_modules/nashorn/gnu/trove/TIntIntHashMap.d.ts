import TIntHashingStrategy = require('nashorn/gnu/trove/TIntHashingStrategy');
import TIntIntIterator = require('nashorn/gnu/trove/TIntIntIterator');
import TIntProcedure = require('nashorn/gnu/trove/TIntProcedure');
import TIntIntProcedure = require('nashorn/gnu/trove/TIntIntProcedure');
import TIntFunction = require('nashorn/gnu/trove/TIntFunction');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import TIntHash = require('nashorn/gnu/trove/TIntHash');

declare class TIntIntHashMap {
	values : number[];
	constructor();
	constructor(arg1 : number);
	constructor(arg1 : number, arg2 : number);
	constructor(arg1 : TIntHashingStrategy);
	constructor(arg1 : number, arg2 : TIntHashingStrategy);
	constructor(arg1 : number, arg2 : number, arg3 : TIntHashingStrategy);
	iterator() : TIntIntIterator;
	put(arg1 : number, arg2 : number) : number;
	get(arg1 : number) : number;
	remove(arg1 : number) : number;
	getValues() : number[];
	keys() : number[];
	containsValue(arg1 : number) : boolean;
	containsKey(arg1 : number) : boolean;
	forEachKey(arg1 : TIntProcedure) : boolean;
	forEachValue(arg1 : TIntProcedure) : boolean;
	forEachEntry(arg1 : TIntIntProcedure) : boolean;
	retainEntries(arg1 : TIntIntProcedure) : boolean;
	transformValues(arg1 : TIntFunction) : void;
	increment(arg1 : number) : boolean;
	adjustValue(arg1 : number, arg2 : number) : boolean;
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
}


declare interface TIntIntHashMap extends TIntHash {}

declare module TIntIntHashMap {
	class EqProcedure {
		static eq(arg1 : number, arg2 : number) : boolean;
	}


	interface EqProcedure extends TIntIntProcedure {}	class HashProcedure {
		hashCode : number;
		getHashCode() : number;
	}


	interface HashProcedure extends TIntIntProcedure {}}

export = TIntIntHashMap
