import ModuleBuilder = require('nashorn/com/intellij/ide/util/projectWizard/ModuleBuilder');
import Object = require('nashorn/java/lang/Object');
import Icon = require('nashorn/javax/swing/Icon');
import FrameworkRole = require('nashorn/com/intellij/ide/util/frameworkSupport/FrameworkRole');
import WizardContext = require('nashorn/com/intellij/ide/util/projectWizard/WizardContext');
import ModulesProvider = require('nashorn/com/intellij/openapi/roots/ui/configuration/ModulesProvider');
import ModuleWizardStep = require('nashorn/com/intellij/ide/util/projectWizard/ModuleWizardStep');
import SettingsStep = require('nashorn/com/intellij/ide/util/projectWizard/SettingsStep');
import Module = require('nashorn/com/intellij/openapi/module/Module');
import Sdk = require('nashorn/com/intellij/openapi/projectRoots/Sdk');
import JpsModuleSourceRootType = require('nashorn/org/jetbrains/jps/model/module/JpsModuleSourceRootType');

declare class ModuleType<T extends ModuleBuilder> extends Object {
	static EMPTY : ModuleType;
	name : string;
	description : string;
	bigIcon : Icon;
	icon : Icon;
	id : string;
	defaultAcceptableRole : FrameworkRole;
	createModuleBuilder() : T;
	getName() : string;
	getDescription() : string;
	getBigIcon() : Icon;
	getIcon() : Icon;
	getNodeIcon(arg1 : boolean) : Icon;
	createWizardSteps(arg1 : WizardContext, arg2 : T, arg3 : ModulesProvider) : ModuleWizardStep[];
	modifySettingsStep(arg1 : SettingsStep, arg2 : ModuleBuilder) : ModuleWizardStep;
	modifyProjectTypeStep(arg1 : SettingsStep, arg2 : ModuleBuilder) : ModuleWizardStep;
	getId() : string;
	static instantiate(arg1 : string) : ModuleType;
	isValidSdk(arg1 : Module, arg2 : Sdk) : boolean;
	static get(arg1 : Module) : ModuleType;
	getDefaultAcceptableRole() : FrameworkRole;
	isSupportedRootType(arg1 : JpsModuleSourceRootType) : boolean;
}

export = ModuleType
