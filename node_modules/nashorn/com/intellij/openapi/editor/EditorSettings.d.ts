import Object = require('nashorn/java/lang/Object');
import Project = require('nashorn/com/intellij/openapi/project/Project');

declare class EditorSettings extends Object {
	rightMarginShown : boolean;
	whitespacesShown : boolean;
	leadingWhitespaceShown : boolean;
	innerWhitespaceShown : boolean;
	trailingWhitespaceShown : boolean;
	lineNumbersShown : boolean;
	additionalLinesCount : number;
	additionalColumnsCount : number;
	lineMarkerAreaShown : boolean;
	foldingOutlineShown : boolean;
	autoCodeFoldingEnabled : boolean;
	smartHome : boolean;
	virtualSpace : boolean;
	caretInsideTabs : boolean;
	blinkCaret : boolean;
	caretBlinkPeriod : number;
	blockCursor : boolean;
	caretRowShown : boolean;
	lineCursorWidth : number;
	animatedScrolling : boolean;
	camelWords : boolean;
	additionalPageAtBottom : boolean;
	dndEnabled : boolean;
	wheelFontChangeEnabled : boolean;
	mouseClickSelectionHonorsCamelWords : boolean;
	variableInplaceRenameEnabled : boolean;
	refrainFromScrolling : boolean;
	indentGuidesShown : boolean;
	useSoftWraps : boolean;
	allSoftWrapsShown : boolean;
	useCustomSoftWrapIndent : boolean;
	customSoftWrapIndent : number;
	allowSingleLogicalLineFolding : boolean;
	preselectRename : boolean;
	showIntentionBulb : boolean;
	isRightMarginShown() : boolean;
	setRightMarginShown(arg1 : boolean) : void;
	isWhitespacesShown() : boolean;
	setWhitespacesShown(arg1 : boolean) : void;
	isLeadingWhitespaceShown() : boolean;
	setLeadingWhitespaceShown(arg1 : boolean) : void;
	isInnerWhitespaceShown() : boolean;
	setInnerWhitespaceShown(arg1 : boolean) : void;
	isTrailingWhitespaceShown() : boolean;
	setTrailingWhitespaceShown(arg1 : boolean) : void;
	getRightMargin(arg1 : Project) : number;
	setRightMargin(arg1 : number) : void;
	isWrapWhenTypingReachesRightMargin(arg1 : Project) : boolean;
	setWrapWhenTypingReachesRightMargin(arg1 : boolean) : void;
	isLineNumbersShown() : boolean;
	setLineNumbersShown(arg1 : boolean) : void;
	getAdditionalLinesCount() : number;
	setAdditionalLinesCount(arg1 : number) : void;
	getAdditionalColumnsCount() : number;
	setAdditionalColumnsCount(arg1 : number) : void;
	isLineMarkerAreaShown() : boolean;
	setLineMarkerAreaShown(arg1 : boolean) : void;
	isFoldingOutlineShown() : boolean;
	setFoldingOutlineShown(arg1 : boolean) : void;
	isAutoCodeFoldingEnabled() : boolean;
	setAutoCodeFoldingEnabled(arg1 : boolean) : void;
	isUseTabCharacter(arg1 : Project) : boolean;
	setUseTabCharacter(arg1 : boolean) : void;
	getTabSize(arg1 : Project) : number;
	setTabSize(arg1 : number) : void;
	isSmartHome() : boolean;
	setSmartHome(arg1 : boolean) : void;
	isVirtualSpace() : boolean;
	setVirtualSpace(arg1 : boolean) : void;
	isCaretInsideTabs() : boolean;
	setCaretInsideTabs(arg1 : boolean) : void;
	isBlinkCaret() : boolean;
	setBlinkCaret(arg1 : boolean) : void;
	getCaretBlinkPeriod() : number;
	setCaretBlinkPeriod(arg1 : number) : void;
	isBlockCursor() : boolean;
	setBlockCursor(arg1 : boolean) : void;
	isCaretRowShown() : boolean;
	setCaretRowShown(arg1 : boolean) : void;
	getLineCursorWidth() : number;
	setLineCursorWidth(arg1 : number) : void;
	isAnimatedScrolling() : boolean;
	setAnimatedScrolling(arg1 : boolean) : void;
	isCamelWords() : boolean;
	setCamelWords(arg1 : boolean) : void;
	resetCamelWords() : void;
	isAdditionalPageAtBottom() : boolean;
	setAdditionalPageAtBottom(arg1 : boolean) : void;
	isDndEnabled() : boolean;
	setDndEnabled(arg1 : boolean) : void;
	isWheelFontChangeEnabled() : boolean;
	setWheelFontChangeEnabled(arg1 : boolean) : void;
	isMouseClickSelectionHonorsCamelWords() : boolean;
	setMouseClickSelectionHonorsCamelWords(arg1 : boolean) : void;
	isVariableInplaceRenameEnabled() : boolean;
	setVariableInplaceRenameEnabled(arg1 : boolean) : void;
	isRefrainFromScrolling() : boolean;
	setRefrainFromScrolling(arg1 : boolean) : void;
	isIndentGuidesShown() : boolean;
	setIndentGuidesShown(arg1 : boolean) : void;
	isUseSoftWraps() : boolean;
	setUseSoftWraps(arg1 : boolean) : void;
	isAllSoftWrapsShown() : boolean;
	isUseCustomSoftWrapIndent() : boolean;
	setUseCustomSoftWrapIndent(arg1 : boolean) : void;
	getCustomSoftWrapIndent() : number;
	setCustomSoftWrapIndent(arg1 : number) : void;
	isAllowSingleLogicalLineFolding() : boolean;
	setAllowSingleLogicalLineFolding(arg1 : boolean) : void;
	isPreselectRename() : boolean;
	setPreselectRename(arg1 : boolean) : void;
	isShowIntentionBulb() : boolean;
	setShowIntentionBulb(arg1 : boolean) : void;
}

export = EditorSettings
