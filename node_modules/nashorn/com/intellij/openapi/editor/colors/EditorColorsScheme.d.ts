import Color = require('nashorn/java/awt/Color');
import FontPreferences = require('nashorn/com/intellij/openapi/editor/colors/FontPreferences');
import FontSize = require('nashorn/com/intellij/openapi/options/FontSize');
import TextAttributesKey = require('nashorn/com/intellij/openapi/editor/colors/TextAttributesKey');
import TextAttributes = require('nashorn/com/intellij/openapi/editor/markup/TextAttributes');
import ColorKey = require('nashorn/com/intellij/openapi/editor/colors/ColorKey');
import EditorFontType = require('nashorn/com/intellij/openapi/editor/colors/EditorFontType');
import Font = require('nashorn/java/awt/Font');
import Element = require('nashorn/org/jdom/Element');
import Cloneable = require('nashorn/java/lang/Cloneable');
import TextAttributesScheme = require('nashorn/com/intellij/openapi/editor/colors/TextAttributesScheme');
import Scheme = require('nashorn/com/intellij/openapi/options/Scheme');

declare class EditorColorsScheme {
	static DEFAULT_SCHEME_NAME : string;
	defaultBackground : Color;
	defaultForeground : Color;
	fontPreferences : FontPreferences;
	editorFontName : string;
	editorFontSize : number;
	quickDocFontSize : FontSize;
	lineSpacing : number;
	consoleFontPreferences : FontPreferences;
	consoleFontName : string;
	consoleFontSize : number;
	consoleLineSpacing : number;
	setName(arg1 : string) : void;
	setAttributes(arg1 : TextAttributesKey, arg2 : TextAttributes) : void;
	getDefaultBackground() : Color;
	getDefaultForeground() : Color;
	getColor(arg1 : ColorKey) : Color;
	setColor(arg1 : ColorKey, arg2 : Color) : void;
	getFontPreferences() : FontPreferences;
	setFontPreferences(arg1 : FontPreferences) : void;
	getEditorFontName() : string;
	setEditorFontName(arg1 : string) : void;
	getEditorFontSize() : number;
	setEditorFontSize(arg1 : number) : void;
	getQuickDocFontSize() : FontSize;
	setQuickDocFontSize(arg1 : FontSize) : void;
	getFont(arg1 : EditorFontType) : Font;
	setFont(arg1 : EditorFontType, arg2 : Font) : void;
	getLineSpacing() : number;
	setLineSpacing(arg1 : number) : void;
	getConsoleFontPreferences() : FontPreferences;
	setConsoleFontPreferences(arg1 : FontPreferences) : void;
	getConsoleFontName() : string;
	setConsoleFontName(arg1 : string) : void;
	getConsoleFontSize() : number;
	setConsoleFontSize(arg1 : number) : void;
	getConsoleLineSpacing() : number;
	setConsoleLineSpacing(arg1 : number) : void;
	readExternal(arg1 : Element) : void;
}


declare interface EditorColorsScheme extends Cloneable, TextAttributesScheme, Scheme {}
export = EditorColorsScheme
