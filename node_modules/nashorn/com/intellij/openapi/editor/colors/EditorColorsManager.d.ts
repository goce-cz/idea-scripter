import Object = require('nashorn/java/lang/Object');
import EditorColorsScheme = require('nashorn/com/intellij/openapi/editor/colors/EditorColorsScheme');
import EditorColorsListener = require('nashorn/com/intellij/openapi/editor/colors/EditorColorsListener');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');

declare class EditorColorsManager extends Object {
	static DEFAULT_SCHEME_NAME : string;
	static instance : EditorColorsManager;
	allSchemes : EditorColorsScheme[];
	globalScheme : EditorColorsScheme;
	useOnlyMonospacedFonts : boolean;
	constructor();
	static getInstance() : EditorColorsManager;
	addColorsScheme(arg1 : EditorColorsScheme) : void;
	removeAllSchemes() : void;
	getAllSchemes() : EditorColorsScheme[];
	setGlobalScheme(arg1 : EditorColorsScheme) : void;
	getGlobalScheme() : EditorColorsScheme;
	getScheme(arg1 : string) : EditorColorsScheme;
	isDefaultScheme(arg1 : EditorColorsScheme) : boolean;
	addEditorColorsListener(arg1 : EditorColorsListener) : void;
	removeEditorColorsListener(arg1 : EditorColorsListener) : void;
	addEditorColorsListener(arg1 : EditorColorsListener, arg2 : Disposable) : void;
	isUseOnlyMonospacedFonts() : boolean;
	setUseOnlyMonospacedFonts(arg1 : boolean) : void;
}

export = EditorColorsManager
