import TextAttributes = require('nashorn/com/intellij/openapi/editor/markup/TextAttributes');
import Element = require('nashorn/org/jdom/Element');
import Comparable = require('nashorn/java/lang/Comparable');
import Object = require('nashorn/java/lang/Object');

declare class TextAttributesKey {
	externalName : string;
	defaultAttributes : TextAttributes;
	fallbackAttributeKey : TextAttributesKey;
	constructor(arg1 : Element);
	static find(arg1 : string) : TextAttributesKey;
	getExternalName() : string;
	static createTextAttributesKey(arg1 : string) : TextAttributesKey;
	writeExternal(arg1 : Element) : void;
	getDefaultAttributes() : TextAttributes;
	static createTextAttributesKey(arg1 : string, arg2 : TextAttributes) : TextAttributesKey;
	static createTextAttributesKey(arg1 : string, arg2 : TextAttributesKey) : TextAttributesKey;
	getFallbackAttributeKey() : TextAttributesKey;
	setFallbackAttributeKey(arg1 : TextAttributesKey) : void;
}


declare interface TextAttributesKey extends Comparable<TextAttributesKey> {}

declare module TextAttributesKey {
	class TextAttributeKeyDefaultsProvider extends Object {
		getDefaultAttributes(arg1 : TextAttributesKey) : TextAttributes;
	}
}

export = TextAttributesKey
