import Document = require('nashorn/com/intellij/openapi/editor/Document');
import JComponent = require('nashorn/javax/swing/JComponent');
import Insets = require('nashorn/java/awt/Insets');
import SelectionModel = require('nashorn/com/intellij/openapi/editor/SelectionModel');
import MarkupModel = require('nashorn/com/intellij/openapi/editor/markup/MarkupModel');
import FoldingModel = require('nashorn/com/intellij/openapi/editor/FoldingModel');
import ScrollingModel = require('nashorn/com/intellij/openapi/editor/ScrollingModel');
import CaretModel = require('nashorn/com/intellij/openapi/editor/CaretModel');
import SoftWrapModel = require('nashorn/com/intellij/openapi/editor/SoftWrapModel');
import EditorSettings = require('nashorn/com/intellij/openapi/editor/EditorSettings');
import EditorColorsScheme = require('nashorn/com/intellij/openapi/editor/colors/EditorColorsScheme');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import EditorGutter = require('nashorn/com/intellij/openapi/editor/EditorGutter');
import IndentsModel = require('nashorn/com/intellij/openapi/editor/IndentsModel');
import Border = require('nashorn/javax/swing/border/Border');
import LogicalPosition = require('nashorn/com/intellij/openapi/editor/LogicalPosition');
import Point = require('nashorn/java/awt/Point');
import VisualPosition = require('nashorn/com/intellij/openapi/editor/VisualPosition');
import EditorMouseListener = require('nashorn/com/intellij/openapi/editor/event/EditorMouseListener');
import EditorMouseMotionListener = require('nashorn/com/intellij/openapi/editor/event/EditorMouseMotionListener');
import MouseEvent = require('nashorn/java/awt/event/MouseEvent');
import EditorMouseEventArea = require('nashorn/com/intellij/openapi/editor/event/EditorMouseEventArea');
import UserDataHolder = require('nashorn/com/intellij/openapi/util/UserDataHolder');

declare class Editor {
	static EMPTY_ARRAY : Editor[];
	document : Document;
	viewer : boolean;
	component : JComponent;
	contentComponent : JComponent;
	insets : Insets;
	selectionModel : SelectionModel;
	markupModel : MarkupModel;
	foldingModel : FoldingModel;
	scrollingModel : ScrollingModel;
	caretModel : CaretModel;
	softWrapModel : SoftWrapModel;
	settings : EditorSettings;
	colorsScheme : EditorColorsScheme;
	lineHeight : number;
	disposed : boolean;
	project : Project;
	insertMode : boolean;
	columnMode : boolean;
	oneLineMode : boolean;
	gutter : EditorGutter;
	headerComponent : JComponent;
	indentsModel : IndentsModel;
	getDocument() : Document;
	isViewer() : boolean;
	getComponent() : JComponent;
	getContentComponent() : JComponent;
	setBorder(arg1 : Border) : void;
	getInsets() : Insets;
	getSelectionModel() : SelectionModel;
	getMarkupModel() : MarkupModel;
	getFoldingModel() : FoldingModel;
	getScrollingModel() : ScrollingModel;
	getCaretModel() : CaretModel;
	getSoftWrapModel() : SoftWrapModel;
	getSettings() : EditorSettings;
	getColorsScheme() : EditorColorsScheme;
	getLineHeight() : number;
	logicalPositionToXY(arg1 : LogicalPosition) : Point;
	logicalPositionToOffset(arg1 : LogicalPosition) : number;
	logicalToVisualPosition(arg1 : LogicalPosition) : VisualPosition;
	visualPositionToXY(arg1 : VisualPosition) : Point;
	visualToLogicalPosition(arg1 : VisualPosition) : LogicalPosition;
	offsetToLogicalPosition(arg1 : number) : LogicalPosition;
	offsetToVisualPosition(arg1 : number) : VisualPosition;
	xyToLogicalPosition(arg1 : Point) : LogicalPosition;
	xyToVisualPosition(arg1 : Point) : VisualPosition;
	addEditorMouseListener(arg1 : EditorMouseListener) : void;
	removeEditorMouseListener(arg1 : EditorMouseListener) : void;
	addEditorMouseMotionListener(arg1 : EditorMouseMotionListener) : void;
	removeEditorMouseMotionListener(arg1 : EditorMouseMotionListener) : void;
	isDisposed() : boolean;
	getProject() : Project;
	isInsertMode() : boolean;
	isColumnMode() : boolean;
	isOneLineMode() : boolean;
	getGutter() : EditorGutter;
	getMouseEventArea(arg1 : MouseEvent) : EditorMouseEventArea;
	setHeaderComponent(arg1 : JComponent) : void;
	hasHeaderComponent() : boolean;
	getHeaderComponent() : JComponent;
	getIndentsModel() : IndentsModel;
}


declare interface Editor extends UserDataHolder {}
export = Editor
