import Object = require('nashorn/java/lang/Object');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import DataContext = require('nashorn/com/intellij/openapi/actionSystem/DataContext');
import Caret = require('nashorn/com/intellij/openapi/editor/Caret');
import DocCommandGroupId = require('nashorn/com/intellij/openapi/editor/actionSystem/DocCommandGroupId');

declare class EditorActionHandler extends Object {
	isEnabled(arg1 : Editor, arg2 : DataContext) : boolean;
	doIfEnabled(arg1 : Caret, arg2 : DataContext, arg3 : EditorActionHandler.CaretTask) : void;
	isEnabledForCaret(arg1 : Editor, arg2 : Caret, arg3 : DataContext) : boolean;
	isEnabled(arg1 : Editor, arg2 : Caret, arg3 : DataContext) : boolean;
	execute(arg1 : Editor, arg2 : DataContext) : void;
	doExecute(arg1 : Editor, arg2 : Caret, arg3 : DataContext) : void;
	executeInCommand(arg1 : Editor, arg2 : DataContext) : boolean;
	runForAllCarets() : boolean;
	execute(arg1 : Editor, arg2 : Caret, arg3 : DataContext) : void;
	setWorksInInjected(arg1 : boolean) : void;
	getCommandGroupId(arg1 : Editor) : DocCommandGroupId;
}


declare module EditorActionHandler {
	class CaretTask extends Object {
		perform(arg1 : Caret, arg2 : DataContext) : void;
	}
}

export = EditorActionHandler
