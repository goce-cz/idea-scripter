import TextAttributes = require('nashorn/com/intellij/openapi/editor/markup/TextAttributes');
import Point = require('nashorn/java/awt/Point');
import FoldRegion = require('nashorn/com/intellij/openapi/editor/FoldRegion');
import FoldingGroup = require('nashorn/com/intellij/openapi/editor/FoldingGroup');
import FoldingListener = require('nashorn/com/intellij/openapi/editor/ex/FoldingListener');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import FoldingModel = require('nashorn/com/intellij/openapi/editor/FoldingModel');

declare class FoldingModelEx {
	foldingEnabled : boolean;
	placeholderAttributes : TextAttributes;
	setFoldingEnabled(arg1 : boolean) : void;
	isFoldingEnabled() : boolean;
	getFoldingPlaceholderAt(arg1 : Point) : FoldRegion;
	intersectsRegion(arg1 : number, arg2 : number) : boolean;
	fetchOutermost(arg1 : number) : FoldRegion;
	getLastCollapsedRegionBefore(arg1 : number) : number;
	getPlaceholderAttributes() : TextAttributes;
	fetchTopLevel() : FoldRegion[];
	createFoldRegion(arg1 : number, arg2 : number, arg3 : string, arg4 : FoldingGroup, arg5 : boolean) : FoldRegion;
	addListener(arg1 : FoldingListener, arg2 : Disposable) : void;
	clearFoldRegions() : void;
	rebuild() : void;
}


declare interface FoldingModelEx extends FoldingModel {}
export = FoldingModelEx
