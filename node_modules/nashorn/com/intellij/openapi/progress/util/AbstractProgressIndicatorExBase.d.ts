import TaskInfo = require('nashorn/com/intellij/openapi/progress/TaskInfo');
import AbstractProgressIndicatorBase = require('nashorn/com/intellij/openapi/progress/util/AbstractProgressIndicatorBase');
import ProgressIndicatorEx = require('nashorn/com/intellij/openapi/wm/ex/ProgressIndicatorEx');
import Object = require('nashorn/java/lang/Object');

declare class AbstractProgressIndicatorExBase {
	canceled : boolean;
	modalityEntered : boolean;
	constructor(arg1 : boolean);
	constructor();
	enterModality() : void;
	a() : void;
	exitModality() : void;
	b() : void;
	setOwnerTask(arg1 : TaskInfo) : void;
	a(arg1 : AbstractProgressIndicatorExBase.IndicatorAction) : void;
	delegateRunningChange(arg1 : AbstractProgressIndicatorExBase.IndicatorAction) : void;
	b(arg1 : AbstractProgressIndicatorExBase.IndicatorAction) : void;
	onProgressChange() : void;
	onRunningChange() : void;
}


declare interface AbstractProgressIndicatorExBase extends AbstractProgressIndicatorBase, ProgressIndicatorEx {}

declare module AbstractProgressIndicatorExBase {
	class IndicatorAction extends Object {
		execute(arg1 : ProgressIndicatorEx) : void;
	}
}

export = AbstractProgressIndicatorExBase
