import SyncDateFormat = require('nashorn/com/intellij/util/text/SyncDateFormat');
import Date = require('nashorn/java/util/Date');
import List = require('nashorn/java/util/List');
import ArrayList = require('nashorn/java/util/ArrayList');
import CommittedChangeList = require('nashorn/com/intellij/openapi/vcs/versionBrowser/CommittedChangeList');
import JDOMExternalizable = require('nashorn/com/intellij/openapi/util/JDOMExternalizable');
import Object = require('nashorn/java/lang/Object');

declare class ChangeBrowserSettings {
	static HEAD : string;
	static DATE_FORMAT : SyncDateFormat;
	USE_DATE_BEFORE_FILTER : boolean;
	USE_DATE_AFTER_FILTER : boolean;
	USE_CHANGE_BEFORE_FILTER : boolean;
	USE_CHANGE_AFTER_FILTER : boolean;
	DATE_BEFORE : string;
	DATE_AFTER : string;
	CHANGE_BEFORE : string;
	CHANGE_AFTER : string;
	USE_USER_FILTER : boolean;
	USER : string;
	STOP_ON_COPY : boolean;
	dateBefore : Date;
	dateAfter : Date;
	changeBeforeFilter : number;
	dateBeforeFilter : Date;
	changeAfterFilter : number;
	dateAfterFilter : Date;
	userFilter : string;
	anyFilterSpecified : boolean;
	nonDateFilterSpecified : boolean;
	constructor();
	static parseDate(arg1 : string) : Date;
	setDateBefore(arg1 : Date) : void;
	getDateBefore() : Date;
	getDateAfter() : Date;
	getChangeBeforeFilter() : number;
	getDateBeforeFilter() : Date;
	getChangeAfterFilter() : number;
	getDateAfterFilter() : Date;
	setDateAfter(arg1 : Date) : void;
	createFilters() : List<ChangeBrowserSettings.Filter>;
	static addDateFilter(arg1 : boolean, arg2 : Date, arg3 : ArrayList<ChangeBrowserSettings.Filter>, arg4 : boolean) : void;
	createFilter() : ChangeBrowserSettings.Filter;
	filterChanges(arg1 : List<CommittedChangeList>) : void;
	getUserFilter() : string;
	isAnyFilterSpecified() : boolean;
	isNonDateFilterSpecified() : boolean;
}


declare interface ChangeBrowserSettings extends JDOMExternalizable {}

declare module ChangeBrowserSettings {
	class Filter extends Object {
		accepts(arg1 : CommittedChangeList) : boolean;
	}
}

export = ChangeBrowserSettings
