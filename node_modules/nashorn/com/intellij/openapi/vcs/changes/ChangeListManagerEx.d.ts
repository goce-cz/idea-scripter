import Change = require('nashorn/com/intellij/openapi/vcs/changes/Change');
import LocalChangeList = require('nashorn/com/intellij/openapi/vcs/changes/LocalChangeList');
import Collection = require('nashorn/java/util/Collection');
import List = require('nashorn/java/util/List');
import Object = require('nashorn/java/lang/Object');
import ChangeListManager = require('nashorn/com/intellij/openapi/vcs/changes/ChangeListManager');

declare class ChangeListManagerEx {
	inUpdate : boolean;
	constructor();
	getIdentityChangeList(arg1 : Change) : LocalChangeList;
	isInUpdate() : boolean;
	getInvolvedListsFilterChanges(arg1 : Collection<Change>, arg2 : List<Change>) : Collection<LocalChangeList>;
	freezeImmediately(arg1 : string) : void;
	addChangeList(arg1 : string, arg2 : string, arg3 : Object) : LocalChangeList;
	blockModalNotifications() : void;
	unblockModalNotifications() : void;
}


declare interface ChangeListManagerEx extends ChangeListManager {}
export = ChangeListManagerEx
