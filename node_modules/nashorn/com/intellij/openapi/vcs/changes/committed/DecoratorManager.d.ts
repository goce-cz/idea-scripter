import Object = require('nashorn/java/lang/Object');
import CommittedChangeListDecorator = require('nashorn/com/intellij/openapi/vcs/changes/committed/CommittedChangeListDecorator');
import CommittedChangeListsListener = require('nashorn/com/intellij/openapi/vcs/changes/committed/CommittedChangeListsListener');
import CommittedChangesFilterKey = require('nashorn/com/intellij/openapi/vcs/changes/committed/CommittedChangesFilterKey');
import ChangeListFilteringStrategy = require('nashorn/com/intellij/openapi/vcs/changes/committed/ChangeListFilteringStrategy');

declare class DecoratorManager extends Object {
	install(arg1 : CommittedChangeListDecorator) : void;
	remove(arg1 : CommittedChangeListDecorator) : void;
	repaintTree() : void;
	reportLoadedLists(arg1 : CommittedChangeListsListener) : void;
	removeFilteringStrategy(arg1 : CommittedChangesFilterKey) : void;
	setFilteringStrategy(arg1 : ChangeListFilteringStrategy) : boolean;
}

export = DecoratorManager
