import Object = require('nashorn/java/lang/Object');
import Change = require('nashorn/com/intellij/openapi/vcs/changes/Change');
import VcsKey = require('nashorn/com/intellij/openapi/vcs/VcsKey');
import ChangeList = require('nashorn/com/intellij/openapi/vcs/changes/ChangeList');
import FilePath = require('nashorn/com/intellij/openapi/vcs/FilePath');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import LocallyDeletedChange = require('nashorn/com/intellij/openapi/vcs/changes/LocallyDeletedChange');
import LogicalLock = require('nashorn/com/intellij/openapi/vcs/changes/LogicalLock');
import Factory = require('nashorn/com/intellij/openapi/util/Factory');
import JComponent = require('nashorn/javax/swing/JComponent');

declare class ChangelistBuilder extends Object {
	processChange(arg1 : Change, arg2 : VcsKey) : void;
	processChangeInList(arg1 : Change, arg2 : ChangeList, arg3 : VcsKey) : void;
	processChangeInList(arg1 : Change, arg2 : string, arg3 : VcsKey) : void;
	removeRegisteredChangeFor(arg1 : FilePath) : void;
	processUnversionedFile(arg1 : VirtualFile) : void;
	processLocallyDeletedFile(arg1 : FilePath) : void;
	processLocallyDeletedFile(arg1 : LocallyDeletedChange) : void;
	processModifiedWithoutCheckout(arg1 : VirtualFile) : void;
	processIgnoredFile(arg1 : VirtualFile) : void;
	processLockedFolder(arg1 : VirtualFile) : void;
	processLogicallyLockedFolder(arg1 : VirtualFile, arg2 : LogicalLock) : void;
	processSwitchedFile(arg1 : VirtualFile, arg2 : string, arg3 : boolean) : void;
	processRootSwitch(arg1 : VirtualFile, arg2 : string) : void;
	reportChangesOutsideProject() : boolean;
	reportAdditionalInfo(arg1 : string) : void;
	reportAdditionalInfo(arg1 : Factory<JComponent>) : void;
}

export = ChangelistBuilder
