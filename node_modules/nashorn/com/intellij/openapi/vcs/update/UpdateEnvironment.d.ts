import UpdatedFiles = require('nashorn/com/intellij/openapi/vcs/update/UpdatedFiles');
import FilePath = require('nashorn/com/intellij/openapi/vcs/FilePath');
import ProgressIndicator = require('nashorn/com/intellij/openapi/progress/ProgressIndicator');
import Ref = require('nashorn/com/intellij/openapi/util/Ref');
import SequentialUpdatesContext = require('nashorn/com/intellij/openapi/vcs/update/SequentialUpdatesContext');
import UpdateSession = require('nashorn/com/intellij/openapi/vcs/update/UpdateSession');
import Collection = require('nashorn/java/util/Collection');
import Configurable = require('nashorn/com/intellij/openapi/options/Configurable');
import VcsProviderMarker = require('nashorn/com/intellij/openapi/vcs/VcsProviderMarker');

declare class UpdateEnvironment {
	fillGroups(arg1 : UpdatedFiles) : void;
	updateDirectories(arg1 : FilePath[], arg2 : UpdatedFiles, arg3 : ProgressIndicator, arg4 : Ref<SequentialUpdatesContext>) : UpdateSession;
	createConfigurable(arg1 : Collection<FilePath>) : Configurable;
	validateOptions(arg1 : Collection<FilePath>) : boolean;
}


declare interface UpdateEnvironment extends VcsProviderMarker {}
export = UpdateEnvironment
