import Object = require('nashorn/java/lang/Object');
import ThrowableRunnable = require('nashorn/com/intellij/util/ThrowableRunnable');
import VcsException = require('nashorn/com/intellij/openapi/vcs/VcsException');
import List = require('nashorn/java/util/List');

declare class StartedActivated extends Object {
	start() : void;
	shutdown() : void;
	activate() : void;
	deactivate() : void;
	callImpl(arg1 : StartedActivated.MySection, arg2 : boolean) : void;
	doStart() : void;
	doShutdown() : void;
	doActivate() : void;
	doDeactivate() : void;
}


declare module StartedActivated {
	class MySection extends Object {
		constructor(arg1 : ThrowableRunnable<VcsException>, arg2 : ThrowableRunnable<VcsException>);
		start(arg1 : List<ThrowableRunnable<VcsException>>) : void;
		stop(arg1 : List<ThrowableRunnable<VcsException>>) : void;
		setMaster(arg1 : StartedActivated.MySection) : void;
		setDependent(arg1 : StartedActivated.MySection) : void;
	}
}

export = StartedActivated
