import List = require('nashorn/java/util/List');
import Change = require('nashorn/com/intellij/openapi/vcs/changes/Change');
import VcsException = require('nashorn/com/intellij/openapi/vcs/VcsException');
import RollbackProgressListener = require('nashorn/com/intellij/openapi/vcs/rollback/RollbackProgressListener');
import FilePath = require('nashorn/com/intellij/openapi/vcs/FilePath');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import VcsProviderMarker = require('nashorn/com/intellij/openapi/vcs/VcsProviderMarker');

declare class RollbackEnvironment {
	rollbackOperationName : string;
	getRollbackOperationName() : string;
	rollbackChanges(arg1 : List<Change>, arg2 : List<VcsException>, arg3 : RollbackProgressListener) : void;
	rollbackMissingFileDeletion(arg1 : List<FilePath>, arg2 : List<VcsException>, arg3 : RollbackProgressListener) : void;
	rollbackModifiedWithoutCheckout(arg1 : List<VirtualFile>, arg2 : List<VcsException>, arg3 : RollbackProgressListener) : void;
	rollbackIfUnchanged(arg1 : VirtualFile) : void;
}


declare interface RollbackEnvironment extends VcsProviderMarker {}
export = RollbackEnvironment
