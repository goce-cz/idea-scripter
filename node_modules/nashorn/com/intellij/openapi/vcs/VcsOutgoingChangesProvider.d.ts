import CommittedChangeList = require('nashorn/com/intellij/openapi/vcs/versionBrowser/CommittedChangeList');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import Pair = require('nashorn/com/intellij/openapi/util/Pair');
import VcsRevisionNumber = require('nashorn/com/intellij/openapi/vcs/history/VcsRevisionNumber');
import List = require('nashorn/java/util/List');
import Collection = require('nashorn/java/util/Collection');
import Change = require('nashorn/com/intellij/openapi/vcs/changes/Change');
import FilePath = require('nashorn/com/intellij/openapi/vcs/FilePath');
import Date = require('nashorn/java/util/Date');
import VcsProviderMarker = require('nashorn/com/intellij/openapi/vcs/VcsProviderMarker');

declare class VcsOutgoingChangesProvider<T extends CommittedChangeList> {
	getOutgoingChanges(arg1 : VirtualFile, arg2 : boolean) : Pair<VcsRevisionNumber, List<T>>;
	getMergeBaseNumber(arg1 : VirtualFile) : VcsRevisionNumber;
	filterLocalChangesBasedOnLocalCommits(arg1 : Collection<Change>, arg2 : VirtualFile) : Collection<Change>;
	getRevisionDate(arg1 : VcsRevisionNumber, arg2 : FilePath) : Date;
}


declare interface VcsOutgoingChangesProvider<T extends CommittedChangeList> extends VcsProviderMarker {}
export = VcsOutgoingChangesProvider
