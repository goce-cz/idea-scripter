import JComponent = require('nashorn/javax/swing/JComponent');
import BackgroundEditorHighlighter = require('nashorn/com/intellij/codeHighlighting/BackgroundEditorHighlighter');
import FileEditorLocation = require('nashorn/com/intellij/openapi/fileEditor/FileEditorLocation');
import StructureViewBuilder = require('nashorn/com/intellij/ide/structureView/StructureViewBuilder');
import FileEditorStateLevel = require('nashorn/com/intellij/openapi/fileEditor/FileEditorStateLevel');
import FileEditorState = require('nashorn/com/intellij/openapi/fileEditor/FileEditorState');
import PropertyChangeListener = require('nashorn/java/beans/PropertyChangeListener');
import UserDataHolder = require('nashorn/com/intellij/openapi/util/UserDataHolder');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');

declare class FileEditor {
	static PROP_MODIFIED : string;
	static PROP_VALID : string;
	component : JComponent;
	preferredFocusedComponent : JComponent;
	name : string;
	modified : boolean;
	valid : boolean;
	backgroundHighlighter : BackgroundEditorHighlighter;
	currentLocation : FileEditorLocation;
	structureViewBuilder : StructureViewBuilder;
	getComponent() : JComponent;
	getPreferredFocusedComponent() : JComponent;
	getName() : string;
	getState(arg1 : FileEditorStateLevel) : FileEditorState;
	setState(arg1 : FileEditorState) : void;
	isModified() : boolean;
	isValid() : boolean;
	selectNotify() : void;
	deselectNotify() : void;
	addPropertyChangeListener(arg1 : PropertyChangeListener) : void;
	removePropertyChangeListener(arg1 : PropertyChangeListener) : void;
	getBackgroundHighlighter() : BackgroundEditorHighlighter;
	getCurrentLocation() : FileEditorLocation;
	getStructureViewBuilder() : StructureViewBuilder;
}


declare interface FileEditor extends UserDataHolder, Disposable {}
export = FileEditor
