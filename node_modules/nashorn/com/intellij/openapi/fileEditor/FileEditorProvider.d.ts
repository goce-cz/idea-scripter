import Object = require('nashorn/java/lang/Object');
import ExtensionPointName = require('nashorn/com/intellij/openapi/extensions/ExtensionPointName');
import Key = require('nashorn/com/intellij/openapi/util/Key');
import FileEditorPolicy = require('nashorn/com/intellij/openapi/fileEditor/FileEditorPolicy');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import FileEditor = require('nashorn/com/intellij/openapi/fileEditor/FileEditor');
import Element = require('nashorn/org/jdom/Element');
import FileEditorState = require('nashorn/com/intellij/openapi/fileEditor/FileEditorState');

declare class FileEditorProvider extends Object {
	static EP_FILE_EDITOR_PROVIDER : ExtensionPointName<FileEditorProvider>;
	static KEY : Key<FileEditorProvider>;
	editorTypeId : string;
	policy : FileEditorPolicy;
	accept(arg1 : Project, arg2 : VirtualFile) : boolean;
	createEditor(arg1 : Project, arg2 : VirtualFile) : FileEditor;
	disposeEditor(arg1 : FileEditor) : void;
	readState(arg1 : Element, arg2 : Project, arg3 : VirtualFile) : FileEditorState;
	writeState(arg1 : FileEditorState, arg2 : Project, arg3 : Element) : void;
	getEditorTypeId() : string;
	getPolicy() : FileEditorPolicy;
}

export = FileEditorProvider
