import FileEditorManager = require('nashorn/com/intellij/openapi/fileEditor/FileEditorManager');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import FileEditor = require('nashorn/com/intellij/openapi/fileEditor/FileEditor');
import FileEditorProvider = require('nashorn/com/intellij/openapi/fileEditor/FileEditorProvider');
import EventObject = require('nashorn/java/util/EventObject');

declare class FileEditorManagerEvent {
	manager : FileEditorManager;
	oldFile : VirtualFile;
	newFile : VirtualFile;
	oldEditor : FileEditor;
	newEditor : FileEditor;
	oldProvider : FileEditorProvider;
	newProvider : FileEditorProvider;
	constructor(arg1 : FileEditorManager, arg2 : VirtualFile, arg3 : FileEditor, arg4 : VirtualFile, arg5 : FileEditor);
	constructor(arg1 : FileEditorManager, arg2 : VirtualFile, arg3 : FileEditor, arg4 : FileEditorProvider, arg5 : VirtualFile, arg6 : FileEditor, arg7 : FileEditorProvider);
	getManager() : FileEditorManager;
	getOldFile() : VirtualFile;
	getNewFile() : VirtualFile;
	getOldEditor() : FileEditor;
	getNewEditor() : FileEditor;
	getOldProvider() : FileEditorProvider;
	getNewProvider() : FileEditorProvider;
}


declare interface FileEditorManagerEvent extends EventObject {}
export = FileEditorManagerEvent
