import Document = require('nashorn/com/intellij/openapi/editor/Document');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import SavingRequestor = require('nashorn/com/intellij/openapi/vfs/SavingRequestor');

declare class FileDocumentManager {
	static instance : FileDocumentManager;
	unsavedDocuments : Document[];
	constructor();
	static getInstance() : FileDocumentManager;
	getDocument(arg1 : VirtualFile) : Document;
	getCachedDocument(arg1 : VirtualFile) : Document;
	getFile(arg1 : Document) : VirtualFile;
	saveAllDocuments() : void;
	saveDocument(arg1 : Document) : void;
	saveDocumentAsIs(arg1 : Document) : void;
	getUnsavedDocuments() : Document[];
	isDocumentUnsaved(arg1 : Document) : boolean;
	isFileModified(arg1 : VirtualFile) : boolean;
	reloadFromDisk(arg1 : Document) : void;
	getLineSeparator(arg1 : VirtualFile, arg2 : Project) : string;
	requestWriting(arg1 : Document, arg2 : Project) : boolean;
	static fileForDocumentCheckedOutSuccessfully(arg1 : Document, arg2 : Project) : boolean;
	reloadFiles(arg1 : VirtualFile[]) : void;
}


declare interface FileDocumentManager extends SavingRequestor {}
export = FileDocumentManager
