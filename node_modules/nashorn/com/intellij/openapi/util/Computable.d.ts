import Object = require('nashorn/java/lang/Object');

declare class Computable<T> extends Object {
	compute() : T;
}


declare module Computable {
	class NullableCachedComputable<T> {
		constructor();
		internalCompute() : T;
	}


	interface NullableCachedComputable<T> extends Computable<T> {}	class NotNullCachedComputable<T> {
		constructor();
		internalCompute() : T;
	}


	interface NotNullCachedComputable<T> extends Computable<T> {}	class PredefinedValueComputable<T> {
		constructor(arg1 : T);
	}


	interface PredefinedValueComputable<T> extends Computable<T> {}}

export = Computable
