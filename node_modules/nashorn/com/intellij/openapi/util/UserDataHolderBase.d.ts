import Key = require('nashorn/com/intellij/openapi/util/Key');
import KeyFMap = require('nashorn/com/intellij/util/keyFMap/KeyFMap');
import UserDataHolderEx = require('nashorn/com/intellij/openapi/util/UserDataHolderEx');
import Cloneable = require('nashorn/java/lang/Cloneable');

declare class UserDataHolderBase {
	static COPYABLE_USER_MAP_KEY : Key<KeyFMap>;
	userDataString : string;
	userDataEmpty : boolean;
	constructor();
	getUserDataString() : string;
	copyUserDataTo(arg1 : UserDataHolderBase) : void;
	getUserMap() : KeyFMap;
	changeUserMap(arg1 : KeyFMap, arg2 : KeyFMap) : boolean;
	getCopyableUserData<T>(arg1 : Key<T>) : T;
	putCopyableUserData<T>(arg1 : Key<T>, arg2 : T) : void;
	copyCopyableDataTo(arg1 : UserDataHolderBase) : void;
	clearUserData() : void;
	setUserMap(arg1 : KeyFMap) : void;
	isUserDataEmpty() : boolean;
}


declare interface UserDataHolderBase extends UserDataHolderEx, Cloneable {}
export = UserDataHolderBase
