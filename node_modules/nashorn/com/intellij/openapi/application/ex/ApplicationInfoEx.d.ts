import Calendar = require('nashorn/java/util/Calendar');
import Color = require('nashorn/java/awt/Color');
import List = require('nashorn/java/util/List');
import ApplicationInfo = require('nashorn/com/intellij/openapi/application/ApplicationInfo');
import Object = require('nashorn/java/lang/Object');

declare class ApplicationInfoEx {
	static instanceEx : ApplicationInfoEx;
	majorReleaseBuildDate : Calendar;
	splashImageUrl : string;
	splashTextColor : Color;
	aboutImageUrl : string;
	iconUrl : string;
	smallIconUrl : string;
	bigIconUrl : string;
	toolWindowIconUrl : string;
	welcomeScreenLogoUrl : string;
	editorBackgroundImageUrl : string;
	packageCode : string;
	fullApplicationName : string;
	eAP : boolean;
	updateUrls : ApplicationInfoEx.UpdateUrls;
	documentationUrl : string;
	supportUrl : string;
	eAPFeedbackUrl : string;
	releaseFeedbackUrl : string;
	pluginManagerUrl : string;
	pluginsListUrl : string;
	pluginsDownloadUrl : string;
	builtinPluginsUrl : string;
	webHelpUrl : string;
	whatsNewUrl : string;
	winKeymapUrl : string;
	macKeymapUrl : string;
	aboutForeground : Color;
	pluginChooserPages : List<ApplicationInfoEx.PluginChooserPage>;
	opaqueIconUrl : string;
	welcomeScreenCaptionUrl : string;
	welcomeScreenDeveloperSloganUrl : string;
	customizeIDEWizardStepsProvider : string;
	constructor();
	static getInstanceEx() : ApplicationInfoEx;
	getMajorReleaseBuildDate() : Calendar;
	getSplashImageUrl() : string;
	getSplashTextColor() : Color;
	getAboutImageUrl() : string;
	getIconUrl() : string;
	getSmallIconUrl() : string;
	getBigIconUrl() : string;
	getToolWindowIconUrl() : string;
	getWelcomeScreenLogoUrl() : string;
	getEditorBackgroundImageUrl() : string;
	getPackageCode() : string;
	getFullApplicationName() : string;
	showLicenseeInfo() : boolean;
	isEAP() : boolean;
	getUpdateUrls() : ApplicationInfoEx.UpdateUrls;
	getDocumentationUrl() : string;
	getSupportUrl() : string;
	getEAPFeedbackUrl() : string;
	getReleaseFeedbackUrl() : string;
	getPluginManagerUrl() : string;
	getPluginsListUrl() : string;
	getPluginsDownloadUrl() : string;
	getBuiltinPluginsUrl() : string;
	getWebHelpUrl() : string;
	getWhatsNewUrl() : string;
	getWinKeymapUrl() : string;
	getMacKeymapUrl() : string;
	getAboutForeground() : Color;
	getPluginChooserPages() : List<ApplicationInfoEx.PluginChooserPage>;
	isEssentialPlugin(arg1 : string) : boolean;
	getOpaqueIconUrl() : string;
	getWelcomeScreenCaptionUrl() : string;
	getWelcomeScreenDeveloperSloganUrl() : string;
	getCustomizeIDEWizardStepsProvider() : string;
}


declare interface ApplicationInfoEx extends ApplicationInfo {}

declare module ApplicationInfoEx {
	class PluginChooserPage extends Object {
		title : string;
		category : string;
		dependentPlugin : string;
		getTitle() : string;
		getCategory() : string;
		getDependentPlugin() : string;
	}
	class UpdateUrls extends Object {
		checkingUrl : string;
		patchesUrl : string;
		getCheckingUrl() : string;
		getPatchesUrl() : string;
	}
}

export = ApplicationInfoEx
