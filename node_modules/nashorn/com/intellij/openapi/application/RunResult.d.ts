import Throwable = require('nashorn/java/lang/Throwable');
import BaseActionRunnable = require('nashorn/com/intellij/openapi/application/BaseActionRunnable');
import Logger = require('nashorn/com/intellij/openapi/diagnostic/Logger');
import Exception = require('nashorn/java/lang/Exception');
import Result = require('nashorn/com/intellij/openapi/application/Result');

declare class RunResult<T> {
	resultObject : T;
	throwable : Throwable;
	constructor(arg1 : BaseActionRunnable<T>);
	run() : RunResult<T>;
	getResultObject() : T;
	logException(arg1 : Logger) : RunResult;
	throwException() : RunResult<T>;
	hasException() : boolean;
	getThrowable() : Throwable;
	setThrowable(arg1 : Exception) : void;
}


declare interface RunResult<T> extends Result<T> {}
export = RunResult
