import PluginDescriptor = require('nashorn/com/intellij/openapi/extensions/PluginDescriptor');
import ClassLoader = require('nashorn/java/lang/ClassLoader');
import Class = require('nashorn/java/lang/Class');
import PicoContainer = require('nashorn/org/picocontainer/PicoContainer');
import PluginAware = require('nashorn/com/intellij/openapi/extensions/PluginAware');

declare class AbstractExtensionPointBean {
	pluginDescriptor : PluginDescriptor;
	loaderForClass : ClassLoader;
	constructor();
	getPluginDescriptor() : PluginDescriptor;
	findClass<T>(arg1 : string) : Class<T>;
	findClassNoExceptions<T>(arg1 : string) : Class<T>;
	getLoaderForClass() : ClassLoader;
	instantiate<T>(arg1 : string, arg2 : PicoContainer) : T;
	static instantiate<T>(arg1 : Class<T>, arg2 : PicoContainer) : T;
	static instantiate<T>(arg1 : Class<T>, arg2 : PicoContainer, arg3 : boolean) : T;
}


declare interface AbstractExtensionPointBean extends PluginAware {}
export = AbstractExtensionPointBean
