import InputEvent = require('nashorn/java/awt/event/InputEvent');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import DataContext = require('nashorn/com/intellij/openapi/actionSystem/DataContext');
import Presentation = require('nashorn/com/intellij/openapi/actionSystem/Presentation');
import ActionManager = require('nashorn/com/intellij/openapi/actionSystem/ActionManager');
import AnAction = require('nashorn/com/intellij/openapi/actionSystem/AnAction');
import DataKey = require('nashorn/com/intellij/openapi/actionSystem/DataKey');
import AnActionEventVisitor = require('nashorn/com/intellij/openapi/actionSystem/AnActionEventVisitor');
import PlaceProvider = require('nashorn/com/intellij/ui/PlaceProvider');

declare class AnActionEvent {
	inputEvent : InputEvent;
	project : Project;
	dataContext : DataContext;
	place : string;
	presentation : Presentation;
	modifiers : number;
	actionManager : ActionManager;
	inInjectedContext : boolean;
	constructor(arg1 : InputEvent, arg2 : DataContext, arg3 : string, arg4 : Presentation, arg5 : ActionManager, arg6 : number);
	static createFromInputEvent(arg1 : AnAction, arg2 : InputEvent, arg3 : string) : AnActionEvent;
	static createFromAnAction(arg1 : AnAction, arg2 : InputEvent, arg3 : string, arg4 : DataContext) : AnActionEvent;
	static createFromDataContext(arg1 : string, arg2 : Presentation, arg3 : DataContext) : AnActionEvent;
	static createFromInputEvent(arg1 : InputEvent, arg2 : string, arg3 : Presentation, arg4 : DataContext) : AnActionEvent;
	getInputEvent() : InputEvent;
	getProject() : Project;
	static injectedId(arg1 : string) : string;
	static uninjectedId(arg1 : string) : string;
	static getInjectedDataContext(arg1 : DataContext) : DataContext;
	getDataContext() : DataContext;
	getData<T>(arg1 : DataKey<T>) : T;
	getRequiredData<T>(arg1 : DataKey<T>) : T;
	getPresentation() : Presentation;
	getModifiers() : number;
	getActionManager() : ActionManager;
	setInjectedContext(arg1 : boolean) : void;
	isInInjectedContext() : boolean;
	accept(arg1 : AnActionEventVisitor) : void;
}


declare interface AnActionEvent extends PlaceProvider<string> {}
export = AnActionEvent
