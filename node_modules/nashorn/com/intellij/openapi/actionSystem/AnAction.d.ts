import ShortcutSet = require('nashorn/com/intellij/openapi/actionSystem/ShortcutSet');
import Presentation = require('nashorn/com/intellij/openapi/actionSystem/Presentation');
import Icon = require('nashorn/javax/swing/Icon');
import JComponent = require('nashorn/javax/swing/JComponent');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import AnActionEvent = require('nashorn/com/intellij/openapi/actionSystem/AnActionEvent');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import PossiblyDumbAware = require('nashorn/com/intellij/openapi/project/PossiblyDumbAware');
import Object = require('nashorn/java/lang/Object');

declare class AnAction {
	static EMPTY_ARRAY : AnAction[];
	static ourClientProperty : string;
	shortcutSet : ShortcutSet;
	enabledInModalContext : boolean;
	templatePresentation : Presentation;
	defaultIcon : boolean;
	inInjectedContext : boolean;
	transparentUpdate : boolean;
	dumbAware : boolean;
	constructor();
	constructor(arg1 : Icon);
	constructor(arg1 : string);
	constructor(arg1 : string, arg2 : string, arg3 : Icon);
	getShortcutSet() : ShortcutSet;
	registerCustomShortcutSet(arg1 : ShortcutSet, arg2 : JComponent) : void;
	registerCustomShortcutSet(arg1 : number, arg2 : number, arg3 : JComponent) : void;
	registerCustomShortcutSet(arg1 : ShortcutSet, arg2 : JComponent, arg3 : Disposable) : void;
	unregisterCustomShortcutSet(arg1 : JComponent) : void;
	copyFrom(arg1 : AnAction) : void;
	copyShortcutFrom(arg1 : AnAction) : void;
	isEnabledInModalContext() : boolean;
	setEnabledInModalContext(arg1 : boolean) : void;
	displayTextInToolbar() : boolean;
	update(arg1 : AnActionEvent) : void;
	beforeActionPerformedUpdate(arg1 : AnActionEvent) : void;
	getTemplatePresentation() : Presentation;
	actionPerformed(arg1 : AnActionEvent) : void;
	setShortcutSet(arg1 : ShortcutSet) : void;
	setDefaultIcon(arg1 : boolean) : void;
	isDefaultIcon() : boolean;
	setInjectedContext(arg1 : boolean) : void;
	isInInjectedContext() : boolean;
	isTransparentUpdate() : boolean;
	static getEventProject(arg1 : AnActionEvent) : Project;
}


declare interface AnAction extends PossiblyDumbAware {}

declare module AnAction {
	class TransparentUpdate extends Object {
	}
}

export = AnAction
