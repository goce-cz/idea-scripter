import Object = require('nashorn/java/lang/Object');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import PathsList = require('nashorn/com/intellij/util/PathsList');
import Condition = require('nashorn/com/intellij/openapi/util/Condition');
import OrderEntry = require('nashorn/com/intellij/openapi/roots/OrderEntry');
import RootModelProvider = require('nashorn/com/intellij/openapi/roots/RootModelProvider');
import OrderRootsEnumerator = require('nashorn/com/intellij/openapi/roots/OrderRootsEnumerator');
import OrderRootType = require('nashorn/com/intellij/openapi/roots/OrderRootType');
import NotNullFunction = require('nashorn/com/intellij/util/NotNullFunction');
import Processor = require('nashorn/com/intellij/util/Processor');
import Library = require('nashorn/com/intellij/openapi/roots/libraries/Library');
import Module = require('nashorn/com/intellij/openapi/module/Module');
import RootPolicy = require('nashorn/com/intellij/openapi/roots/RootPolicy');
import Project = require('nashorn/com/intellij/openapi/project/Project');

declare class OrderEnumerator extends Object {
	allLibrariesAndSdkClassesRoots : VirtualFile[];
	allSourceRoots : VirtualFile[];
	classesRoots : VirtualFile[];
	sourceRoots : VirtualFile[];
	pathsList : PathsList;
	sourcePathsList : PathsList;
	constructor();
	productionOnly() : OrderEnumerator;
	compileOnly() : OrderEnumerator;
	runtimeOnly() : OrderEnumerator;
	withoutSdk() : OrderEnumerator;
	withoutLibraries() : OrderEnumerator;
	withoutDepModules() : OrderEnumerator;
	withoutModuleSourceEntries() : OrderEnumerator;
	librariesOnly() : OrderEnumerator;
	sdkOnly() : OrderEnumerator;
	getAllLibrariesAndSdkClassesRoots() : VirtualFile[];
	getAllSourceRoots() : VirtualFile[];
	recursively() : OrderEnumerator;
	exportedOnly() : OrderEnumerator;
	satisfying(arg1 : Condition<OrderEntry>) : OrderEnumerator;
	using(arg1 : RootModelProvider) : OrderEnumerator;
	classes() : OrderRootsEnumerator;
	sources() : OrderRootsEnumerator;
	roots(arg1 : OrderRootType) : OrderRootsEnumerator;
	roots(arg1 : NotNullFunction<OrderEntry, OrderRootType>) : OrderRootsEnumerator;
	getClassesRoots() : VirtualFile[];
	getSourceRoots() : VirtualFile[];
	getPathsList() : PathsList;
	getSourcePathsList() : PathsList;
	forEach(arg1 : Processor<OrderEntry>) : void;
	forEachLibrary(arg1 : Processor<Library>) : void;
	forEachModule(arg1 : Processor<Module>) : void;
	process<R>(arg1 : RootPolicy<R>, arg2 : R) : R;
	static orderEntries(arg1 : Module) : OrderEnumerator;
	static orderEntries(arg1 : Project) : OrderEnumerator;
}

export = OrderEnumerator
