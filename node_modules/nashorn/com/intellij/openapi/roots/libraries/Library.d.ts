import LibraryTable = require('nashorn/com/intellij/openapi/roots/libraries/LibraryTable');
import RootProvider = require('nashorn/com/intellij/openapi/roots/RootProvider');
import OrderRootType = require('nashorn/com/intellij/openapi/roots/OrderRootType');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import JDOMExternalizable = require('nashorn/com/intellij/openapi/util/JDOMExternalizable');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');

declare class Library {
	static EMPTY_ARRAY : Library[];
	name : string;
	modifiableModel : Library.ModifiableModel;
	table : LibraryTable;
	rootProvider : RootProvider;
	getName() : string;
	getUrls(arg1 : OrderRootType) : string[];
	getFiles(arg1 : OrderRootType) : VirtualFile[];
	getModifiableModel() : Library.ModifiableModel;
	getTable() : LibraryTable;
	getRootProvider() : RootProvider;
	isJarDirectory(arg1 : string) : boolean;
	isJarDirectory(arg1 : string, arg2 : OrderRootType) : boolean;
	isValid(arg1 : string, arg2 : OrderRootType) : boolean;
}


declare interface Library extends JDOMExternalizable, Disposable {}

declare module Library {
	class ModifiableModel {
		name : string;
		changed : boolean;
		getUrls(arg1 : OrderRootType) : string[];
		setName(arg1 : string) : void;
		getName() : string;
		addRoot(arg1 : string, arg2 : OrderRootType) : void;
		addJarDirectory(arg1 : string, arg2 : boolean) : void;
		addJarDirectory(arg1 : string, arg2 : boolean, arg3 : OrderRootType) : void;
		addRoot(arg1 : VirtualFile, arg2 : OrderRootType) : void;
		addJarDirectory(arg1 : VirtualFile, arg2 : boolean) : void;
		addJarDirectory(arg1 : VirtualFile, arg2 : boolean, arg3 : OrderRootType) : void;
		moveRootUp(arg1 : string, arg2 : OrderRootType) : void;
		moveRootDown(arg1 : string, arg2 : OrderRootType) : void;
		removeRoot(arg1 : string, arg2 : OrderRootType) : boolean;
		commit() : void;
		getFiles(arg1 : OrderRootType) : VirtualFile[];
		isChanged() : boolean;
		isJarDirectory(arg1 : string) : boolean;
		isJarDirectory(arg1 : string, arg2 : OrderRootType) : boolean;
		isValid(arg1 : string, arg2 : OrderRootType) : boolean;
	}


	interface ModifiableModel extends Disposable {}}

export = Library
