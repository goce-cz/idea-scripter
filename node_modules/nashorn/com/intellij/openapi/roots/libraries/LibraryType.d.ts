import LibraryProperties = require('nashorn/com/intellij/openapi/roots/libraries/LibraryProperties');
import ExtensionPointName = require('nashorn/com/intellij/openapi/extensions/ExtensionPointName');
import OrderRootType = require('nashorn/com/intellij/openapi/roots/OrderRootType');
import PersistentLibraryKind = require('nashorn/com/intellij/openapi/roots/libraries/PersistentLibraryKind');
import JComponent = require('nashorn/javax/swing/JComponent');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import NewLibraryConfiguration = require('nashorn/com/intellij/openapi/roots/libraries/NewLibraryConfiguration');
import Module = require('nashorn/com/intellij/openapi/module/Module');
import FacetsProvider = require('nashorn/com/intellij/openapi/roots/ui/configuration/FacetsProvider');
import LibraryRootsComponentDescriptor = require('nashorn/com/intellij/openapi/roots/libraries/ui/LibraryRootsComponentDescriptor');
import LibraryEditorComponent = require('nashorn/com/intellij/openapi/roots/libraries/ui/LibraryEditorComponent');
import LibraryPropertiesEditor = require('nashorn/com/intellij/openapi/roots/libraries/ui/LibraryPropertiesEditor');
import LibraryKind = require('nashorn/com/intellij/openapi/roots/libraries/LibraryKind');
import LibraryPresentationProvider = require('nashorn/com/intellij/openapi/roots/libraries/LibraryPresentationProvider');

declare class LibraryType<P extends LibraryProperties> {
	static EP_NAME : ExtensionPointName<LibraryType<any>>;
	static DEFAULT_EXTERNAL_ROOT_TYPES : OrderRootType[];
	kind : PersistentLibraryKind<P>;
	createActionName : string;
	externalRootTypes : OrderRootType[];
	getCreateActionName() : string;
	createNewLibrary(arg1 : JComponent, arg2 : VirtualFile, arg3 : Project) : NewLibraryConfiguration;
	isSuitableModule(arg1 : Module, arg2 : FacetsProvider) : boolean;
	createLibraryRootsComponentDescriptor() : LibraryRootsComponentDescriptor;
	createPropertiesEditor(arg1 : LibraryEditorComponent<P>) : LibraryPropertiesEditor;
	getExternalRootTypes() : OrderRootType[];
	static findByKind(arg1 : LibraryKind) : LibraryType;
}


declare interface LibraryType<P extends LibraryProperties> extends LibraryPresentationProvider<P> {}
export = LibraryType
