import Icon = require('nashorn/javax/swing/Icon');
import Iterator = require('nashorn/java/util/Iterator');
import SimpleTextAttributes = require('nashorn/com/intellij/ui/SimpleTextAttributes');
import ModifiableCellAppearanceEx = require('nashorn/com/intellij/openapi/roots/ui/ModifiableCellAppearanceEx');
import Object = require('nashorn/java/lang/Object');
import TextAttributes = require('nashorn/com/intellij/openapi/editor/markup/TextAttributes');

declare class CompositeAppearance {
	icon : Icon;
	text : string;
	beginning : CompositeAppearance.DequeEnd;
	ending : CompositeAppearance.DequeEnd;
	suffix : CompositeAppearance.DequeEnd;
	sectionsIterator : Iterator<CompositeAppearance.TextSection>;
	constructor();
	getIcon() : Icon;
	addSectionAt(arg1 : number, arg2 : CompositeAppearance.TextSection) : void;
	getBeginning() : CompositeAppearance.DequeEnd;
	getEnding() : CompositeAppearance.DequeEnd;
	getSuffix() : CompositeAppearance.DequeEnd;
	static textComment(arg1 : string, arg2 : string) : CompositeAppearance;
	static single(arg1 : string, arg2 : SimpleTextAttributes) : CompositeAppearance;
	static single(arg1 : string) : CompositeAppearance;
	static invalid(arg1 : string) : CompositeAppearance;
	getSectionsIterator() : Iterator<CompositeAppearance.TextSection>;
}


declare interface CompositeAppearance extends ModifiableCellAppearanceEx {}

declare module CompositeAppearance {
	class DequeSuffix {
	}


	interface DequeSuffix extends CompositeAppearance.DequeEnd {}	class DequeEnding {
	}


	interface DequeEnding extends CompositeAppearance.DequeEnd {}	class DequeBeginning {
	}


	interface DequeBeginning extends CompositeAppearance.DequeEnd {}	class DequeEnd extends Object {
		appearance : CompositeAppearance;
		constructor();
		addText(arg1 : string, arg2 : SimpleTextAttributes) : void;
		addText(arg1 : string) : void;
		addSection(arg1 : CompositeAppearance.TextSection) : void;
		addText(arg1 : string, arg2 : TextAttributes) : void;
		addSurrounded(arg1 : string, arg2 : string, arg3 : string, arg4 : SimpleTextAttributes) : void;
		getAppearance() : CompositeAppearance;
		addComment(arg1 : string, arg2 : SimpleTextAttributes) : void;
		addComment(arg1 : string) : void;
	}
	class TextSection extends Object {
		text : string;
		textAttributes : TextAttributes;
		constructor(arg1 : string, arg2 : TextAttributes);
		getText() : string;
		getTextAttributes() : TextAttributes;
	}
}

export = CompositeAppearance
