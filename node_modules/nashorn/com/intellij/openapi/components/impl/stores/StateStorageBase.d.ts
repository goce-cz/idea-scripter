import StorageDataBase = require('nashorn/com/intellij/openapi/components/impl/stores/StorageDataBase');
import Element = require('nashorn/org/jdom/Element');
import Class = require('nashorn/java/lang/Class');
import Object = require('nashorn/java/lang/Object');
import StateStorage = require('nashorn/com/intellij/openapi/components/StateStorage');

declare class StateStorageBase<T extends StorageDataBase> {
	storageData : T;
	deserializeState<S>(arg1 : Element, arg2 : Class<S>, arg3 : S) : S;
	getStateAndArchive(arg1 : T, arg2 : Object, arg3 : string) : Element;
	getStorageData() : T;
	getStorageData(arg1 : boolean) : T;
	loadData() : T;
	disableSaving() : void;
	enableSaving() : void;
	checkIsSavingDisabled() : boolean;
}


declare interface StateStorageBase<T extends StorageDataBase> extends StateStorage {}
export = StateStorageBase
