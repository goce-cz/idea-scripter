import StateStorageManager = require('nashorn/com/intellij/openapi/components/impl/stores/StateStorageManager');
import XmlElementStorage = require('nashorn/com/intellij/openapi/components/impl/stores/XmlElementStorage');
import List = require('nashorn/java/util/List');
import ComponentStoreImpl = require('nashorn/com/intellij/openapi/components/impl/stores/ComponentStoreImpl');
import Element = require('nashorn/org/jdom/Element');
import StorageData = require('nashorn/com/intellij/openapi/components/impl/stores/StorageData');

declare class BaseFileConfigurableStoreImpl {
	static ATTRIBUTE_NAME : string;
	mainStorageData : BaseFileConfigurableStoreImpl.BaseStorageData;
	stateStorageManager : StateStorageManager;
	getMainStorage() : XmlElementStorage;
	static getConversionProblemsStorage() : List<string>;
	getMainStorageData() : BaseFileConfigurableStoreImpl.BaseStorageData;
	createStateStorageManager() : StateStorageManager;
}


declare interface BaseFileConfigurableStoreImpl extends ComponentStoreImpl {}

declare module BaseFileConfigurableStoreImpl {
	class BaseStorageData {
		constructor(arg1 : string);
		writeOptions(arg1 : Element, arg2 : string) : void;
	}


	interface BaseStorageData extends StorageData {}}

export = BaseFileConfigurableStoreImpl
