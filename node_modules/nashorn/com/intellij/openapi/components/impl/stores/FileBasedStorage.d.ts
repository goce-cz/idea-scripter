import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import File = require('nashorn/java/io/File');
import RoamingType = require('nashorn/com/intellij/openapi/components/RoamingType');
import TrackingPathMacroSubstitutor = require('nashorn/com/intellij/openapi/components/TrackingPathMacroSubstitutor');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import StateStorage = require('nashorn/com/intellij/openapi/components/StateStorage');
import StreamProvider = require('nashorn/com/intellij/openapi/components/impl/stores/StreamProvider');
import Exception = require('nashorn/java/lang/Exception');
import Element = require('nashorn/org/jdom/Element');
import Set = require('nashorn/java/util/Set');
import XmlElementStorage = require('nashorn/com/intellij/openapi/components/impl/stores/XmlElementStorage');

declare class FileBasedStorage {
	virtualFile : VirtualFile;
	file : File;
	filePath : string;
	constructor(arg1 : string, arg2 : string, arg3 : RoamingType, arg4 : TrackingPathMacroSubstitutor, arg5 : string, arg6 : Disposable, arg7 : StateStorage.Listener, arg8 : StreamProvider);
	isUseXmlProlog() : boolean;
	isUseLfLineSeparatorByDefault() : boolean;
	forceSave() : void;
	getVirtualFile() : VirtualFile;
	getFile() : File;
	getFilePath() : string;
	a(arg1 : Exception) : Element;
	updatedFromStreamProvider(arg1 : Set<string>, arg2 : boolean) : void;
}


declare interface FileBasedStorage extends XmlElementStorage {}

declare module FileBasedStorage {
	class FileSaveSession {
	}


	interface FileSaveSession extends XmlElementStorage.XmlElementStorageSaveSession {}}

export = FileBasedStorage
