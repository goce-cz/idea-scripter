import PicoContainer = require('nashorn/org/picocontainer/PicoContainer');
import MessageBus = require('nashorn/com/intellij/util/messages/MessageBus');
import BaseComponent = require('nashorn/com/intellij/openapi/components/BaseComponent');
import Class = require('nashorn/java/lang/Class');
import ExtensionPointName = require('nashorn/com/intellij/openapi/extensions/ExtensionPointName');
import Condition = require('nashorn/com/intellij/openapi/util/Condition');
import UserDataHolder = require('nashorn/com/intellij/openapi/util/UserDataHolder');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');

declare class ComponentManager {
	picoContainer : PicoContainer;
	messageBus : MessageBus;
	disposed : boolean;
	getComponent(arg1 : string) : BaseComponent;
	getComponent<T>(arg1 : Class<T>) : T;
	getComponent<T>(arg1 : Class<T>, arg2 : T) : T;
	hasComponent(arg1 : Class) : boolean;
	getComponents<T>(arg1 : Class<T>) : T[];
	getPicoContainer() : PicoContainer;
	getMessageBus() : MessageBus;
	isDisposed() : boolean;
	getExtensions<T>(arg1 : ExtensionPointName<T>) : T[];
	getDisposed() : Condition;
}


declare interface ComponentManager extends UserDataHolder, Disposable {}
export = ComponentManager
