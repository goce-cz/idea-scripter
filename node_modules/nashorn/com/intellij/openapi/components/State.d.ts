import RoamingType = require('nashorn/com/intellij/openapi/components/RoamingType');
import Storage = require('nashorn/com/intellij/openapi/components/Storage');
import Class = require('nashorn/java/lang/Class');
import StateStorageChooser = require('nashorn/com/intellij/openapi/components/StateStorageChooser');
import Annotation = require('nashorn/java/lang/annotation/Annotation');
import Getter = require('nashorn/com/intellij/openapi/util/Getter');

declare class State {
	name() : string;
	roamingType() : RoamingType;
	storages() : Storage[];
	storageChooser() : Class<StateStorageChooser>;
	reloadable() : boolean;
	defaultStateAsResource() : boolean;
	additionalExportFile() : string;
	presentableName() : Class<State.NameGetter>;
}


declare interface State extends Annotation {}

declare module State {
	class NameGetter {
		constructor();
	}


	interface NameGetter extends Getter<string> {}}

export = State
