import Document = require('nashorn/com/intellij/openapi/editor/Document');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import BasicUndoableAction = require('nashorn/com/intellij/openapi/command/undo/BasicUndoableAction');
import DocumentReference = require('nashorn/com/intellij/openapi/command/undo/DocumentReference');
import Exception = require('nashorn/java/lang/Exception');

declare class StartMarkAction {
	global : boolean;
	commandName : string;
	document : Document;
	setGlobal(arg1 : boolean) : void;
	getCommandName() : string;
	setCommandName(arg1 : string) : void;
	getDocument() : Document;
	static checkCleared() : void;
	static start(arg1 : Editor, arg2 : Project, arg3 : string) : StartMarkAction;
	static canStart(arg1 : Project) : StartMarkAction;
	static markFinished(arg1 : Project) : void;
}


declare interface StartMarkAction extends BasicUndoableAction {}

declare module StartMarkAction {
	class AlreadyStartedException {
		affectedDocuments : DocumentReference[];
		document : Document;
		constructor(arg1 : string, arg2 : Document, arg3 : DocumentReference[]);
		getAffectedDocuments() : DocumentReference[];
		getDocument() : Document;
	}


	interface AlreadyStartedException extends Exception {}}

export = StartMarkAction
