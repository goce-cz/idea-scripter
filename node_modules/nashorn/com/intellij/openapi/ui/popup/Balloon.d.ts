import Dimension = require('nashorn/java/awt/Dimension');
import PositionTracker = require('nashorn/com/intellij/util/ui/PositionTracker');
import RelativePoint = require('nashorn/com/intellij/ui/awt/RelativePoint');
import JLayeredPane = require('nashorn/javax/swing/JLayeredPane');
import JComponent = require('nashorn/javax/swing/JComponent');
import Rectangle = require('nashorn/java/awt/Rectangle');
import JBPopupListener = require('nashorn/com/intellij/openapi/ui/popup/JBPopupListener');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import LightweightWindow = require('nashorn/com/intellij/openapi/ui/popup/LightweightWindow');
import Enum = require('nashorn/java/lang/Enum');

declare class Balloon {
	static KEY : string;
	preferredSize : Dimension;
	disposed : boolean;
	show(arg1 : PositionTracker<Balloon>, arg2 : Balloon.Position) : void;
	show(arg1 : RelativePoint, arg2 : Balloon.Position) : void;
	show(arg1 : JLayeredPane) : void;
	showInCenterOf(arg1 : JComponent) : void;
	getPreferredSize() : Dimension;
	setBounds(arg1 : Rectangle) : void;
	addListener(arg1 : JBPopupListener) : void;
	hide() : void;
	hide(arg1 : boolean) : void;
	setAnimationEnabled(arg1 : boolean) : void;
	wasFadedIn() : boolean;
	wasFadedOut() : boolean;
	isDisposed() : boolean;
	setTitle(arg1 : string) : void;
}


declare interface Balloon extends Disposable, PositionTracker.Client<Balloon>, LightweightWindow {}

declare module Balloon {
	class Layer {
		static normal : Balloon.Layer;
		static top : Balloon.Layer;
	}


	interface Layer extends Enum<Balloon.Layer> {}	class Position {
		static below : Balloon.Position;
		static above : Balloon.Position;
		static atLeft : Balloon.Position;
		static atRight : Balloon.Position;
	}


	interface Position extends Enum<Balloon.Position> {}}

export = Balloon
