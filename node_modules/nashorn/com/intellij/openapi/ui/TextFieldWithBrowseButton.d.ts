import JTextField = require('nashorn/javax/swing/JTextField');
import ActionListener = require('nashorn/java/awt/event/ActionListener');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import FileChooserDescriptor = require('nashorn/com/intellij/openapi/fileChooser/FileChooserDescriptor');
import TextBrowseFolderListener = require('nashorn/com/intellij/openapi/ui/TextBrowseFolderListener');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import ComponentWithBrowseButton = require('nashorn/com/intellij/openapi/ui/ComponentWithBrowseButton');
import TextAccessor = require('nashorn/com/intellij/ui/TextAccessor');

declare class TextFieldWithBrowseButton {
	textField : JTextField;
	text : string;
	editable : boolean;
	constructor();
	constructor(arg1 : JTextField);
	constructor(arg1 : JTextField, arg2 : ActionListener);
	constructor(arg1 : ActionListener);
	addBrowseFolderListener(arg1 : string, arg2 : string, arg3 : Project, arg4 : FileChooserDescriptor) : void;
	addBrowseFolderListener(arg1 : TextBrowseFolderListener) : void;
	installPathCompletion(arg1 : FileChooserDescriptor) : void;
	installPathCompletion(arg1 : FileChooserDescriptor, arg2 : Disposable) : void;
	getTextField() : JTextField;
	isEditable() : boolean;
	setEditable(arg1 : boolean) : void;
}


declare interface TextFieldWithBrowseButton extends ComponentWithBrowseButton<JTextField>, TextAccessor {}

declare module TextFieldWithBrowseButton {
	class NoPathCompletion {
		constructor();
		constructor(arg1 : JTextField);
		constructor(arg1 : JTextField, arg2 : ActionListener);
		constructor(arg1 : ActionListener);
	}


	interface NoPathCompletion extends TextFieldWithBrowseButton {}}

export = TextFieldWithBrowseButton
