import JComponent = require('nashorn/javax/swing/JComponent');
import FixedSizeButton = require('nashorn/com/intellij/openapi/ui/FixedSizeButton');
import ActionListener = require('nashorn/java/awt/event/ActionListener');
import JPanel = require('nashorn/javax/swing/JPanel');
import Icon = require('nashorn/javax/swing/Icon');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import FileChooserDescriptor = require('nashorn/com/intellij/openapi/fileChooser/FileChooserDescriptor');
import TextComponentAccessor = require('nashorn/com/intellij/openapi/ui/TextComponentAccessor');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import DumbAwareAction = require('nashorn/com/intellij/openapi/project/DumbAwareAction');

declare class ComponentWithBrowseButton<Comp extends JComponent> {
	childComponent : Comp;
	button : FixedSizeButton;
	constructor(arg1 : Comp, arg2 : ActionListener);
	static wrapWithoutResize(arg1 : JComponent) : JPanel;
	getChildComponent() : Comp;
	setTextFieldPreferredWidth(arg1 : number) : void;
	setButtonEnabled(arg1 : boolean) : void;
	setButtonIcon(arg1 : Icon) : void;
	addActionListener(arg1 : ActionListener) : void;
	removeActionListener(arg1 : ActionListener) : void;
	addBrowseFolderListener(arg1 : string, arg2 : string, arg3 : Project, arg4 : FileChooserDescriptor, arg5 : TextComponentAccessor<Comp>) : void;
	addBrowseFolderListener(arg1 : string, arg2 : string, arg3 : Project, arg4 : FileChooserDescriptor, arg5 : TextComponentAccessor<Comp>, arg6 : boolean) : void;
	addBrowseFolderListener(arg1 : Project, arg2 : ComponentWithBrowseButton.BrowseFolderActionListener<Comp>) : void;
	addBrowseFolderListener(arg1 : Project, arg2 : ComponentWithBrowseButton.BrowseFolderActionListener<Comp>, arg3 : boolean) : void;
	getButton() : FixedSizeButton;
}


declare interface ComponentWithBrowseButton<Comp extends JComponent> extends JPanel, Disposable {}

declare module ComponentWithBrowseButton {
	class BrowseFolderActionListener<T extends JComponent> {
		constructor(arg1 : string, arg2 : string, arg3 : ComponentWithBrowseButton<T>, arg4 : Project, arg5 : FileChooserDescriptor, arg6 : TextComponentAccessor<T>);
		getProject() : Project;
		setProject(arg1 : Project) : void;
		getInitialFile() : VirtualFile;
		expandPath(arg1 : string) : string;
		getComponentText() : string;
		chosenFileToResultingText(arg1 : VirtualFile) : string;
		onFileChoosen(arg1 : VirtualFile) : void;
		onFileChosen(arg1 : VirtualFile) : void;
	}


	interface BrowseFolderActionListener<T extends JComponent> extends ActionListener {}	class MyDoClickAction {
		constructor(arg1 : FixedSizeButton);
		registerShortcut(arg1 : JComponent) : void;
		static addTo(arg1 : FixedSizeButton, arg2 : JComponent) : void;
	}


	interface MyDoClickAction extends DumbAwareAction {}}

export = ComponentWithBrowseButton
