import Object = require('nashorn/java/lang/Object');
import Container = require('nashorn/java/awt/Container');
import Window = require('nashorn/java/awt/Window');
import JRootPane = require('nashorn/javax/swing/JRootPane');
import Dimension = require('nashorn/java/awt/Dimension');
import Point = require('nashorn/java/awt/Point');
import MouseListener = require('nashorn/java/awt/event/MouseListener');
import MouseMotionListener = require('nashorn/java/awt/event/MouseMotionListener');
import KeyListener = require('nashorn/java/awt/event/KeyListener');
import ActionCallback = require('nashorn/com/intellij/openapi/util/ActionCallback');
import JComponent = require('nashorn/javax/swing/JComponent');

declare class DialogWrapperPeer extends Object {
	static HAVE_INITIAL_SELECTION : Object;
	contentPane : Container;
	owner : Window;
	window : Window;
	rootPane : JRootPane;
	size : Dimension;
	title : string;
	preferredSize : Dimension;
	modal : boolean;
	visible : boolean;
	showing : boolean;
	resizable : void;
	location : Point;
	headless : boolean;
	currentModalEntities : Object[];
	constructor();
	setUndecorated(arg1 : boolean) : void;
	addMouseListener(arg1 : MouseListener) : void;
	addMouseListener(arg1 : MouseMotionListener) : void;
	addKeyListener(arg1 : KeyListener) : void;
	toFront() : void;
	toBack() : void;
	dispose() : void;
	getContentPane() : Container;
	getOwner() : Window;
	getWindow() : Window;
	getRootPane() : JRootPane;
	getSize() : Dimension;
	getTitle() : string;
	getPreferredSize() : Dimension;
	setModal(arg1 : boolean) : void;
	isModal() : boolean;
	isVisible() : boolean;
	isShowing() : boolean;
	setSize(arg1 : number, arg2 : number) : void;
	setTitle(arg1 : string) : void;
	isResizable() : void;
	setResizable(arg1 : boolean) : void;
	getLocation() : Point;
	setLocation(arg1 : Point) : void;
	setLocation(arg1 : number, arg2 : number) : void;
	show() : ActionCallback;
	setContentPane(arg1 : JComponent) : void;
	centerInParent() : void;
	validate() : void;
	repaint() : void;
	pack() : void;
	setAppIcons() : void;
	isHeadless() : boolean;
	getCurrentModalEntities() : Object[];
}

export = DialogWrapperPeer
