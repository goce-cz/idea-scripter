import Object = require('nashorn/java/lang/Object');
import Class = require('nashorn/java/lang/Class');
import Throwable = require('nashorn/java/lang/Throwable');
import Attachment = require('nashorn/com/intellij/openapi/diagnostic/Attachment');
import Level = require('nashorn/org/apache/log4j/Level');

declare class Logger extends Object {
	static initialized : boolean;
	debugEnabled : boolean;
	constructor();
	static setFactory(arg1 : Class<Logger.Factory>) : void;
	static isInitialized() : boolean;
	static getInstance(arg1 : string) : Logger;
	static getInstance(arg1 : Class) : Logger;
	isDebugEnabled() : boolean;
	debug(arg1 : string) : void;
	debug(arg1 : Throwable) : void;
	debug(arg1 : string, arg2 : Throwable) : void;
	debug(arg1 : string, arg2 : Object[]) : void;
	info(arg1 : Throwable) : void;
	info(arg1 : string) : void;
	info(arg1 : string, arg2 : Throwable) : void;
	warn(arg1 : string) : void;
	warn(arg1 : Throwable) : void;
	warn(arg1 : string, arg2 : Throwable) : void;
	error(arg1 : string) : void;
	error(arg1 : Object) : void;
	error(arg1 : string, arg2 : Attachment[]) : void;
	error(arg1 : string, arg2 : string[]) : void;
	error(arg1 : string, arg2 : Throwable) : void;
	error(arg1 : Throwable) : void;
	error(arg1 : string, arg2 : Throwable, arg3 : string[]) : void;
	assertTrue(arg1 : boolean, arg2 : Object) : boolean;
	assertTrue(arg1 : boolean) : boolean;
	setLevel(arg1 : Level) : void;
}


declare module Logger {
	class DefaultFactory {
	}


	interface DefaultFactory extends Logger.Factory {}	class Factory extends Object {
		getLoggerInstance(arg1 : string) : Logger;
	}
}

export = Logger
