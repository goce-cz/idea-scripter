import Runnable = require('nashorn/java/lang/Runnable');
import Configurable = require('nashorn/com/intellij/openapi/options/Configurable');

declare class SearchableConfigurable {
	id : string;
	getId() : string;
	enableSearch(arg1 : string) : Runnable;
}


declare interface SearchableConfigurable extends Configurable {}

declare module SearchableConfigurable {
	class Delegate {
		id : string;
		displayName : string;
		helpTopic : string;
		modified : boolean;
		constructor(arg1 : Configurable);
	}


	interface Delegate extends SearchableConfigurable {}	class Parent {
		visible : boolean;
		hasOwnContent() : boolean;
		isVisible() : boolean;
	}


	interface Parent extends SearchableConfigurable, Configurable.Composite {}

	module Parent {
		class Abstract {
			modified : boolean;
			visible : boolean;
			configurables : Configurable[];
			constructor();
			buildConfigurables() : Configurable[];
		}


		interface Abstract extends SearchableConfigurable.Parent {}	}
}

export = SearchableConfigurable
