import Logger = require('nashorn/com/intellij/openapi/diagnostic/Logger');
import CompositeSettingsBuilder = require('nashorn/com/intellij/openapi/options/CompositeSettingsBuilder');
import Factory = require('nashorn/com/intellij/openapi/util/Factory');
import SettingsEditor = require('nashorn/com/intellij/openapi/options/SettingsEditor');
import Object = require('nashorn/java/lang/Object');

declare class CompositeSettingsEditor<Settings> {
	static LOG : Logger;
	builder : CompositeSettingsBuilder<Settings>;
	constructor();
	constructor(arg1 : Factory<Settings>);
	getBuilder() : CompositeSettingsBuilder<Settings>;
}


declare interface CompositeSettingsEditor<Settings> extends SettingsEditor<Settings> {}

declare module CompositeSettingsEditor {
	class SynchronizationController extends Object {
		handleStateChange(arg1 : SettingsEditor) : void;
		sync() : void;
	}
}

export = CompositeSettingsEditor
