import UnnamedConfigurable = require('nashorn/com/intellij/openapi/options/UnnamedConfigurable');
import JCheckBox = require('nashorn/javax/swing/JCheckBox');
import JComponent = require('nashorn/javax/swing/JComponent');
import Object = require('nashorn/java/lang/Object');
import Class = require('nashorn/java/lang/Class');

declare class BeanConfigurable<T> {
	modified : boolean;
	checkBox(arg1 : string, arg2 : string) : void;
}


declare interface BeanConfigurable<T> extends UnnamedConfigurable {}

declare module BeanConfigurable {
	class CheckboxField {
	}


	interface CheckboxField extends BeanConfigurable.BeanField<JCheckBox> {}	class BeanField<T extends JComponent> extends Object {
		getComponent() : T;
		createComponent() : T;
		isModified(arg1 : Object) : boolean;
		apply(arg1 : Object) : void;
		reset(arg1 : Object) : void;
		getComponentValue() : Object;
		setComponentValue(arg1 : Object) : void;
		getBeanValue(arg1 : Object) : Object;
		getterName() : string;
		setBeanValue(arg1 : Object, arg2 : Object) : void;
		getValueClass() : Class;
	}
}

export = BeanConfigurable
