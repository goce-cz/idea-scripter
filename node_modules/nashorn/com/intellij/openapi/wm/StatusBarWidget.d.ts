import StatusBar = require('nashorn/com/intellij/openapi/wm/StatusBar');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import Border = require('nashorn/javax/swing/border/Border');
import ListPopup = require('nashorn/com/intellij/openapi/ui/popup/ListPopup');
import Icon = require('nashorn/javax/swing/Icon');
import Object = require('nashorn/java/lang/Object');
import Consumer = require('nashorn/com/intellij/util/Consumer');
import MouseEvent = require('nashorn/java/awt/event/MouseEvent');
import Enum = require('nashorn/java/lang/Enum');

declare class StatusBarWidget {
	ID() : string;
	getPresentation(arg1 : StatusBarWidget.PlatformType) : StatusBarWidget.WidgetPresentation;
	install(arg1 : StatusBar) : void;
}


declare interface StatusBarWidget extends Disposable {}

declare module StatusBarWidget {
	class WidgetBorder {
		static INSTANCE : StatusBarWidget.WidgetBorder;
		borderOpaque : boolean;
		constructor();
	}


	interface WidgetBorder extends Border {}	class MultipleTextValuesPresentation {
		popupStep : ListPopup;
		selectedValue : string;
		maxValue : string;
		getPopupStep() : ListPopup;
		getSelectedValue() : string;
		getMaxValue() : string;
	}


	interface MultipleTextValuesPresentation extends StatusBarWidget.WidgetPresentation {}	class TextPresentation {
		text : string;
		maxPossibleText : string;
		alignment : number;
		getText() : string;
		getMaxPossibleText() : string;
		getAlignment() : number;
	}


	interface TextPresentation extends StatusBarWidget.WidgetPresentation {}	class IconPresentation {
		icon : Icon;
		getIcon() : Icon;
	}


	interface IconPresentation extends StatusBarWidget.WidgetPresentation {}	class WidgetPresentation extends Object {
		tooltipText : string;
		clickConsumer : Consumer<MouseEvent>;
		getTooltipText() : string;
		getClickConsumer() : Consumer<MouseEvent>;
	}
	class Multiframe {
		copy() : StatusBarWidget;
	}


	interface Multiframe extends StatusBarWidget {}	class PlatformType {
		static DEFAULT : StatusBarWidget.PlatformType;
		static MAC : StatusBarWidget.PlatformType;
	}


	interface PlatformType extends Enum<StatusBarWidget.PlatformType> {}}

export = StatusBarWidget
