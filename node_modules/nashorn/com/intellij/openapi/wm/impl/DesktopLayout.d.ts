import ToolWindowAnchor = require('nashorn/com/intellij/openapi/wm/ToolWindowAnchor');
import WindowInfoImpl = require('nashorn/com/intellij/openapi/wm/impl/WindowInfoImpl');
import Comparator = require('nashorn/java/util/Comparator');
import StripeButton = require('nashorn/com/intellij/openapi/wm/impl/StripeButton');
import ToolWindowManagerImpl = require('nashorn/com/intellij/openapi/wm/impl/ToolWindowManagerImpl');
import List = require('nashorn/java/util/List');
import JDOMExternalizable = require('nashorn/com/intellij/openapi/util/JDOMExternalizable');

declare class DesktopLayout {
	static ID_ATTR : string;
	constructor();
	copyFrom(arg1 : DesktopLayout) : void;
	register(arg1 : string, arg2 : ToolWindowAnchor, arg3 : boolean) : WindowInfoImpl;
	unregister(arg1 : string) : void;
	getInfo(arg1 : string, arg2 : boolean) : WindowInfoImpl;
	getActiveId() : string;
	getInfos() : WindowInfoImpl[];
	a() : WindowInfoImpl[];
	getAllInfos() : WindowInfoImpl[];
	a(arg1 : ToolWindowAnchor) : WindowInfoImpl[];
	static a(arg1 : WindowInfoImpl[]) : void;
	isToolWindowRegistered(arg1 : string) : boolean;
	comparator(arg1 : ToolWindowAnchor) : Comparator<StripeButton>;
	b(arg1 : ToolWindowAnchor) : number;
	setAnchor(arg1 : string, arg2 : ToolWindowAnchor, arg3 : number) : void;
	setSplitMode(arg1 : string, arg2 : boolean) : void;
	getVisibleIdsOn(arg1 : ToolWindowAnchor, arg2 : ToolWindowManagerImpl) : List<string>;
}


declare interface DesktopLayout extends JDOMExternalizable {}

declare module DesktopLayout {
	class MyStripeButtonComparator {
		constructor(arg1 : ToolWindowAnchor);
	}


	interface MyStripeButtonComparator extends Comparator<StripeButton> {}	class MyWindowInfoComparator {
	}


	interface MyWindowInfoComparator extends Comparator<WindowInfoImpl> {}}

export = DesktopLayout
