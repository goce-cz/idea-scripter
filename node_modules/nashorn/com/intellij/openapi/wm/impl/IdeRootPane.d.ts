import ToolWindowsPane = require('nashorn/com/intellij/openapi/wm/impl/ToolWindowsPane');
import ActionManagerEx = require('nashorn/com/intellij/openapi/actionSystem/ex/ActionManagerEx');
import UISettings = require('nashorn/com/intellij/ide/ui/UISettings');
import DataManager = require('nashorn/com/intellij/ide/DataManager');
import Application = require('nashorn/com/intellij/openapi/application/Application');
import IdeFrame = require('nashorn/com/intellij/openapi/wm/IdeFrame');
import JComponent = require('nashorn/javax/swing/JComponent');
import StatusBar = require('nashorn/com/intellij/openapi/wm/StatusBar');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import IdeRootPaneNorthExtension = require('nashorn/com/intellij/openapi/wm/IdeRootPaneNorthExtension');
import JRootPane = require('nashorn/javax/swing/JRootPane');
import UISettingsListener = require('nashorn/com/intellij/ide/ui/UISettingsListener');

declare class IdeRootPane {
	optimizedDrawingEnabled : boolean;
	toolWindowsPane : ToolWindowsPane;
	constructor(arg1 : ActionManagerEx, arg2 : UISettings, arg3 : DataManager, arg4 : Application, arg5 : IdeFrame);
	setToolWindowsPane(arg1 : ToolWindowsPane) : void;
	updateToolbar() : void;
	updateNorthComponents() : void;
	updateMainMenuActions() : void;
	a() : JComponent;
	a(arg1 : IdeFrame) : void;
	setMemoryIndicatorVisible(arg1 : boolean) : void;
	getStatusBar() : StatusBar;
	b() : void;
	c() : void;
	installNorthComponents(arg1 : Project) : void;
	deinstallNorthComponents() : void;
	findByName(arg1 : string) : IdeRootPaneNorthExtension;
	getToolWindowsPane() : ToolWindowsPane;
}


declare interface IdeRootPane extends JRootPane, UISettingsListener {}

declare module IdeRootPane {
	class MyRootLayout {
	}


	interface MyRootLayout extends JRootPane.RootLayout {}}

export = IdeRootPane
