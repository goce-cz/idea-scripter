import ToolWindowAnchor = require('nashorn/com/intellij/openapi/wm/ToolWindowAnchor');
import ToolWindowContentUiType = require('nashorn/com/intellij/openapi/wm/ToolWindowContentUiType');
import ToolWindowType = require('nashorn/com/intellij/openapi/wm/ToolWindowType');
import InternalDecorator = require('nashorn/com/intellij/openapi/wm/impl/InternalDecorator');
import JComponent = require('nashorn/javax/swing/JComponent');
import ContentManager = require('nashorn/com/intellij/ui/content/ContentManager');
import ToolWindowContentUi = require('nashorn/com/intellij/openapi/wm/impl/content/ToolWindowContentUi');
import Icon = require('nashorn/javax/swing/Icon');
import ToolWindowManagerImpl = require('nashorn/com/intellij/openapi/wm/impl/ToolWindowManagerImpl');
import ActionGroup = require('nashorn/com/intellij/openapi/actionSystem/ActionGroup');
import ActionCallback = require('nashorn/com/intellij/openapi/util/ActionCallback');
import PropertyChangeListener = require('nashorn/java/beans/PropertyChangeListener');
import Content = require('nashorn/com/intellij/ui/content/Content');
import ToolWindowFactory = require('nashorn/com/intellij/openapi/wm/ToolWindowFactory');
import ToolWindowEx = require('nashorn/com/intellij/openapi/wm/ex/ToolWindowEx');

declare class ToolWindowImpl {
	active : boolean;
	visible : boolean;
	anchor : ToolWindowAnchor;
	splitMode : boolean;
	contentUiType : ToolWindowContentUiType;
	autoHide : boolean;
	type : ToolWindowType;
	internalType : ToolWindowType;
	decorator : InternalDecorator;
	available : boolean;
	component : JComponent;
	contentManager : ContentManager;
	contentUI : ToolWindowContentUi;
	icon : Icon;
	id : string;
	title : string;
	stripeTitle : string;
	toolWindowManager : ToolWindowManagerImpl;
	popupGroup : ActionGroup;
	toHideOnEmptyContent : boolean;
	disposed : boolean;
	placeholderMode : boolean;
	activation : ActionCallback;
	useLastFocusedOnActivation : boolean;
	addPropertyChangeListener(arg1 : PropertyChangeListener) : void;
	getContentUI() : ToolWindowContentUi;
	getId() : string;
	a() : Content;
	setDecorator(arg1 : InternalDecorator) : void;
	fireActivated() : void;
	fireHidden() : void;
	fireHiddenSide() : void;
	getToolWindowManager() : ToolWindowManagerImpl;
	getPopupGroup() : ActionGroup;
	isPlaceholderMode() : boolean;
	setPlaceholderMode(arg1 : boolean) : void;
	setActivation(arg1 : ActionCallback) : ActionCallback;
	setContentFactory(arg1 : ToolWindowFactory) : void;
	ensureContentInitialized() : void;
}


declare interface ToolWindowImpl extends ToolWindowEx {}
export = ToolWindowImpl
