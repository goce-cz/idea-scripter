import List = require('nashorn/java/util/List');
import FinalizableCommand = require('nashorn/com/intellij/openapi/wm/impl/commands/FinalizableCommand');
import Condition = require('nashorn/com/intellij/openapi/util/Condition');
import Runnable = require('nashorn/java/lang/Runnable');
import Object = require('nashorn/java/lang/Object');

declare class CommandProcessor {
	commandCount : number;
	constructor();
	getCommandCount() : number;
	execute(arg1 : List<FinalizableCommand>, arg2 : Condition) : void;
	a() : CommandProcessor.CommandGroup;
}


declare interface CommandProcessor extends Runnable {}

declare module CommandProcessor {
	class CommandGroup extends Object {
		expireCondition : Condition;
		empty : boolean;
		getExpireCondition() : Condition;
		isEmpty() : boolean;
		takeNextCommand() : FinalizableCommand;
	}
}

export = CommandProcessor
