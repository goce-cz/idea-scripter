import ToolWindowAnchor = require('nashorn/com/intellij/openapi/wm/ToolWindowAnchor');
import InternalDecorator = require('nashorn/com/intellij/openapi/wm/impl/InternalDecorator');
import WindowInfoImpl = require('nashorn/com/intellij/openapi/wm/impl/WindowInfoImpl');
import MouseEvent = require('nashorn/java/awt/event/MouseEvent');
import JLayeredPane = require('nashorn/javax/swing/JLayeredPane');
import Component = require('nashorn/java/awt/Component');
import AnchoredButton = require('nashorn/com/intellij/openapi/wm/impl/AnchoredButton');
import ActionListener = require('nashorn/java/awt/event/ActionListener');
import KeymapManagerListener = require('nashorn/com/intellij/openapi/keymap/KeymapManagerListener');
import PopupHandler = require('nashorn/com/intellij/ui/PopupHandler');
import KeyEventDispatcher = require('nashorn/java/awt/KeyEventDispatcher');

declare class StripeButton {
	mnemonic2 : number;
	anchor : ToolWindowAnchor;
	first : boolean;
	last : boolean;
	oppositeSide : boolean;
	decorator : InternalDecorator;
	a(arg1 : number) : void;
	getWindowInfo() : WindowInfoImpl;
	a() : void;
	isFirst() : boolean;
	isLast() : boolean;
	isOppositeSide() : boolean;
	a(arg1 : boolean) : boolean;
	getDecorator() : InternalDecorator;
	a(arg1 : MouseEvent) : void;
	b(arg1 : MouseEvent) : boolean;
	static c(arg1 : MouseEvent) : JLayeredPane;
	apply(arg1 : WindowInfoImpl) : void;
	dispose() : void;
	a(arg1 : Component, arg2 : number, arg3 : number) : void;
	updatePresentation() : void;
	b() : void;
	c() : void;
	d() : boolean;
	e() : void;
}


declare interface StripeButton extends AnchoredButton, ActionListener {}

declare module StripeButton {
	class MyKeymapListener {
	}


	interface MyKeymapListener extends KeymapManagerListener {}	class MyPopupHandler {
	}


	interface MyPopupHandler extends PopupHandler {}	class DragKeyEventDispatcher {
	}


	interface DragKeyEventDispatcher extends KeyEventDispatcher {}}

export = StripeButton
