import InternalDecorator = require('nashorn/com/intellij/openapi/wm/impl/InternalDecorator');
import ToolWindowAnchor = require('nashorn/com/intellij/openapi/wm/ToolWindowAnchor');
import ToolWindowType = require('nashorn/com/intellij/openapi/wm/ToolWindowType');
import ToolWindowContentUiType = require('nashorn/com/intellij/openapi/wm/ToolWindowContentUiType');
import EventListener = require('nashorn/java/util/EventListener');

declare class InternalDecoratorListener {
	anchorChanged(arg1 : InternalDecorator, arg2 : ToolWindowAnchor) : void;
	autoHideChanged(arg1 : InternalDecorator, arg2 : boolean) : void;
	hidden(arg1 : InternalDecorator) : void;
	hiddenSide(arg1 : InternalDecorator) : void;
	resized(arg1 : InternalDecorator) : void;
	activated(arg1 : InternalDecorator) : void;
	typeChanged(arg1 : InternalDecorator, arg2 : ToolWindowType) : void;
	sideStatusChanged(arg1 : InternalDecorator, arg2 : boolean) : void;
	contentUiTypeChanges(arg1 : InternalDecorator, arg2 : ToolWindowContentUiType) : void;
}


declare interface InternalDecoratorListener extends EventListener {}
export = InternalDecoratorListener
