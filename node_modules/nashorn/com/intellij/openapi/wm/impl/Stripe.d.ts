import List = require('nashorn/java/util/List');
import StripeButton = require('nashorn/com/intellij/openapi/wm/impl/StripeButton');
import ToolWindowAnchor = require('nashorn/com/intellij/openapi/wm/ToolWindowAnchor');
import Dimension = require('nashorn/java/awt/Dimension');
import Comparator = require('nashorn/java/util/Comparator');
import JComponent = require('nashorn/javax/swing/JComponent');
import Rectangle = require('nashorn/java/awt/Rectangle');
import Point = require('nashorn/java/awt/Point');
import BufferedImage = require('nashorn/java/awt/image/BufferedImage');
import JPanel = require('nashorn/javax/swing/JPanel');
import UISettingsListener = require('nashorn/com/intellij/ide/ui/UISettingsListener');
import KeymapManagerListener = require('nashorn/com/intellij/openapi/keymap/KeymapManagerListener');
import Object = require('nashorn/java/lang/Object');
import Graphics = require('nashorn/java/awt/Graphics');
import Insets = require('nashorn/java/awt/Insets');
import Border = require('nashorn/javax/swing/border/Border');

declare class Stripe {
	buttons : List<StripeButton>;
	anchor : ToolWindowAnchor;
	preferredSize : Dimension;
	addButton(arg1 : StripeButton, arg2 : Comparator<StripeButton>) : void;
	removeButton(arg1 : StripeButton) : void;
	getButtons() : List<StripeButton>;
	a(arg1 : boolean, arg2 : Dimension) : Stripe.LayoutData;
	a(arg1 : boolean, arg2 : Dimension, arg3 : boolean) : Stripe.LayoutData;
	a(arg1 : Stripe.LayoutData, arg2 : number, arg3 : number) : void;
	a() : List<StripeButton>;
	getAnchor() : ToolWindowAnchor;
	static a(arg1 : Stripe.LayoutData, arg2 : JComponent, arg3 : boolean) : void;
	startDrag() : void;
	stopDrag() : void;
	getButtonFor(arg1 : string) : StripeButton;
	setOverlayed(arg1 : boolean) : void;
	b() : boolean;
	updatePresentation() : void;
	containsScreen(arg1 : Rectangle) : boolean;
	finishDrop() : void;
	resetDrop() : void;
	processDropButton(arg1 : StripeButton, arg2 : JComponent, arg3 : Point) : void;
	c() : boolean;
	a(arg1 : StripeButton) : boolean;
	d() : BufferedImage;
}


declare interface Stripe extends JPanel {}

declare module Stripe {
	class MyUISettingsListener {
	}


	interface MyUISettingsListener extends UISettingsListener {}	class MyKeymapManagerListener {
	}


	interface MyKeymapManagerListener extends KeymapManagerListener {}	class LayoutData extends Object {
	}
	class AdaptiveBorder {
		borderOpaque : boolean;
		static a(arg1 : Graphics, arg2 : number, arg3 : number, arg4 : number, arg5 : number, arg6 : Insets) : void;
	}


	interface AdaptiveBorder extends Border {}}

export = Stripe
