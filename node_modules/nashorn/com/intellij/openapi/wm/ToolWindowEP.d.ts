import ExtensionPointName = require('nashorn/com/intellij/openapi/extensions/ExtensionPointName');
import ToolWindowFactory = require('nashorn/com/intellij/openapi/wm/ToolWindowFactory');
import Condition = require('nashorn/com/intellij/openapi/util/Condition');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Class = require('nashorn/java/lang/Class');
import AbstractExtensionPointBean = require('nashorn/com/intellij/openapi/extensions/AbstractExtensionPointBean');

declare class ToolWindowEP {
	static EP_NAME : ExtensionPointName<ToolWindowEP>;
	id : string;
	anchor : string;
	icon : string;
	factoryClass : string;
	conditionClass : string;
	secondary : boolean;
	canCloseContents : boolean;
	toolWindowFactory : ToolWindowFactory;
	condition : Condition<Project>;
	constructor();
	getToolWindowFactory() : ToolWindowFactory;
	getFactoryClass() : Class<ToolWindowFactory>;
	getCondition() : Condition<Project>;
}


declare interface ToolWindowEP extends AbstractExtensionPointBean {}
export = ToolWindowEP
