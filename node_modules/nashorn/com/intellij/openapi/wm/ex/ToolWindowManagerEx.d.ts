import DesktopLayout = require('nashorn/com/intellij/openapi/wm/impl/DesktopLayout');
import ToolWindowEP = require('nashorn/com/intellij/openapi/wm/ToolWindowEP');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import ToolWindowManagerListener = require('nashorn/com/intellij/openapi/wm/ex/ToolWindowManagerListener');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import Condition = require('nashorn/com/intellij/openapi/util/Condition');
import JComponent = require('nashorn/javax/swing/JComponent');
import ToolWindowAnchor = require('nashorn/com/intellij/openapi/wm/ToolWindowAnchor');
import List = require('nashorn/java/util/List');
import ToolWindowManager = require('nashorn/com/intellij/openapi/wm/ToolWindowManager');

declare class ToolWindowManagerEx {
	lastActiveToolWindowId : string;
	layout : DesktopLayout;
	layoutToRestoreLater : DesktopLayout;
	constructor();
	initToolWindow(arg1 : ToolWindowEP) : void;
	static getInstanceEx(arg1 : Project) : ToolWindowManagerEx;
	addToolWindowManagerListener(arg1 : ToolWindowManagerListener) : void;
	addToolWindowManagerListener(arg1 : ToolWindowManagerListener, arg2 : Disposable) : void;
	removeToolWindowManagerListener(arg1 : ToolWindowManagerListener) : void;
	getLastActiveToolWindowId() : string;
	getLastActiveToolWindowId(arg1 : Condition<JComponent>) : string;
	getLayout() : DesktopLayout;
	setLayoutToRestoreLater(arg1 : DesktopLayout) : void;
	getLayoutToRestoreLater() : DesktopLayout;
	setLayout(arg1 : DesktopLayout) : void;
	clearSideStack() : void;
	hideToolWindow(arg1 : string, arg2 : boolean) : void;
	getIdsOn(arg1 : ToolWindowAnchor) : List<string>;
}


declare interface ToolWindowManagerEx extends ToolWindowManager {}
export = ToolWindowManagerEx
