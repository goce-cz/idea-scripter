import Window = require('nashorn/java/awt/Window');
import CommandProcessor = require('nashorn/com/intellij/openapi/wm/impl/CommandProcessor');
import DesktopLayout = require('nashorn/com/intellij/openapi/wm/impl/DesktopLayout');
import Rectangle = require('nashorn/java/awt/Rectangle');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import IdeFrameImpl = require('nashorn/com/intellij/openapi/wm/impl/IdeFrameImpl');
import Component = require('nashorn/java/awt/Component');
import IdeFrame = require('nashorn/com/intellij/openapi/wm/IdeFrame');
import ComponentEvent = require('nashorn/java/awt/event/ComponentEvent');
import Shape = require('nashorn/java/awt/Shape');
import JDialog = require('nashorn/javax/swing/JDialog');
import Dimension = require('nashorn/java/awt/Dimension');
import WindowManager = require('nashorn/com/intellij/openapi/wm/WindowManager');
import Enum = require('nashorn/java/lang/Enum');

declare class WindowManagerEx {
	static instanceEx : WindowManagerEx;
	mostRecentFocusedWindow : Window;
	commandProcessor : CommandProcessor;
	layout : DesktopLayout;
	screenBounds : Rectangle;
	constructor();
	static getInstanceEx() : WindowManagerEx;
	allocateFrame(arg1 : Project) : IdeFrameImpl;
	releaseFrame(arg1 : IdeFrameImpl) : void;
	getFocusedComponent(arg1 : Window) : Component;
	getFocusedComponent(arg1 : Project) : Component;
	getMostRecentFocusedWindow() : Window;
	findFrameFor(arg1 : Project) : IdeFrame;
	getCommandProcessor() : CommandProcessor;
	getLayout() : DesktopLayout;
	setLayout(arg1 : DesktopLayout) : void;
	dispatchComponentEvent(arg1 : ComponentEvent) : void;
	getScreenBounds() : Rectangle;
	getScreenBounds(arg1 : Project) : Rectangle;
	setWindowMask(arg1 : Window, arg2 : Shape) : void;
	setWindowShadow(arg1 : Window, arg2 : WindowManagerEx.WindowShadowMode) : void;
	resetWindow(arg1 : Window) : void;
	hideDialog(arg1 : JDialog, arg2 : Project) : void;
	adjustContainerWindow(arg1 : Component, arg2 : Dimension, arg3 : Dimension) : void;
}


declare interface WindowManagerEx extends WindowManager {}

declare module WindowManagerEx {
	class WindowShadowMode {
		static NORMAL : WindowManagerEx.WindowShadowMode;
		static SMALL : WindowManagerEx.WindowShadowMode;
		static DISABLED : WindowManagerEx.WindowShadowMode;
	}


	interface WindowShadowMode extends Enum<WindowManagerEx.WindowShadowMode> {}}

export = WindowManagerEx
