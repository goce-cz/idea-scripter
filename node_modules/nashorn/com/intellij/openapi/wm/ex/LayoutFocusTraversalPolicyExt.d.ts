import Object = require('nashorn/java/lang/Object');
import Component = require('nashorn/java/awt/Component');
import JComponent = require('nashorn/javax/swing/JComponent');
import Container = require('nashorn/java/awt/Container');
import Computable = require('nashorn/com/intellij/openapi/util/Computable');
import LayoutFocusTraversalPolicy = require('nashorn/javax/swing/LayoutFocusTraversalPolicy');

declare class LayoutFocusTraversalPolicyExt {
	noDefaultComponent : boolean;
	constructor();
	setNoDefaultComponent(arg1 : boolean, arg2 : Object) : void;
	isNoDefaultComponent() : boolean;
	static findWindowPolicy(arg1 : Component) : LayoutFocusTraversalPolicyExt;
	static setOverridenDefaultComponent(arg1 : JComponent) : void;
	getDefaultComponentImpl(arg1 : Container) : Component;
	getFirstComponentImpl(arg1 : Container) : Component;
	getLastComponentImpl(arg1 : Container) : Component;
	getComponentAfterImpl(arg1 : Container, arg2 : Component) : Component;
	getComponentBeforeImpl(arg1 : Container, arg2 : Component) : Component;
	queryImpl(arg1 : Computable<Component>) : Component;
}


declare interface LayoutFocusTraversalPolicyExt extends LayoutFocusTraversalPolicy {}
export = LayoutFocusTraversalPolicyExt
