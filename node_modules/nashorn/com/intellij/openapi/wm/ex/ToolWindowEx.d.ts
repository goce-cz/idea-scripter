import ToolWindowType = require('nashorn/com/intellij/openapi/wm/ToolWindowType');
import InternalDecorator = require('nashorn/com/intellij/openapi/wm/impl/InternalDecorator');
import PropertyChangeListener = require('nashorn/java/beans/PropertyChangeListener');
import ActionGroup = require('nashorn/com/intellij/openapi/actionSystem/ActionGroup');
import AnAction = require('nashorn/com/intellij/openapi/actionSystem/AnAction');
import ToolWindow = require('nashorn/com/intellij/openapi/wm/ToolWindow');

declare class ToolWindowEx {
	static PROP_AVAILABLE : string;
	static PROP_ICON : string;
	static PROP_TITLE : string;
	static PROP_STRIPE_TITLE : string;
	internalType : ToolWindowType;
	decorator : InternalDecorator;
	useLastFocusedOnActivation : boolean;
	removePropertyChangeListener(arg1 : PropertyChangeListener) : void;
	getInternalType() : ToolWindowType;
	stretchWidth(arg1 : number) : void;
	stretchHeight(arg1 : number) : void;
	getDecorator() : InternalDecorator;
	setAdditionalGearActions(arg1 : ActionGroup) : void;
	setTitleActions(arg1 : AnAction[]) : void;
	setUseLastFocusedOnActivation(arg1 : boolean) : void;
	isUseLastFocusedOnActivation() : boolean;
}


declare interface ToolWindowEx extends ToolWindow {}
export = ToolWindowEx
