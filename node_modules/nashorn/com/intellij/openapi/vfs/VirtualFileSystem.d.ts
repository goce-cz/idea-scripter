import Object = require('nashorn/java/lang/Object');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import VirtualFileListener = require('nashorn/com/intellij/openapi/vfs/VirtualFileListener');

declare class VirtualFileSystem extends Object {
	protocol : string;
	readOnly : boolean;
	caseSensitive : boolean;
	getProtocol() : string;
	findFileByPath(arg1 : string) : VirtualFile;
	extractPresentableUrl(arg1 : string) : string;
	refresh(arg1 : boolean) : void;
	refreshAndFindFileByPath(arg1 : string) : VirtualFile;
	addVirtualFileListener(arg1 : VirtualFileListener) : void;
	removeVirtualFileListener(arg1 : VirtualFileListener) : void;
	forceRefreshFile(arg1 : boolean, arg2 : VirtualFile) : void;
	deleteFile(arg1 : Object, arg2 : VirtualFile) : void;
	moveFile(arg1 : Object, arg2 : VirtualFile, arg3 : VirtualFile) : void;
	renameFile(arg1 : Object, arg2 : VirtualFile, arg3 : string) : void;
	createChildFile(arg1 : Object, arg2 : VirtualFile, arg3 : string) : VirtualFile;
	createChildDirectory(arg1 : Object, arg2 : VirtualFile, arg3 : string) : VirtualFile;
	copyFile(arg1 : Object, arg2 : VirtualFile, arg3 : VirtualFile, arg4 : string) : VirtualFile;
	isReadOnly() : boolean;
	isCaseSensitive() : boolean;
}

export = VirtualFileSystem
