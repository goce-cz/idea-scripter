import Object = require('nashorn/java/lang/Object');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import InputStream = require('nashorn/java/io/InputStream');
import OutputStream = require('nashorn/java/io/OutputStream');

declare class FileSystemInterface extends Object {
	static DEFAULT_LENGTH : number;
	static DEFAULT_TIMESTAMP : number;
	exists(arg1 : VirtualFile) : boolean;
	list(arg1 : VirtualFile) : string[];
	isDirectory(arg1 : VirtualFile) : boolean;
	getTimeStamp(arg1 : VirtualFile) : number;
	setTimeStamp(arg1 : VirtualFile, arg2 : number) : void;
	isWritable(arg1 : VirtualFile) : boolean;
	setWritable(arg1 : VirtualFile, arg2 : boolean) : void;
	isSymLink(arg1 : VirtualFile) : boolean;
	resolveSymLink(arg1 : VirtualFile) : string;
	isSpecialFile(arg1 : VirtualFile) : boolean;
	createChildDirectory(arg1 : Object, arg2 : VirtualFile, arg3 : string) : VirtualFile;
	createChildFile(arg1 : Object, arg2 : VirtualFile, arg3 : string) : VirtualFile;
	deleteFile(arg1 : Object, arg2 : VirtualFile) : void;
	moveFile(arg1 : Object, arg2 : VirtualFile, arg3 : VirtualFile) : void;
	renameFile(arg1 : Object, arg2 : VirtualFile, arg3 : string) : void;
	copyFile(arg1 : Object, arg2 : VirtualFile, arg3 : VirtualFile, arg4 : string) : VirtualFile;
	contentsToByteArray(arg1 : VirtualFile) : number[];
	getInputStream(arg1 : VirtualFile) : InputStream;
	getOutputStream(arg1 : VirtualFile, arg2 : Object, arg3 : number, arg4 : number) : OutputStream;
	getLength(arg1 : VirtualFile) : number;
}

export = FileSystemInterface
