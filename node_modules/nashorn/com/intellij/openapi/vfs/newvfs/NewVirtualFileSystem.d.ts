import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import FileAttributes = require('nashorn/com/intellij/openapi/util/io/FileAttributes');
import VirtualFileSystem = require('nashorn/com/intellij/openapi/vfs/VirtualFileSystem');
import FileSystemInterface = require('nashorn/com/intellij/openapi/vfs/newvfs/FileSystemInterface');
import CachingVirtualFileSystem = require('nashorn/com/intellij/openapi/vfs/newvfs/CachingVirtualFileSystem');

declare class NewVirtualFileSystem {
	readOnly : boolean;
	rank : number;
	constructor();
	findFileByPathIfCached(arg1 : string) : VirtualFile;
	normalize(arg1 : string) : string;
	extractRootPath(arg1 : string) : string;
	getRank() : number;
	markNewFilesAsDirty() : boolean;
	getCanonicallyCasedName(arg1 : VirtualFile) : string;
	getAttributes(arg1 : VirtualFile) : FileAttributes;
}


declare interface NewVirtualFileSystem extends VirtualFileSystem, FileSystemInterface, CachingVirtualFileSystem {}
export = NewVirtualFileSystem
