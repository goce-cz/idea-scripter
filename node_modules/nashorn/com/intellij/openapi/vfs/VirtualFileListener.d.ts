import VirtualFilePropertyEvent = require('nashorn/com/intellij/openapi/vfs/VirtualFilePropertyEvent');
import VirtualFileEvent = require('nashorn/com/intellij/openapi/vfs/VirtualFileEvent');
import VirtualFileMoveEvent = require('nashorn/com/intellij/openapi/vfs/VirtualFileMoveEvent');
import VirtualFileCopyEvent = require('nashorn/com/intellij/openapi/vfs/VirtualFileCopyEvent');
import EventListener = require('nashorn/java/util/EventListener');

declare class VirtualFileListener {
	propertyChanged(arg1 : VirtualFilePropertyEvent) : void;
	contentsChanged(arg1 : VirtualFileEvent) : void;
	fileCreated(arg1 : VirtualFileEvent) : void;
	fileDeleted(arg1 : VirtualFileEvent) : void;
	fileMoved(arg1 : VirtualFileMoveEvent) : void;
	fileCopied(arg1 : VirtualFileCopyEvent) : void;
	beforePropertyChange(arg1 : VirtualFilePropertyEvent) : void;
	beforeContentsChange(arg1 : VirtualFileEvent) : void;
	beforeFileDeletion(arg1 : VirtualFileEvent) : void;
	beforeFileMovement(arg1 : VirtualFileMoveEvent) : void;
}


declare interface VirtualFileListener extends EventListener {}
export = VirtualFileListener
