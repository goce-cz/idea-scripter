import Object = require('nashorn/java/lang/Object');
import List = require('nashorn/java/util/List');
import VirtualFilePointer = require('nashorn/com/intellij/openapi/vfs/pointers/VirtualFilePointer');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import Element = require('nashorn/org/jdom/Element');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import VirtualFilePointerListener = require('nashorn/com/intellij/openapi/vfs/pointers/VirtualFilePointerListener');

declare class VirtualFilePointerContainer extends Object {
	list : List<VirtualFilePointer>;
	urls : string[];
	files : VirtualFile[];
	directories : VirtualFile[];
	killAll() : void;
	add(arg1 : VirtualFile) : void;
	add(arg1 : string) : void;
	remove(arg1 : VirtualFilePointer) : void;
	getList() : List<VirtualFilePointer>;
	addAll(arg1 : VirtualFilePointerContainer) : void;
	getUrls() : string[];
	getFiles() : VirtualFile[];
	getDirectories() : VirtualFile[];
	findByUrl(arg1 : string) : VirtualFilePointer;
	clear() : void;
	size() : number;
	readExternal(arg1 : Element, arg2 : string) : void;
	writeExternal(arg1 : Element, arg2 : string) : void;
	moveUp(arg1 : string) : void;
	moveDown(arg1 : string) : void;
	clone(arg1 : Disposable) : VirtualFilePointerContainer;
	clone(arg1 : Disposable, arg2 : VirtualFilePointerListener) : VirtualFilePointerContainer;
}

export = VirtualFilePointerContainer
