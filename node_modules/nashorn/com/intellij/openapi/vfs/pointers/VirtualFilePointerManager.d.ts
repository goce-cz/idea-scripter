import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import VirtualFilePointerListener = require('nashorn/com/intellij/openapi/vfs/pointers/VirtualFilePointerListener');
import VirtualFilePointer = require('nashorn/com/intellij/openapi/vfs/pointers/VirtualFilePointer');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import VirtualFilePointerContainer = require('nashorn/com/intellij/openapi/vfs/pointers/VirtualFilePointerContainer');
import SimpleModificationTracker = require('nashorn/com/intellij/openapi/util/SimpleModificationTracker');

declare class VirtualFilePointerManager {
	static instance : VirtualFilePointerManager;
	constructor();
	static getInstance() : VirtualFilePointerManager;
	create(arg1 : string, arg2 : Disposable, arg3 : VirtualFilePointerListener) : VirtualFilePointer;
	create(arg1 : VirtualFile, arg2 : Disposable, arg3 : VirtualFilePointerListener) : VirtualFilePointer;
	duplicate(arg1 : VirtualFilePointer, arg2 : Disposable, arg3 : VirtualFilePointerListener) : VirtualFilePointer;
	createContainer(arg1 : Disposable) : VirtualFilePointerContainer;
	createContainer(arg1 : Disposable, arg2 : VirtualFilePointerListener) : VirtualFilePointerContainer;
}


declare interface VirtualFilePointerManager extends SimpleModificationTracker, Disposable {}
export = VirtualFilePointerManager
