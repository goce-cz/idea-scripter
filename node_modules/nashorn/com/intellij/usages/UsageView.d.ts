import DataKey = require('nashorn/com/intellij/openapi/actionSystem/DataKey');
import UsageTarget = require('nashorn/com/intellij/usages/UsageTarget');
import Usage = require('nashorn/com/intellij/usages/Usage');
import UsageInfo = require('nashorn/com/intellij/usageView/UsageInfo');
import SearchScope = require('nashorn/com/intellij/psi/search/SearchScope');
import List = require('nashorn/java/util/List');
import UsageViewPresentation = require('nashorn/com/intellij/usages/UsageViewPresentation');
import Set = require('nashorn/java/util/Set');
import JComponent = require('nashorn/javax/swing/JComponent');
import Runnable = require('nashorn/java/lang/Runnable');
import Collection = require('nashorn/java/util/Collection');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');

declare class UsageView {
	static USAGE_TARGETS_KEY : DataKey<UsageTarget[]>;
	static USAGE_TARGETS : string;
	static USAGES_KEY : DataKey<Usage[]>;
	static USAGES : string;
	static USAGE_VIEW_KEY : DataKey<UsageView>;
	static USAGE_VIEW : string;
	static USAGE_INFO_KEY : DataKey<UsageInfo>;
	static USAGE_SCOPE : DataKey<SearchScope>;
	static USAGE_INFO_LIST_KEY : DataKey<List<UsageInfo>>;
	searchInProgress : boolean;
	presentation : UsageViewPresentation;
	excludedUsages : Set<Usage>;
	selectedUsages : Set<Usage>;
	usages : Set<Usage>;
	sortedUsages : List<Usage>;
	component : JComponent;
	usagesCount : number;
	appendUsage(arg1 : Usage) : void;
	removeUsage(arg1 : Usage) : void;
	includeUsages(arg1 : Usage[]) : void;
	excludeUsages(arg1 : Usage[]) : void;
	selectUsages(arg1 : Usage[]) : void;
	close() : void;
	isSearchInProgress() : boolean;
	addButtonToLowerPane(arg1 : Runnable, arg2 : string, arg3 : string) : void;
	addButtonToLowerPane(arg1 : Runnable, arg2 : string) : void;
	addPerformOperationAction(arg1 : Runnable, arg2 : string, arg3 : string, arg4 : string) : void;
	addPerformOperationAction(arg1 : Runnable, arg2 : string, arg3 : string, arg4 : string, arg5 : boolean) : void;
	getPresentation() : UsageViewPresentation;
	getExcludedUsages() : Set<Usage>;
	getSelectedUsages() : Set<Usage>;
	getUsages() : Set<Usage>;
	getSortedUsages() : List<Usage>;
	getComponent() : JComponent;
	getUsagesCount() : number;
	removeUsagesBulk(arg1 : Collection<Usage>) : void;
}


declare interface UsageView extends Disposable {}
export = UsageView
