import Object = require('nashorn/java/lang/Object');
import UsageView = require('nashorn/com/intellij/usages/UsageView');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import UsageTarget = require('nashorn/com/intellij/usages/UsageTarget');
import Usage = require('nashorn/com/intellij/usages/Usage');
import UsageViewPresentation = require('nashorn/com/intellij/usages/UsageViewPresentation');
import Factory = require('nashorn/com/intellij/openapi/util/Factory');
import UsageSearcher = require('nashorn/com/intellij/usages/UsageSearcher');
import FindUsagesProcessPresentation = require('nashorn/com/intellij/usages/FindUsagesProcessPresentation');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');

declare class UsageViewManager extends Object {
	selectedUsageView : UsageView;
	constructor();
	static getInstance(arg1 : Project) : UsageViewManager;
	createUsageView(arg1 : UsageTarget[], arg2 : Usage[], arg3 : UsageViewPresentation, arg4 : Factory<UsageSearcher>) : UsageView;
	showUsages(arg1 : UsageTarget[], arg2 : Usage[], arg3 : UsageViewPresentation, arg4 : Factory<UsageSearcher>) : UsageView;
	showUsages(arg1 : UsageTarget[], arg2 : Usage[], arg3 : UsageViewPresentation) : UsageView;
	searchAndShowUsages(arg1 : UsageTarget[], arg2 : Factory<UsageSearcher>, arg3 : boolean, arg4 : boolean, arg5 : UsageViewPresentation, arg6 : UsageViewManager.UsageViewStateListener) : UsageView;
	searchAndShowUsages(arg1 : UsageTarget[], arg2 : Factory<UsageSearcher>, arg3 : FindUsagesProcessPresentation, arg4 : UsageViewPresentation, arg5 : UsageViewManager.UsageViewStateListener) : void;
	getSelectedUsageView() : UsageView;
	static isSelfUsage(arg1 : Usage, arg2 : UsageTarget[]) : boolean;
	static isSelfUsage(arg1 : PsiElement, arg2 : PsiElement) : boolean;
}


declare module UsageViewManager {
	class UsageViewStateListener extends Object {
		usageViewCreated(arg1 : UsageView) : void;
		findingUsagesFinished(arg1 : UsageView) : void;
	}
}

export = UsageViewManager
