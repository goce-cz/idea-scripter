import UsageNode = require('nashorn/com/intellij/usages/impl/UsageNode');
import UsageViewPresentation = require('nashorn/com/intellij/usages/UsageViewPresentation');
import UsageTarget = require('nashorn/com/intellij/usages/UsageTarget');
import TreeNode = require('nashorn/javax/swing/tree/TreeNode');
import Class = require('nashorn/java/lang/Class');
import DefaultTreeModel = require('nashorn/javax/swing/tree/DefaultTreeModel');
import GroupNode = require('nashorn/com/intellij/usages/impl/GroupNode');
import DefaultMutableTreeNode = require('nashorn/javax/swing/tree/DefaultMutableTreeNode');

declare class UsageViewTreeModelBuilder {
	firstUsageNode : UsageNode;
	detachedMode : boolean;
	filterDuplicatedLine : boolean;
	constructor(arg1 : UsageViewPresentation, arg2 : UsageTarget[]);
	addTargetNodes() : void;
	getFirstUsageNode() : UsageNode;
	static getFirstChildOfType(arg1 : TreeNode, arg2 : Class) : TreeNode;
	areTargetsValid() : boolean;
	reset() : void;
	isDetachedMode() : boolean;
	isFilterDuplicatedLine() : boolean;
}


declare interface UsageViewTreeModelBuilder extends DefaultTreeModel {}

declare module UsageViewTreeModelBuilder {
	class RootGroupNode {
	}


	interface RootGroupNode extends GroupNode {}	class TargetsRootNode {
		constructor(arg1 : string);
	}


	interface TargetsRootNode extends DefaultMutableTreeNode {}}

export = UsageViewTreeModelBuilder
