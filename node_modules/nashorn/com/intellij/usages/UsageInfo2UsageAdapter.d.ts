import NotNullFunction = require('nashorn/com/intellij/util/NotNullFunction');
import UsageInfo = require('nashorn/com/intellij/usageView/UsageInfo');
import Usage = require('nashorn/com/intellij/usages/Usage');
import UsagePresentation = require('nashorn/com/intellij/usages/UsagePresentation');
import FileEditorLocation = require('nashorn/com/intellij/openapi/fileEditor/FileEditorLocation');
import Document = require('nashorn/com/intellij/openapi/editor/Document');
import Module = require('nashorn/com/intellij/openapi/module/Module');
import OrderEntry = require('nashorn/com/intellij/openapi/roots/OrderEntry');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import PsiReference = require('nashorn/com/intellij/psi/PsiReference');
import TextChunk = require('nashorn/com/intellij/usages/TextChunk');
import Icon = require('nashorn/javax/swing/Icon');
import UsageType = require('nashorn/com/intellij/usages/impl/rules/UsageType');
import Segment = require('nashorn/com/intellij/openapi/util/Segment');
import Processor = require('nashorn/com/intellij/util/Processor');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import OpenFileDescriptor = require('nashorn/com/intellij/openapi/fileEditor/OpenFileDescriptor');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import UsageInModule = require('nashorn/com/intellij/usages/rules/UsageInModule');
import UsageInLibrary = require('nashorn/com/intellij/usages/rules/UsageInLibrary');
import UsageInFile = require('nashorn/com/intellij/usages/rules/UsageInFile');
import PsiElementUsage = require('nashorn/com/intellij/usages/rules/PsiElementUsage');
import MergeableUsage = require('nashorn/com/intellij/usages/rules/MergeableUsage');
import Comparable = require('nashorn/java/lang/Comparable');
import RenameableUsage = require('nashorn/com/intellij/usages/RenameableUsage');
import TypeSafeDataProvider = require('nashorn/com/intellij/openapi/actionSystem/TypeSafeDataProvider');

declare class UsageInfo2UsageAdapter {
	static CONVERTER : NotNullFunction<UsageInfo, Usage>;
	presentation : UsagePresentation;
	valid : boolean;
	readOnly : boolean;
	location : FileEditorLocation;
	document : Document;
	module : Module;
	libraryEntry : OrderEntry;
	file : VirtualFile;
	line : number;
	element : PsiElement;
	reference : PsiReference;
	nonCodeUsage : boolean;
	usageInfo : UsageInfo;
	text : TextChunk[];
	plainText : string;
	icon : Icon;
	tooltipText : string;
	usageType : UsageType;
	constructor(arg1 : UsageInfo);
	static getLineNumber(arg1 : Document, arg2 : number) : number;
	initChunks() : TextChunk[];
	getFirstSegment() : Segment;
	processRangeMarkers(arg1 : Processor<Segment>) : boolean;
	getDocument() : Document;
	openTextEditor(arg1 : boolean) : Editor;
	getDescriptor() : OpenFileDescriptor;
	getNavigationOffset() : number;
	getNavigationRange() : Segment;
	getProject() : Project;
	getPsiFile() : PsiFile;
	getLine() : number;
	getReference() : PsiReference;
	getUsageInfo() : UsageInfo;
	static convert(arg1 : UsageInfo[]) : UsageInfo2UsageAdapter[];
	getMergedInfos() : UsageInfo[];
	getCurrentModificationStamp() : number;
	isFindInPathUsage(arg1 : PsiElement) : boolean;
	getUsageType() : UsageType;
}


declare interface UsageInfo2UsageAdapter extends UsageInModule, UsageInLibrary, UsageInFile, PsiElementUsage, MergeableUsage, Comparable<UsageInfo2UsageAdapter>, RenameableUsage, TypeSafeDataProvider, UsagePresentation {}
export = UsageInfo2UsageAdapter
