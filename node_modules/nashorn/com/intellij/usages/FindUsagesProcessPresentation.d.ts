import Object = require('nashorn/java/lang/Object');
import List = require('nashorn/java/util/List');
import Action = require('nashorn/javax/swing/Action');
import Factory = require('nashorn/com/intellij/openapi/util/Factory');
import ProgressIndicator = require('nashorn/com/intellij/openapi/progress/ProgressIndicator');
import Collection = require('nashorn/java/util/Collection');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import UsageViewPresentation = require('nashorn/com/intellij/usages/UsageViewPresentation');
import Runnable = require('nashorn/java/lang/Runnable');

declare class FindUsagesProcessPresentation extends Object {
	static NAME_WITH_MNEMONIC_KEY : string;
	notFoundActions : List<Action>;
	showNotFoundMessage : boolean;
	showPanelIfOnlyOneUsage : boolean;
	progressIndicatorFactory : Factory<ProgressIndicator>;
	largeFiles : Collection<VirtualFile>;
	showFindOptionsPrompt : boolean;
	usageViewPresentation : UsageViewPresentation;
	canceled : boolean;
	constructor(arg1 : UsageViewPresentation);
	addNotFoundAction(arg1 : Action) : void;
	getNotFoundActions() : List<Action>;
	isShowNotFoundMessage() : boolean;
	setShowNotFoundMessage(arg1 : boolean) : void;
	isShowPanelIfOnlyOneUsage() : boolean;
	setShowPanelIfOnlyOneUsage(arg1 : boolean) : void;
	getProgressIndicatorFactory() : Factory<ProgressIndicator>;
	setProgressIndicatorFactory(arg1 : Factory<ProgressIndicator>) : void;
	searchIncludingProjectFileUsages() : Runnable;
	projectFileUsagesFound(arg1 : Runnable) : void;
	setLargeFilesWereNotScanned(arg1 : Collection<VirtualFile>) : void;
	getLargeFiles() : Collection<VirtualFile>;
	isShowFindOptionsPrompt() : boolean;
	getUsageViewPresentation() : UsageViewPresentation;
	setShowFindOptionsPrompt(arg1 : boolean) : void;
	setCanceled(arg1 : boolean) : void;
	isCanceled() : boolean;
}

export = FindUsagesProcessPresentation
