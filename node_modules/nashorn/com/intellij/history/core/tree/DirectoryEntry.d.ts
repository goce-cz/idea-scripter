import List = require('nashorn/java/util/List');
import Entry = require('nashorn/com/intellij/history/core/tree/Entry');
import DataInput = require('nashorn/java/io/DataInput');
import Difference = require('nashorn/com/intellij/history/core/revisions/Difference');

declare class DirectoryEntry {
	timestamp : number;
	directory : boolean;
	children : List<Entry>;
	constructor(arg1 : string);
	constructor(arg1 : DataInput, arg2 : boolean);
	b(arg1 : Entry) : void;
	checkDoesNotExist(arg1 : Entry, arg2 : string) : boolean;
	copyEntry() : DirectoryEntry;
	a(arg1 : DirectoryEntry, arg2 : List<Difference>) : void;
	b(arg1 : DirectoryEntry, arg2 : List<Difference>) : void;
	c(arg1 : DirectoryEntry, arg2 : List<Difference>) : void;
	findDirectChild(arg1 : string, arg2 : boolean) : Entry;
}


declare interface DirectoryEntry extends Entry {}
export = DirectoryEntry
