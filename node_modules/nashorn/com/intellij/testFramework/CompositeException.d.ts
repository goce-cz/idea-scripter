import Throwable = require('nashorn/java/lang/Throwable');
import Function = require('nashorn/com/intellij/util/Function');
import Processor = require('nashorn/com/intellij/util/Processor');
import Exception = require('nashorn/java/lang/Exception');

declare class CompositeException {
	empty : boolean;
	message : string;
	localizedMessage : string;
	constructor(arg1 : Throwable[]);
	add(arg1 : Throwable) : void;
	isEmpty() : boolean;
	a(arg1 : Function<Throwable, string>, arg2 : Processor<string>) : string;
	throwIfNotEmpty() : void;
}


declare interface CompositeException extends Exception {}
export = CompositeException
