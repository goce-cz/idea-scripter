import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import Module = require('nashorn/com/intellij/openapi/module/Module');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import PsiTestData = require('nashorn/com/intellij/testFramework/PsiTestData');
import OrderRootType = require('nashorn/com/intellij/openapi/roots/OrderRootType');
import Document = require('nashorn/com/intellij/openapi/editor/Document');
import ModuleTestCase = require('nashorn/com/intellij/testFramework/ModuleTestCase');

declare class PsiTestCase {
	file : PsiFile;
	constructor();
	createDummyFile(arg1 : string, arg2 : string) : PsiFile;
	createFile(arg1 : string, arg2 : string) : PsiFile;
	createFile(arg1 : Module, arg2 : string, arg3 : string) : PsiFile;
	createFile(arg1 : Module, arg2 : VirtualFile, arg3 : string, arg4 : string) : PsiFile;
	addSourceContentToRoots(arg1 : Module, arg2 : VirtualFile) : void;
	configureByFileWithMarker(arg1 : string, arg2 : string) : PsiElement;
	configure(arg1 : string, arg2 : string) : void;
	getTestDataPath() : string;
	loadFile(arg1 : string) : string;
	loadData(arg1 : string) : PsiTestData;
	createData() : PsiTestData;
	checkResult(arg1 : string) : void;
	static printText(arg1 : string) : void;
	addLibraryToRoots(arg1 : VirtualFile, arg2 : OrderRootType) : void;
	static addLibraryToRoots(arg1 : Module, arg2 : VirtualFile, arg3 : OrderRootType) : void;
	getFile() : PsiFile;
	getDocument(arg1 : PsiFile) : Document;
	getDocument(arg1 : VirtualFile) : Document;
	commitDocument(arg1 : Document) : void;
}


declare interface PsiTestCase extends ModuleTestCase {}
export = PsiTestCase
