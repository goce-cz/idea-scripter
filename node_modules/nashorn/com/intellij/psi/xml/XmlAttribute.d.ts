import XmlElement = require('nashorn/com/intellij/psi/xml/XmlElement');
import XmlTag = require('nashorn/com/intellij/psi/xml/XmlTag');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');
import XmlAttributeDescriptor = require('nashorn/com/intellij/xml/XmlAttributeDescriptor');
import XmlAttributeValue = require('nashorn/com/intellij/psi/xml/XmlAttributeValue');
import PsiNamedElement = require('nashorn/com/intellij/psi/PsiNamedElement');

declare class XmlAttribute {
	static EMPTY_ARRAY : XmlAttribute[];
	name : string;
	localName : string;
	nameElement : XmlElement;
	namespace : string;
	namespacePrefix : string;
	parent : XmlTag;
	value : string;
	displayValue : string;
	valueTextRange : TextRange;
	namespaceDeclaration : boolean;
	descriptor : XmlAttributeDescriptor;
	valueElement : XmlAttributeValue;
	getLocalName() : string;
	getNameElement() : XmlElement;
	getNamespace() : string;
	getNamespacePrefix() : string;
	getValue() : string;
	getDisplayValue() : string;
	physicalToDisplay(arg1 : number) : number;
	displayToPhysical(arg1 : number) : number;
	getValueTextRange() : TextRange;
	isNamespaceDeclaration() : boolean;
	getDescriptor() : XmlAttributeDescriptor;
	getValueElement() : XmlAttributeValue;
	setValue(arg1 : string) : void;
}


declare interface XmlAttribute extends XmlElement, PsiNamedElement {}
export = XmlAttribute
