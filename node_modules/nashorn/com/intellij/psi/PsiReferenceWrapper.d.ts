import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');
import Object = require('nashorn/java/lang/Object');
import PsiReference = require('nashorn/com/intellij/psi/PsiReference');
import Class = require('nashorn/java/lang/Class');

declare class PsiReferenceWrapper {
	element : PsiElement;
	rangeInElement : TextRange;
	canonicalText : string;
	variants : Object[];
	soft : boolean;
	constructor(arg1 : PsiReference);
	isInstance<T extends PsiReference>(arg1 : Class<T>) : boolean;
	cast<T extends PsiReference>(arg1 : Class<T>) : T;
}


declare interface PsiReferenceWrapper extends PsiReference {}
export = PsiReferenceWrapper
