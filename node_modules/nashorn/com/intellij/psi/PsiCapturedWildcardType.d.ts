import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import PsiType = require('nashorn/com/intellij/psi/PsiType');
import PsiWildcardType = require('nashorn/com/intellij/psi/PsiWildcardType');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import PsiTypeParameter = require('nashorn/com/intellij/psi/PsiTypeParameter');

declare class PsiCapturedWildcardType {
	presentableText : string;
	internalCanonicalText : string;
	valid : boolean;
	resolveScope : GlobalSearchScope;
	superTypes : PsiType[];
	lowerBound : PsiType;
	upperBound : PsiType;
	wildcard : PsiWildcardType;
	context : PsiElement;
	typeParameter : PsiTypeParameter;
	static create(arg1 : PsiWildcardType, arg2 : PsiElement) : PsiCapturedWildcardType;
	static create(arg1 : PsiWildcardType, arg2 : PsiElement, arg3 : PsiTypeParameter) : PsiCapturedWildcardType;
	getLowerBound() : PsiType;
	getUpperBound() : PsiType;
	setUpperBound(arg1 : PsiType) : void;
	getWildcard() : PsiWildcardType;
	getContext() : PsiElement;
	getTypeParameter() : PsiTypeParameter;
}


declare interface PsiCapturedWildcardType extends PsiType.Stub {}
export = PsiCapturedWildcardType
