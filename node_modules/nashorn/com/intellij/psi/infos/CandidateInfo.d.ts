import JavaResolveResult = require('nashorn/com/intellij/psi/JavaResolveResult');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import PsiSubstitutor = require('nashorn/com/intellij/psi/PsiSubstitutor');
import PsiClass = require('nashorn/com/intellij/psi/PsiClass');

declare class CandidateInfo {
	static EMPTY_ARRAY : CandidateInfo[];
	static RESOLVE_RESULT_FOR_PACKAGE_PREFIX_PACKAGE : JavaResolveResult[];
	validResult : boolean;
	packagePrefixPackageReference : boolean;
	element : PsiElement;
	substitutor : PsiSubstitutor;
	accessible : boolean;
	staticsScopeCorrect : boolean;
	currentFileResolveScope : PsiElement;
	constructor(arg1 : PsiElement, arg2 : PsiSubstitutor, arg3 : boolean, arg4 : boolean, arg5 : PsiElement);
	constructor(arg1 : PsiElement, arg2 : PsiSubstitutor, arg3 : boolean, arg4 : boolean);
	constructor(arg1 : PsiElement, arg2 : PsiSubstitutor, arg3 : PsiElement, arg4 : PsiClass, arg5 : boolean, arg6 : PsiElement);
	constructor(arg1 : PsiElement, arg2 : PsiSubstitutor, arg3 : PsiElement, arg4 : boolean);
	constructor(arg1 : PsiElement, arg2 : PsiSubstitutor);
	constructor(arg1 : CandidateInfo, arg2 : PsiSubstitutor);
	isAccessedThroughTypeParameterBound() : boolean;
}


declare interface CandidateInfo extends JavaResolveResult {}
export = CandidateInfo
