import PsiTreeChangeEvent = require('nashorn/com/intellij/psi/PsiTreeChangeEvent');
import EventListener = require('nashorn/java/util/EventListener');

declare class PsiTreeChangeListener {
	beforeChildAddition(arg1 : PsiTreeChangeEvent) : void;
	beforeChildRemoval(arg1 : PsiTreeChangeEvent) : void;
	beforeChildReplacement(arg1 : PsiTreeChangeEvent) : void;
	beforeChildMovement(arg1 : PsiTreeChangeEvent) : void;
	beforeChildrenChange(arg1 : PsiTreeChangeEvent) : void;
	beforePropertyChange(arg1 : PsiTreeChangeEvent) : void;
	childAdded(arg1 : PsiTreeChangeEvent) : void;
	childRemoved(arg1 : PsiTreeChangeEvent) : void;
	childReplaced(arg1 : PsiTreeChangeEvent) : void;
	childrenChanged(arg1 : PsiTreeChangeEvent) : void;
	childMoved(arg1 : PsiTreeChangeEvent) : void;
	propertyChanged(arg1 : PsiTreeChangeEvent) : void;
}


declare interface PsiTreeChangeListener extends EventListener {}
export = PsiTreeChangeListener
