import FileManager = require('nashorn/com/intellij/psi/impl/file/impl/FileManager');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import Runnable = require('nashorn/java/lang/Runnable');
import PsiTreeChangeEventImpl = require('nashorn/com/intellij/psi/impl/PsiTreeChangeEventImpl');
import PsiManager = require('nashorn/com/intellij/psi/PsiManager');

declare class PsiManagerEx {
	batchFilesProcessingMode : boolean;
	fileManager : FileManager;
	constructor();
	isBatchFilesProcessingMode() : boolean;
	isAssertOnFileLoading(arg1 : VirtualFile) : boolean;
	registerRunnableToRunOnChange(arg1 : Runnable) : void;
	registerRunnableToRunOnAnyChange(arg1 : Runnable) : void;
	registerRunnableToRunAfterAnyChange(arg1 : Runnable) : void;
	getFileManager() : FileManager;
	beforeChildAddition(arg1 : PsiTreeChangeEventImpl) : void;
	beforeChildRemoval(arg1 : PsiTreeChangeEventImpl) : void;
	beforeChildReplacement(arg1 : PsiTreeChangeEventImpl) : void;
	beforeChange(arg1 : boolean) : void;
	afterChange(arg1 : boolean) : void;
}


declare interface PsiManagerEx extends PsiManager {}
export = PsiManagerEx
