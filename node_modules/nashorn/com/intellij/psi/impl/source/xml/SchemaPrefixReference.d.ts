import Object = require('nashorn/java/lang/Object');
import TagNameReference = require('nashorn/com/intellij/psi/impl/source/xml/TagNameReference');
import XmlElement = require('nashorn/com/intellij/psi/xml/XmlElement');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import SchemaPrefix = require('nashorn/com/intellij/psi/impl/source/xml/SchemaPrefix');
import PsiReferenceBase = require('nashorn/com/intellij/psi/PsiReferenceBase');
import PossiblePrefixReference = require('nashorn/com/intellij/psi/impl/source/xml/PossiblePrefixReference');
import ResolvingHint = require('nashorn/com/intellij/psi/ResolvingHint');

declare class SchemaPrefixReference {
	namespacePrefix : string;
	variants : Object[];
	soft : boolean;
	prefixReference : boolean;
	tagNameReference : TagNameReference;
	constructor(arg1 : XmlElement, arg2 : TextRange, arg3 : string, arg4 : TagNameReference);
	getNamespacePrefix() : string;
	static resolvePrefix(arg1 : PsiElement, arg2 : string) : SchemaPrefix;
	getTagNameReference() : TagNameReference;
}


declare interface SchemaPrefixReference extends PsiReferenceBase<XmlElement>, PossiblePrefixReference, ResolvingHint {}
export = SchemaPrefixReference
