import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import Object = require('nashorn/java/lang/Object');
import XmlTag = require('nashorn/com/intellij/psi/xml/XmlTag');
import XmlElement = require('nashorn/com/intellij/psi/xml/XmlElement');
import PsiReference = require('nashorn/com/intellij/psi/PsiReference');

declare class TagNameReference {
	element : PsiElement;
	rangeInElement : TextRange;
	nameElement : ASTNode;
	canonicalText : string;
	variants : Object[];
	soft : boolean;
	startTagFlag : boolean;
	constructor(arg1 : ASTNode, arg2 : boolean);
	getTagElement() : XmlTag;
	getNameElement() : ASTNode;
	static a(arg1 : string, arg2 : string) : string;
	static createTagNameReference(arg1 : XmlElement, arg2 : ASTNode, arg3 : boolean) : TagNameReference;
	isStartTagFlag() : boolean;
}


declare interface TagNameReference extends PsiReference {}
export = TagNameReference
