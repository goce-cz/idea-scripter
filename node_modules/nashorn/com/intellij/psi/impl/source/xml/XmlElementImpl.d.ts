import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Language = require('nashorn/com/intellij/lang/Language');
import SearchScope = require('nashorn/com/intellij/psi/search/SearchScope');
import IElementType = require('nashorn/com/intellij/psi/tree/IElementType');
import PsiElementProcessor = require('nashorn/com/intellij/psi/search/PsiElementProcessor');
import XmlElement = require('nashorn/com/intellij/psi/xml/XmlElement');
import CompositeElement = require('nashorn/com/intellij/psi/impl/source/tree/CompositeElement');
import CompositePsiElement = require('nashorn/com/intellij/psi/impl/source/tree/CompositePsiElement');

declare class XmlElementImpl {
	context : PsiElement;
	navigationElement : PsiElement;
	parent : PsiElement;
	language : Language;
	useScope : SearchScope;
	constructor(arg1 : IElementType);
	processChildren(arg1 : PsiElementProcessor) : boolean;
	findElementByTokenType(arg1 : IElementType) : XmlElement;
	e() : PsiElement;
	static getNameFromEntityRef(arg1 : CompositeElement, arg2 : IElementType) : string;
}


declare interface XmlElementImpl extends CompositePsiElement, XmlElement {}
export = XmlElementImpl
