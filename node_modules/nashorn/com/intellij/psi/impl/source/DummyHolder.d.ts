import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import FileType = require('nashorn/com/intellij/openapi/fileTypes/FileType');
import FileElement = require('nashorn/com/intellij/psi/impl/source/tree/FileElement');
import Language = require('nashorn/com/intellij/lang/Language');
import FileViewProvider = require('nashorn/com/intellij/psi/FileViewProvider');
import PsiManager = require('nashorn/com/intellij/psi/PsiManager');
import TreeElement = require('nashorn/com/intellij/psi/impl/source/tree/TreeElement');
import CharTable = require('nashorn/com/intellij/util/CharTable');
import PsiFileImpl = require('nashorn/com/intellij/psi/impl/source/PsiFileImpl');
import Object = require('nashorn/java/lang/Object');

declare class DummyHolder {
	context : PsiElement;
	valid : boolean;
	fileType : FileType;
	treeElement : FileElement;
	language : Language;
	viewProvider : FileViewProvider;
	constructor(arg1 : PsiManager, arg2 : TreeElement, arg3 : PsiElement);
	constructor(arg1 : PsiManager, arg2 : CharTable, arg3 : boolean);
	constructor(arg1 : PsiManager, arg2 : PsiElement);
	constructor(arg1 : PsiManager, arg2 : TreeElement, arg3 : PsiElement, arg4 : CharTable);
	constructor(arg1 : PsiManager, arg2 : TreeElement, arg3 : PsiElement, arg4 : CharTable, arg5 : boolean, arg6 : Language);
	constructor(arg1 : PsiManager, arg2 : PsiElement, arg3 : CharTable);
	constructor(arg1 : PsiManager, arg2 : CharTable, arg3 : Language);
	constructor(arg1 : PsiManager, arg2 : Language, arg3 : PsiElement);
	static language(arg1 : PsiElement, arg2 : Language) : Language;
}


declare interface DummyHolder extends PsiFileImpl {}

declare module DummyHolder {
	class DummyHolderTreeLock extends Object {
	}
}

export = DummyHolder
