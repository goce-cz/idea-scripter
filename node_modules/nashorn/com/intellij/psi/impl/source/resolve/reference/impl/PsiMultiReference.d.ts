import Comparator = require('nashorn/java/util/Comparator');
import PsiReference = require('nashorn/com/intellij/psi/PsiReference');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');
import Object = require('nashorn/java/lang/Object');
import PsiPolyVariantReference = require('nashorn/com/intellij/psi/PsiPolyVariantReference');

declare class PsiMultiReference {
	static COMPARATOR : Comparator<PsiReference>;
	references : PsiReference[];
	element : PsiElement;
	rangeInElement : TextRange;
	canonicalText : string;
	variants : Object[];
	soft : boolean;
	constructor(arg1 : PsiReference[], arg2 : PsiElement);
	static a(arg1 : PsiReference) : boolean;
	getReferences() : PsiReference[];
	a() : PsiReference;
	b() : boolean;
}


declare interface PsiMultiReference extends PsiPolyVariantReference {}
export = PsiMultiReference
