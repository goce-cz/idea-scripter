import Object = require('nashorn/java/lang/Object');
import Map = require('nashorn/java/util/Map');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import ProcessingContext = require('nashorn/com/intellij/util/ProcessingContext');
import PsiReference = require('nashorn/com/intellij/psi/PsiReference');

declare class CustomizableReferenceProvider extends Object {
	options : Map<CustomizableReferenceProvider.CustomizationKey, Object>;
	setOptions(arg1 : Map<CustomizableReferenceProvider.CustomizationKey, Object>) : void;
	getOptions() : Map<CustomizableReferenceProvider.CustomizationKey, Object>;
	getReferencesByElement(arg1 : PsiElement, arg2 : ProcessingContext) : PsiReference[];
}


declare module CustomizableReferenceProvider {
	class CustomizationKey<T> extends Object {
		constructor(arg1 : string);
		getValue(arg1 : Map<CustomizableReferenceProvider.CustomizationKey, Object>) : T;
		getBooleanValue(arg1 : Map<CustomizableReferenceProvider.CustomizationKey, Object>) : boolean;
		putValue(arg1 : Map<CustomizableReferenceProvider.CustomizationKey, Object>, arg2 : T) : void;
	}
}

export = CustomizableReferenceProvider
