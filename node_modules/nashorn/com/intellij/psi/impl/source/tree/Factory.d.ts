import Object = require('nashorn/java/lang/Object');
import IElementType = require('nashorn/com/intellij/psi/tree/IElementType');
import CharSequence = require('nashorn/java/lang/CharSequence');
import CharTable = require('nashorn/com/intellij/util/CharTable');
import PsiManager = require('nashorn/com/intellij/psi/PsiManager');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import LeafElement = require('nashorn/com/intellij/psi/impl/source/tree/LeafElement');
import CompositeElement = require('nashorn/com/intellij/psi/impl/source/tree/CompositeElement');

declare class Factory extends Object {
	static createSingleLeafElement(arg1 : IElementType, arg2 : CharSequence, arg3 : number, arg4 : number, arg5 : CharTable, arg6 : PsiManager, arg7 : PsiFile) : LeafElement;
	static createSingleLeafElement(arg1 : IElementType, arg2 : CharSequence, arg3 : number, arg4 : number, arg5 : CharTable, arg6 : PsiManager, arg7 : boolean) : LeafElement;
	static createSingleLeafElement(arg1 : IElementType, arg2 : CharSequence, arg3 : CharTable, arg4 : PsiManager) : LeafElement;
	static createSingleLeafElement(arg1 : IElementType, arg2 : CharSequence, arg3 : number, arg4 : number, arg5 : CharTable, arg6 : PsiManager) : LeafElement;
	static createErrorElement(arg1 : string) : CompositeElement;
	static createCompositeElement(arg1 : IElementType, arg2 : CharTable, arg3 : PsiManager) : CompositeElement;
}

export = Factory
