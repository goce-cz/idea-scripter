import Object = require('nashorn/java/lang/Object');
import PsiParameter = require('nashorn/com/intellij/psi/PsiParameter');
import Processor = require('nashorn/com/intellij/util/Processor');
import UsageInfo = require('nashorn/com/intellij/usageView/UsageInfo');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import FindUsagesOptions = require('nashorn/com/intellij/find/findUsages/FindUsagesOptions');
import Set = require('nashorn/java/util/Set');
import PsiMethod = require('nashorn/com/intellij/psi/PsiMethod');
import PsiExpression = require('nashorn/com/intellij/psi/PsiExpression');
import PsiType = require('nashorn/com/intellij/psi/PsiType');

declare class ThrowSearchUtil extends Object {
	static a(arg1 : PsiParameter, arg2 : Processor<UsageInfo>, arg3 : ThrowSearchUtil.Root) : boolean;
	static a(arg1 : PsiElement, arg2 : Processor<UsageInfo>, arg3 : ThrowSearchUtil.Root, arg4 : FindUsagesOptions, arg5 : Set<PsiMethod>) : boolean;
	static addThrowUsages(arg1 : Processor<UsageInfo>, arg2 : ThrowSearchUtil.Root, arg3 : FindUsagesOptions) : boolean;
	static a(arg1 : PsiExpression) : boolean;
	static getSearchRoots(arg1 : PsiElement) : ThrowSearchUtil.Root[];
	static isSearchable(arg1 : PsiElement) : boolean;
	static getSearchableTypeName(arg1 : PsiElement) : string;
}


declare module ThrowSearchUtil {
	class Root extends Object {
		constructor(arg1 : PsiElement, arg2 : PsiType, arg3 : boolean);
	}
}

export = ThrowSearchUtil
