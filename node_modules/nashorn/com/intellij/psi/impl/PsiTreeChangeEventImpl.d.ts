import PsiManager = require('nashorn/com/intellij/psi/PsiManager');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Object = require('nashorn/java/lang/Object');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import PsiTreeChangeEvent = require('nashorn/com/intellij/psi/PsiTreeChangeEvent');
import Enum = require('nashorn/java/lang/Enum');

declare class PsiTreeChangeEventImpl {
	code : PsiTreeChangeEventImpl.PsiEventType;
	offset : number;
	oldLength : number;
	genericChange : boolean;
	constructor(arg1 : PsiManager);
	getCode() : PsiTreeChangeEventImpl.PsiEventType;
	setCode(arg1 : PsiTreeChangeEventImpl.PsiEventType) : void;
	setParent(arg1 : PsiElement) : void;
	setOldParent(arg1 : PsiElement) : void;
	setNewParent(arg1 : PsiElement) : void;
	setChild(arg1 : PsiElement) : void;
	setOldChild(arg1 : PsiElement) : void;
	setNewChild(arg1 : PsiElement) : void;
	setElement(arg1 : PsiElement) : void;
	setPropertyName(arg1 : string) : void;
	setOldValue(arg1 : Object) : void;
	setNewValue(arg1 : Object) : void;
	setFile(arg1 : PsiFile) : void;
	setOffset(arg1 : number) : void;
	getOffset() : number;
	setOldLength(arg1 : number) : void;
	getOldLength() : number;
	isGenericChange() : boolean;
	setGenericChange(arg1 : boolean) : void;
}


declare interface PsiTreeChangeEventImpl extends PsiTreeChangeEvent {}

declare module PsiTreeChangeEventImpl {
	class PsiEventType {
		static BEFORE_CHILD_ADDITION : PsiTreeChangeEventImpl.PsiEventType;
		static CHILD_ADDED : PsiTreeChangeEventImpl.PsiEventType;
		static BEFORE_CHILD_REMOVAL : PsiTreeChangeEventImpl.PsiEventType;
		static CHILD_REMOVED : PsiTreeChangeEventImpl.PsiEventType;
		static BEFORE_CHILD_REPLACEMENT : PsiTreeChangeEventImpl.PsiEventType;
		static CHILD_REPLACED : PsiTreeChangeEventImpl.PsiEventType;
		static BEFORE_CHILD_MOVEMENT : PsiTreeChangeEventImpl.PsiEventType;
		static CHILD_MOVED : PsiTreeChangeEventImpl.PsiEventType;
		static BEFORE_CHILDREN_CHANGE : PsiTreeChangeEventImpl.PsiEventType;
		static CHILDREN_CHANGED : PsiTreeChangeEventImpl.PsiEventType;
		static BEFORE_PROPERTY_CHANGE : PsiTreeChangeEventImpl.PsiEventType;
		static PROPERTY_CHANGED : PsiTreeChangeEventImpl.PsiEventType;
	}


	interface PsiEventType extends Enum<PsiTreeChangeEventImpl.PsiEventType> {}}

export = PsiTreeChangeEventImpl
