import Language = require('nashorn/com/intellij/lang/Language');
import PsiManager = require('nashorn/com/intellij/psi/PsiManager');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import PsiElementBase = require('nashorn/com/intellij/psi/impl/PsiElementBase');

declare class LightElement {
	language : Language;
	manager : PsiManager;
	parent : PsiElement;
	children : PsiElement[];
	containingFile : PsiFile;
	textRange : TextRange;
	startOffsetInParent : number;
	textLength : number;
	textOffset : number;
	valid : boolean;
	writable : boolean;
	physical : boolean;
	node : ASTNode;
	text : string;
	navigationElement : PsiElement;
	prevSibling : PsiElement;
	nextSibling : PsiElement;
	setNavigationElement(arg1 : PsiElement) : void;
}


declare interface LightElement extends PsiElementBase {}
export = LightElement
