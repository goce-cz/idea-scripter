import Object = require('nashorn/java/lang/Object');
import ExtensionPointName = require('nashorn/com/intellij/openapi/extensions/ExtensionPointName');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import Consumer = require('nashorn/com/intellij/util/Consumer');
import FileType = require('nashorn/com/intellij/openapi/fileTypes/FileType');
import FileContent = require('nashorn/com/intellij/util/indexing/FileContent');
import FileIncludeInfo = require('nashorn/com/intellij/psi/impl/include/FileIncludeInfo');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import PsiFileSystemItem = require('nashorn/com/intellij/psi/PsiFileSystemItem');

declare class FileIncludeProvider extends Object {
	static EP_NAME : ExtensionPointName<FileIncludeProvider>;
	id : string;
	version : number;
	constructor();
	getId() : string;
	acceptFile(arg1 : VirtualFile) : boolean;
	registerFileTypesUsedForIndexing(arg1 : Consumer<FileType>) : void;
	getIncludeInfos(arg1 : FileContent) : FileIncludeInfo[];
	resolveIncludedFile(arg1 : FileIncludeInfo, arg2 : PsiFile) : PsiFileSystemItem;
	getVersion() : number;
}

export = FileIncludeProvider
