import Language = require('nashorn/com/intellij/lang/Language');
import PsiClass = require('nashorn/com/intellij/psi/PsiClass');
import PsiModifierList = require('nashorn/com/intellij/psi/PsiModifierList');
import PsiPackage = require('nashorn/com/intellij/psi/PsiPackage');
import ItemPresentation = require('nashorn/com/intellij/navigation/ItemPresentation');
import PsiQualifiedNamedElement = require('nashorn/com/intellij/psi/PsiQualifiedNamedElement');
import PsiManager = require('nashorn/com/intellij/psi/PsiManager');
import CachedValue = require('nashorn/com/intellij/psi/util/CachedValue');
import Collection = require('nashorn/java/util/Collection');
import PsiDirectory = require('nashorn/com/intellij/psi/PsiDirectory');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import JavaPsiFacadeImpl = require('nashorn/com/intellij/psi/impl/JavaPsiFacadeImpl');
import PsiScopeProcessor = require('nashorn/com/intellij/psi/scope/PsiScopeProcessor');
import ResolveState = require('nashorn/com/intellij/psi/ResolveState');
import Condition = require('nashorn/com/intellij/openapi/util/Condition');
import PsiPackageBase = require('nashorn/com/intellij/psi/impl/file/PsiPackageBase');
import Queryable = require('nashorn/com/intellij/openapi/ui/Queryable');
import CachedValueProvider = require('nashorn/com/intellij/psi/util/CachedValueProvider');

declare class PsiPackageImpl {
	parentPackage : PsiPackageImpl;
	language : Language;
	valid : boolean;
	classes : PsiClass[];
	annotationList : PsiModifierList;
	subPackages : PsiPackage[];
	presentation : ItemPresentation;
	modifierList : PsiModifierList;
	container : PsiQualifiedNamedElement;
	constructor(arg1 : PsiManager, arg2 : string);
	a(arg1 : boolean) : CachedValue<Collection<PsiDirectory>>;
	allScope() : GlobalSearchScope;
	a() : JavaPsiFacadeImpl;
	a(arg1 : string) : PsiClass[];
	b(arg1 : string) : PsiClass[];
	c(arg1 : string) : PsiPackage;
	static a(arg1 : PsiScopeProcessor, arg2 : ResolveState, arg3 : PsiClass[], arg4 : Condition<string>) : boolean;
}


declare interface PsiPackageImpl extends PsiPackageBase, PsiPackage, Queryable {}

declare module PsiPackageImpl {
	class PackageAnnotationValueProvider {
	}


	interface PackageAnnotationValueProvider extends CachedValueProvider<PsiModifierList> {}}

export = PsiPackageImpl
