import List = require('nashorn/java/util/List');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import PsiDirectory = require('nashorn/com/intellij/psi/PsiDirectory');
import FileViewProvider = require('nashorn/com/intellij/psi/FileViewProvider');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');

declare class FileManager {
	allCachedFiles : List<PsiFile>;
	findFile(arg1 : VirtualFile) : PsiFile;
	findDirectory(arg1 : VirtualFile) : PsiDirectory;
	reloadFromDisk(arg1 : PsiFile) : void;
	getCachedPsiFile(arg1 : VirtualFile) : PsiFile;
	cleanupForNextTest() : void;
	findViewProvider(arg1 : VirtualFile) : FileViewProvider;
	findCachedViewProvider(arg1 : VirtualFile) : FileViewProvider;
	setViewProvider(arg1 : VirtualFile, arg2 : FileViewProvider) : void;
	getAllCachedFiles() : List<PsiFile>;
	createFileViewProvider(arg1 : VirtualFile, arg2 : boolean) : FileViewProvider;
}


declare interface FileManager extends Disposable {}
export = FileManager
