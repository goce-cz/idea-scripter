import ArrayFactory = require('nashorn/com/intellij/util/ArrayFactory');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import PsiReferenceParameterList = require('nashorn/com/intellij/psi/PsiReferenceParameterList');
import PsiType = require('nashorn/com/intellij/psi/PsiType');
import PsiJavaReference = require('nashorn/com/intellij/psi/PsiJavaReference');
import PsiQualifiedReferenceElement = require('nashorn/com/intellij/psi/PsiQualifiedReferenceElement');

declare class PsiJavaCodeReferenceElement {
	static EMPTY_ARRAY : PsiJavaCodeReferenceElement[];
	static ARRAY_FACTORY : ArrayFactory<PsiJavaCodeReferenceElement>;
	referenceNameElement : PsiElement;
	parameterList : PsiReferenceParameterList;
	typeParameters : PsiType[];
	qualified : boolean;
	qualifiedName : string;
	getReferenceNameElement() : PsiElement;
	getParameterList() : PsiReferenceParameterList;
	getTypeParameters() : PsiType[];
	isQualified() : boolean;
	getQualifiedName() : string;
}


declare interface PsiJavaCodeReferenceElement extends PsiJavaReference, PsiQualifiedReferenceElement {}
export = PsiJavaCodeReferenceElement
