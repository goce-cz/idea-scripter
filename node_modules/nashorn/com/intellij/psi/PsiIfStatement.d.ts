import PsiExpression = require('nashorn/com/intellij/psi/PsiExpression');
import PsiStatement = require('nashorn/com/intellij/psi/PsiStatement');
import PsiKeyword = require('nashorn/com/intellij/psi/PsiKeyword');
import PsiJavaToken = require('nashorn/com/intellij/psi/PsiJavaToken');

declare class PsiIfStatement {
	condition : PsiExpression;
	thenBranch : PsiStatement;
	elseBranch : PsiStatement;
	elseElement : PsiKeyword;
	lParenth : PsiJavaToken;
	rParenth : PsiJavaToken;
	getCondition() : PsiExpression;
	getThenBranch() : PsiStatement;
	getElseBranch() : PsiStatement;
	getElseElement() : PsiKeyword;
	setElseBranch(arg1 : PsiStatement) : void;
	setThenBranch(arg1 : PsiStatement) : void;
	getLParenth() : PsiJavaToken;
	getRParenth() : PsiJavaToken;
}


declare interface PsiIfStatement extends PsiStatement {}
export = PsiIfStatement
