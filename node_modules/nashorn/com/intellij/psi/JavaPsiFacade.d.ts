import Object = require('nashorn/java/lang/Object');
import PsiElementFactory = require('nashorn/com/intellij/psi/PsiElementFactory');
import PsiJavaParserFacade = require('nashorn/com/intellij/psi/PsiJavaParserFacade');
import PsiResolveHelper = require('nashorn/com/intellij/psi/PsiResolveHelper');
import PsiNameHelper = require('nashorn/com/intellij/psi/PsiNameHelper');
import PsiConstantEvaluationHelper = require('nashorn/com/intellij/psi/PsiConstantEvaluationHelper');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import PsiClass = require('nashorn/com/intellij/psi/PsiClass');
import PsiPackage = require('nashorn/com/intellij/psi/PsiPackage');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');

declare class JavaPsiFacade extends Object {
	elementFactory : PsiElementFactory;
	parserFacade : PsiJavaParserFacade;
	resolveHelper : PsiResolveHelper;
	nameHelper : PsiNameHelper;
	constantEvaluationHelper : PsiConstantEvaluationHelper;
	project : Project;
	constructor();
	static getInstance(arg1 : Project) : JavaPsiFacade;
	static getElementFactory(arg1 : Project) : PsiElementFactory;
	findClass(arg1 : string, arg2 : GlobalSearchScope) : PsiClass;
	findClasses(arg1 : string, arg2 : GlobalSearchScope) : PsiClass[];
	findPackage(arg1 : string) : PsiPackage;
	getElementFactory() : PsiElementFactory;
	getParserFacade() : PsiJavaParserFacade;
	getResolveHelper() : PsiResolveHelper;
	getNameHelper() : PsiNameHelper;
	getConstantEvaluationHelper() : PsiConstantEvaluationHelper;
	isPartOfPackagePrefix(arg1 : string) : boolean;
	isInPackage(arg1 : PsiElement, arg2 : PsiPackage) : boolean;
	arePackagesTheSame(arg1 : PsiElement, arg2 : PsiElement) : boolean;
	getProject() : Project;
}

export = JavaPsiFacade
