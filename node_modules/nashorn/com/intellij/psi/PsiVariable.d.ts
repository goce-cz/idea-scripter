import PsiType = require('nashorn/com/intellij/psi/PsiType');
import PsiTypeElement = require('nashorn/com/intellij/psi/PsiTypeElement');
import PsiExpression = require('nashorn/com/intellij/psi/PsiExpression');
import PsiIdentifier = require('nashorn/com/intellij/psi/PsiIdentifier');
import Object = require('nashorn/java/lang/Object');
import PsiModifierListOwner = require('nashorn/com/intellij/psi/PsiModifierListOwner');
import PsiNameIdentifierOwner = require('nashorn/com/intellij/psi/PsiNameIdentifierOwner');
import PsiTarget = require('nashorn/com/intellij/psi/PsiTarget');
import PomRenameableTarget = require('nashorn/com/intellij/pom/PomRenameableTarget');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');

declare class PsiVariable {
	type : PsiType;
	typeElement : PsiTypeElement;
	initializer : PsiExpression;
	nameIdentifier : PsiIdentifier;
	getType() : PsiType;
	getTypeElement() : PsiTypeElement;
	getInitializer() : PsiExpression;
	hasInitializer() : boolean;
	normalizeDeclaration() : void;
	computeConstantValue() : Object;
}


declare interface PsiVariable extends PsiModifierListOwner, PsiNameIdentifierOwner, PsiTarget, PomRenameableTarget<PsiElement> {}
export = PsiVariable
