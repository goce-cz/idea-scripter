import ArrayFactory = require('nashorn/com/intellij/util/ArrayFactory');
import PsiImportStatement = require('nashorn/com/intellij/psi/PsiImportStatement');
import PsiImportStaticStatement = require('nashorn/com/intellij/psi/PsiImportStaticStatement');
import PsiImportStatementBase = require('nashorn/com/intellij/psi/PsiImportStatementBase');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');

declare class PsiImportList {
	static EMPTY_ARRAY : PsiImportList[];
	static ARRAY_FACTORY : ArrayFactory<PsiImportList>;
	importStatements : PsiImportStatement[];
	importStaticStatements : PsiImportStaticStatement[];
	allImportStatements : PsiImportStatementBase[];
	getImportStatements() : PsiImportStatement[];
	getImportStaticStatements() : PsiImportStaticStatement[];
	getAllImportStatements() : PsiImportStatementBase[];
	findSingleClassImportStatement(arg1 : string) : PsiImportStatement;
	findOnDemandImportStatement(arg1 : string) : PsiImportStatement;
	findSingleImportStatement(arg1 : string) : PsiImportStatementBase;
	isReplaceEquivalent(arg1 : PsiImportList) : boolean;
}


declare interface PsiImportList extends PsiElement {}
export = PsiImportList
