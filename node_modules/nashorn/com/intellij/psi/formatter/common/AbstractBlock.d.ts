import List = require('nashorn/java/util/List');
import Block = require('nashorn/com/intellij/formatting/Block');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');
import Wrap = require('nashorn/com/intellij/formatting/Wrap');
import Indent = require('nashorn/com/intellij/formatting/Indent');
import Alignment = require('nashorn/com/intellij/formatting/Alignment');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import ASTBlock = require('nashorn/com/intellij/formatting/ASTBlock');

declare class AbstractBlock {
	static EMPTY : List<Block>;
	textRange : TextRange;
	subBlocks : List<Block>;
	wrap : Wrap;
	indent : Indent;
	alignment : Alignment;
	node : ASTNode;
	incomplete : boolean;
	a() : List<Block>;
	buildChildren() : List<Block>;
	b() : Alignment;
	getChildIndent() : Indent;
}


declare interface AbstractBlock extends ASTBlock {}
export = AbstractBlock
