import Object = require('nashorn/java/lang/Object');
import CharSequence = require('nashorn/java/lang/CharSequence');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import CodeStyleSettings = require('nashorn/com/intellij/psi/codeStyle/CodeStyleSettings');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import LeafElement = require('nashorn/com/intellij/psi/impl/source/tree/LeafElement');

declare class WhiteSpaceFormattingStrategy extends Object {
	check(arg1 : CharSequence, arg2 : number, arg3 : number) : number;
	containsWhitespacesOnly(arg1 : ASTNode) : boolean;
	replaceDefaultStrategy() : boolean;
	adjustWhiteSpaceIfNecessary(arg1 : CharSequence, arg2 : CharSequence, arg3 : number, arg4 : number, arg5 : CodeStyleSettings, arg6 : ASTNode) : CharSequence;
	adjustWhiteSpaceIfNecessary(arg1 : CharSequence, arg2 : PsiElement, arg3 : number, arg4 : number, arg5 : CodeStyleSettings) : CharSequence;
	addWhitespace(arg1 : ASTNode, arg2 : LeafElement) : boolean;
}

export = WhiteSpaceFormattingStrategy
