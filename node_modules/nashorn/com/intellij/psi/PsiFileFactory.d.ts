import Object = require('nashorn/java/lang/Object');
import Key = require('nashorn/com/intellij/openapi/util/Key');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import FileType = require('nashorn/com/intellij/openapi/fileTypes/FileType');
import CharSequence = require('nashorn/java/lang/CharSequence');
import Language = require('nashorn/com/intellij/lang/Language');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');

declare class PsiFileFactory extends Object {
	static ORIGINAL_FILE : Key<PsiFile>;
	constructor();
	static getInstance(arg1 : Project) : PsiFileFactory;
	createFileFromText(arg1 : string, arg2 : string) : PsiFile;
	createFileFromText(arg1 : string, arg2 : FileType, arg3 : CharSequence) : PsiFile;
	createFileFromText(arg1 : string, arg2 : FileType, arg3 : CharSequence, arg4 : number, arg5 : boolean) : PsiFile;
	createFileFromText(arg1 : string, arg2 : FileType, arg3 : CharSequence, arg4 : number, arg5 : boolean, arg6 : boolean) : PsiFile;
	createFileFromText(arg1 : string, arg2 : Language, arg3 : CharSequence) : PsiFile;
	createFileFromText(arg1 : Language, arg2 : CharSequence) : PsiFile;
	createFileFromText(arg1 : string, arg2 : Language, arg3 : CharSequence, arg4 : boolean, arg5 : boolean) : PsiFile;
	createFileFromText(arg1 : string, arg2 : Language, arg3 : CharSequence, arg4 : boolean, arg5 : boolean, arg6 : boolean) : PsiFile;
	createFileFromText(arg1 : string, arg2 : Language, arg3 : CharSequence, arg4 : boolean, arg5 : boolean, arg6 : boolean, arg7 : VirtualFile) : PsiFile;
	createFileFromText(arg1 : FileType, arg2 : string, arg3 : CharSequence, arg4 : number, arg5 : number) : PsiFile;
	createFileFromText(arg1 : CharSequence, arg2 : PsiFile) : PsiFile;
}

export = PsiFileFactory
