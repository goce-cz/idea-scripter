import RecursionGuard = require('nashorn/com/intellij/openapi/util/RecursionGuard');
import PsiAnnotation = require('nashorn/com/intellij/psi/PsiAnnotation');
import PsiType = require('nashorn/com/intellij/psi/PsiType');
import Object = require('nashorn/java/lang/Object');
import List = require('nashorn/java/util/List');

declare class PsiDiamondType {
	static ourDiamondGuard : RecursionGuard;
	constructor(arg1 : PsiAnnotation[]);
	resolveInferredTypes() : PsiDiamondType.DiamondInferenceResult;
}


declare interface PsiDiamondType extends PsiType {}

declare module PsiDiamondType {
	class DiamondInferenceResult extends Object {
		static EXPLICIT_CONSTRUCTOR_TYPE_ARGS : PsiDiamondType.DiamondInferenceResult;
		static NULL_RESULT : PsiDiamondType.DiamondInferenceResult;
		static ANONYMOUS_INNER_RESULT : PsiDiamondType.DiamondInferenceResult;
		types : PsiType[];
		inferredTypes : List<PsiType>;
		errorMessage : string;
		constructor();
		constructor(arg1 : string);
		getTypes() : PsiType[];
		getInferredTypes() : List<PsiType>;
		getErrorMessage() : string;
		failedToInfer() : boolean;
		addInferredType(arg1 : PsiType) : void;
	}
}

export = PsiDiamondType
