import PsiPackageStatement = require('nashorn/com/intellij/psi/PsiPackageStatement');
import PsiImportList = require('nashorn/com/intellij/psi/PsiImportList');
import PsiJavaCodeReferenceElement = require('nashorn/com/intellij/psi/PsiJavaCodeReferenceElement');
import LanguageLevel = require('nashorn/com/intellij/pom/java/LanguageLevel');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import PsiClass = require('nashorn/com/intellij/psi/PsiClass');
import PsiImportHolder = require('nashorn/com/intellij/psi/PsiImportHolder');
import PsiClassOwner = require('nashorn/com/intellij/psi/PsiClassOwner');

declare class PsiJavaFile {
	packageStatement : PsiPackageStatement;
	packageName : string;
	importList : PsiImportList;
	implicitlyImportedPackages : string[];
	implicitlyImportedPackageReferences : PsiJavaCodeReferenceElement[];
	languageLevel : LanguageLevel;
	getPackageStatement() : PsiPackageStatement;
	getImportList() : PsiImportList;
	getOnDemandImports(arg1 : boolean, arg2 : boolean) : PsiElement[];
	getSingleClassImports(arg1 : boolean) : PsiClass[];
	getImplicitlyImportedPackages() : string[];
	getImplicitlyImportedPackageReferences() : PsiJavaCodeReferenceElement[];
	findImportReferenceTo(arg1 : PsiClass) : PsiJavaCodeReferenceElement;
	getLanguageLevel() : LanguageLevel;
}


declare interface PsiJavaFile extends PsiImportHolder, PsiClassOwner {}
export = PsiJavaFile
