import Object = require('nashorn/java/lang/Object');
import PsiReference = require('nashorn/com/intellij/psi/PsiReference');
import Collection = require('nashorn/java/util/Collection');

declare class PsiReferenceProcessor extends Object {
	execute(arg1 : PsiReference) : boolean;
}


declare module PsiReferenceProcessor {
	class FindElement {
		found : boolean;
		foundReference : PsiReference;
		constructor();
		isFound() : boolean;
		getFoundReference() : PsiReference;
	}


	interface FindElement extends PsiReferenceProcessor {}	class CollectElements {
		constructor(arg1 : Collection<PsiReference>);
		constructor();
		toArray() : PsiReference[];
		toArray(arg1 : PsiReference[]) : PsiReference[];
	}


	interface CollectElements extends PsiReferenceProcessor {}}

export = PsiReferenceProcessor
