import ExtensionPointName = require('nashorn/com/intellij/openapi/extensions/ExtensionPointName');
import QueryExecutor = require('nashorn/com/intellij/util/QueryExecutor');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Query = require('nashorn/com/intellij/util/Query');
import ExtensibleQueryFactory = require('nashorn/com/intellij/psi/search/searches/ExtensibleQueryFactory');

declare class DefinitionsSearch {
	static EP_NAME : ExtensionPointName<QueryExecutor>;
	static INSTANCE : DefinitionsSearch;
	constructor();
	static search(arg1 : PsiElement) : Query<PsiElement>;
}


declare interface DefinitionsSearch extends ExtensibleQueryFactory<PsiElement, PsiElement> {}
export = DefinitionsSearch
