import PsiClass = require('nashorn/com/intellij/psi/PsiClass');
import SearchScope = require('nashorn/com/intellij/psi/search/SearchScope');
import Query = require('nashorn/com/intellij/util/Query');
import PsiPackage = require('nashorn/com/intellij/psi/PsiPackage');
import ExtensibleQueryFactory = require('nashorn/com/intellij/psi/search/searches/ExtensibleQueryFactory');
import Object = require('nashorn/java/lang/Object');

declare class AnnotatedPackagesSearch {
	static INSTANCE : AnnotatedPackagesSearch;
	static search(arg1 : PsiClass, arg2 : SearchScope) : Query<PsiPackage>;
	static search(arg1 : PsiClass) : Query<PsiPackage>;
}


declare interface AnnotatedPackagesSearch extends ExtensibleQueryFactory<PsiPackage, AnnotatedPackagesSearch.Parameters> {}

declare module AnnotatedPackagesSearch {
	class Parameters extends Object {
		annotationClass : PsiClass;
		scope : SearchScope;
		constructor(arg1 : PsiClass, arg2 : SearchScope);
		getAnnotationClass() : PsiClass;
		getScope() : SearchScope;
	}
}

export = AnnotatedPackagesSearch
