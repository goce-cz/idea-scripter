import ExtensionPointName = require('nashorn/com/intellij/openapi/extensions/ExtensionPointName');
import QueryExecutor = require('nashorn/com/intellij/util/QueryExecutor');
import PsiMethod = require('nashorn/com/intellij/psi/PsiMethod');
import Query = require('nashorn/com/intellij/util/Query');
import ExtensibleQueryFactory = require('nashorn/com/intellij/psi/search/searches/ExtensibleQueryFactory');

declare class DeepestSuperMethodsSearch {
	static EP_NAME : ExtensionPointName<QueryExecutor>;
	static DEEPEST_SUPER_METHODS_SEARCH_INSTANCE : DeepestSuperMethodsSearch;
	static search(arg1 : PsiMethod) : Query<PsiMethod>;
}


declare interface DeepestSuperMethodsSearch extends ExtensibleQueryFactory<PsiMethod, PsiMethod> {}
export = DeepestSuperMethodsSearch
