import ID = require('nashorn/com/intellij/util/indexing/ID');
import Void = require('nashorn/java/lang/Void');
import DataIndexer = require('nashorn/com/intellij/util/indexing/DataIndexer');
import FileContent = require('nashorn/com/intellij/util/indexing/FileContent');
import KeyDescriptor = require('nashorn/com/intellij/util/io/KeyDescriptor');
import FileBasedIndex = require('nashorn/com/intellij/util/indexing/FileBasedIndex');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import Collection = require('nashorn/java/util/Collection');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import Processor = require('nashorn/com/intellij/util/Processor');
import IdFilter = require('nashorn/com/intellij/util/indexing/IdFilter');
import PsiFileSystemItem = require('nashorn/com/intellij/psi/PsiFileSystemItem');
import ScalarIndexExtension = require('nashorn/com/intellij/util/indexing/ScalarIndexExtension');

declare class FilenameIndex {
	static NAME : ID<string, Void>;
	name : ID<string, Void>;
	indexer : DataIndexer<string, Void, FileContent>;
	keyDescriptor : KeyDescriptor<string>;
	inputFilter : FileBasedIndex.InputFilter;
	version : number;
	constructor();
	static getAllFilenames(arg1 : Project) : string[];
	static getVirtualFilesByName(arg1 : Project, arg2 : string, arg3 : GlobalSearchScope) : Collection<VirtualFile>;
	static getFilesByName(arg1 : Project, arg2 : string, arg3 : GlobalSearchScope) : PsiFile[];
	static processFilesByName(arg1 : string, arg2 : boolean, arg3 : Processor<any>, arg4 : GlobalSearchScope, arg5 : Project, arg6 : IdFilter) : boolean;
	static getFilesByName(arg1 : Project, arg2 : string, arg3 : GlobalSearchScope, arg4 : boolean) : PsiFileSystemItem[];
	static getAllFilesByExt(arg1 : Project, arg2 : string) : Collection<VirtualFile>;
	static getAllFilesByExt(arg1 : Project, arg2 : string, arg3 : GlobalSearchScope) : Collection<VirtualFile>;
}


declare interface FilenameIndex extends ScalarIndexExtension<string> {}

declare module FilenameIndex {
	class MyInputFilter {
	}


	interface MyInputFilter extends FileBasedIndex.InputFilter {}	class MyDataIndexer {
	}


	interface MyDataIndexer extends DataIndexer<string, Void, FileContent> {}}

export = FilenameIndex
