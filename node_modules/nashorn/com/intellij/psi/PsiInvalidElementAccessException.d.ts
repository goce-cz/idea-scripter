import Attachment = require('nashorn/com/intellij/openapi/diagnostic/Attachment');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Throwable = require('nashorn/java/lang/Throwable');
import Object = require('nashorn/java/lang/Object');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import FileViewProvider = require('nashorn/com/intellij/psi/FileViewProvider');
import UserDataHolder = require('nashorn/com/intellij/openapi/util/UserDataHolder');
import RuntimeException = require('nashorn/java/lang/RuntimeException');
import ExceptionWithAttachments = require('nashorn/com/intellij/openapi/diagnostic/ExceptionWithAttachments');

declare class PsiInvalidElementAccessException {
	message : string;
	attachments : Attachment[];
	static trackingInvalidation : boolean;
	psiElement : PsiElement;
	constructor(arg1 : PsiElement);
	constructor(arg1 : PsiElement, arg2 : string);
	constructor(arg1 : PsiElement, arg2 : Throwable);
	constructor(arg1 : PsiElement, arg2 : string, arg3 : Throwable);
	static getMessageWithReason(arg1 : PsiElement, arg2 : string, arg3 : boolean, arg4 : Object) : string;
	static findInvalidationTrace(arg1 : ASTNode) : Object;
	static reason(arg1 : PsiElement) : string;
	static id(arg1 : FileViewProvider) : string;
	static setInvalidationTrace(arg1 : UserDataHolder, arg2 : Object) : void;
	static isTrackingInvalidation() : boolean;
	getPsiElement() : PsiElement;
}


declare interface PsiInvalidElementAccessException extends RuntimeException, ExceptionWithAttachments {}
export = PsiInvalidElementAccessException
