import PsiExpression = require('nashorn/com/intellij/psi/PsiExpression');
import PsiArrayInitializerExpression = require('nashorn/com/intellij/psi/PsiArrayInitializerExpression');
import PsiJavaCodeReferenceElement = require('nashorn/com/intellij/psi/PsiJavaCodeReferenceElement');
import PsiAnonymousClass = require('nashorn/com/intellij/psi/PsiAnonymousClass');
import PsiAnnotation = require('nashorn/com/intellij/psi/PsiAnnotation');
import PsiType = require('nashorn/com/intellij/psi/PsiType');
import PsiCallExpression = require('nashorn/com/intellij/psi/PsiCallExpression');
import PsiConstructorCall = require('nashorn/com/intellij/psi/PsiConstructorCall');

declare class PsiNewExpression {
	qualifier : PsiExpression;
	arrayDimensions : PsiExpression[];
	arrayInitializer : PsiArrayInitializerExpression;
	classReference : PsiJavaCodeReferenceElement;
	anonymousClass : PsiAnonymousClass;
	classOrAnonymousClassReference : PsiJavaCodeReferenceElement;
	getQualifier() : PsiExpression;
	getArrayDimensions() : PsiExpression[];
	getArrayInitializer() : PsiArrayInitializerExpression;
	getClassReference() : PsiJavaCodeReferenceElement;
	getAnonymousClass() : PsiAnonymousClass;
	getClassOrAnonymousClassReference() : PsiJavaCodeReferenceElement;
	getOwner(arg1 : PsiAnnotation) : PsiType;
}


declare interface PsiNewExpression extends PsiCallExpression, PsiConstructorCall {}
export = PsiNewExpression
