import Object = require('nashorn/java/lang/Object');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import LanguageLevel = require('nashorn/com/intellij/pom/java/LanguageLevel');
import PsiJavaCodeReferenceElement = require('nashorn/com/intellij/psi/PsiJavaCodeReferenceElement');
import PsiAnnotation = require('nashorn/com/intellij/psi/PsiAnnotation');
import PsiType = require('nashorn/com/intellij/psi/PsiType');
import StringBuilder = require('nashorn/java/lang/StringBuilder');
import List = require('nashorn/java/util/List');

declare class PsiNameHelper extends Object {
	constructor();
	static getInstance(arg1 : Project) : PsiNameHelper;
	isIdentifier(arg1 : string) : boolean;
	isIdentifier(arg1 : string, arg2 : LanguageLevel) : boolean;
	isKeyword(arg1 : string) : boolean;
	isQualifiedName(arg1 : string) : boolean;
	static getShortClassName(arg1 : string) : string;
	static getPresentableText(arg1 : PsiJavaCodeReferenceElement) : string;
	static getPresentableText(arg1 : string, arg2 : PsiAnnotation[], arg3 : PsiType[]) : string;
	static getQualifiedClassName(arg1 : string, arg2 : boolean) : string;
	static removeWhitespace(arg1 : string) : string;
	static getClassParametersText(arg1 : string) : string[];
	static isSubpackageOf(arg1 : string, arg2 : string) : boolean;
	static appendTypeArgs(arg1 : StringBuilder, arg2 : PsiType[], arg3 : boolean, arg4 : boolean) : void;
	static appendAnnotations(arg1 : StringBuilder, arg2 : PsiAnnotation[], arg3 : boolean) : boolean;
	static appendAnnotations(arg1 : StringBuilder, arg2 : List<PsiAnnotation>, arg3 : boolean) : boolean;
}

export = PsiNameHelper
