import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Collection = require('nashorn/java/util/Collection');
import Processor = require('nashorn/com/intellij/util/Processor');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import StubIndexExtension = require('nashorn/com/intellij/psi/stubs/StubIndexExtension');

declare class AbstractStubIndex<Key, Psi extends PsiElement> {
	cacheSize : number;
	constructor();
	getAllKeys(arg1 : Project) : Collection<Key>;
	processAllKeys(arg1 : Project, arg2 : Processor<Key>) : boolean;
	get(arg1 : Key, arg2 : Project, arg3 : GlobalSearchScope) : Collection<Psi>;
}


declare interface AbstractStubIndex<Key, Psi extends PsiElement> extends StubIndexExtension<Key, Psi> {}
export = AbstractStubIndex
