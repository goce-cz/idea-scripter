import Stub = require('nashorn/com/intellij/psi/stubs/Stub');
import Object = require('nashorn/java/lang/Object');
import List = require('nashorn/java/util/List');
import ObjectStubBase = require('nashorn/com/intellij/psi/stubs/ObjectStubBase');
import Map = require('nashorn/java/util/Map');
import StubIndexKey = require('nashorn/com/intellij/psi/stubs/StubIndexKey');
import IndexSink = require('nashorn/com/intellij/psi/stubs/IndexSink');
import TObjectProcedure = require('nashorn/gnu/trove/TObjectProcedure');
import TObjectObjectProcedure = require('nashorn/gnu/trove/TObjectObjectProcedure');

declare class ObjectStubTree<T extends Stub> extends Object {
	root : Stub;
	plainList : List<T>;
	plainListFromAllRoots : List<T>;
	debugInfo : string;
	constructor(arg1 : ObjectStubBase, arg2 : boolean);
	getRoot() : Stub;
	getPlainList() : List<T>;
	getPlainListFromAllRoots() : List<T>;
	indexStubTree() : Map<StubIndexKey, Map<Object, number[]>>;
	enumerateStubs(arg1 : Stub, arg2 : List<Stub>) : void;
	static enumerateStubs(arg1 : Stub, arg2 : List<Stub>, arg3 : number) : void;
	setDebugInfo(arg1 : string) : void;
	getDebugInfo() : string;
}


declare module ObjectStubTree {
	class StubIndexSink {
		result : Map<StubIndexKey, Map<Object, number[]>>;
		getResult() : Map<StubIndexKey, Map<Object, number[]>>;
	}


	interface StubIndexSink extends IndexSink, TObjectProcedure<Map<Object, number[]>>, TObjectObjectProcedure<Object, number[]> {}}

export = ObjectStubTree
