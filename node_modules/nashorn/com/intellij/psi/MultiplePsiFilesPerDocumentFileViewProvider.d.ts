import Language = require('nashorn/com/intellij/lang/Language');
import List = require('nashorn/java/util/List');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import FileElement = require('nashorn/com/intellij/psi/impl/source/tree/FileElement');
import PsiManager = require('nashorn/com/intellij/psi/PsiManager');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import SingleRootFileViewProvider = require('nashorn/com/intellij/psi/SingleRootFileViewProvider');

declare class MultiplePsiFilesPerDocumentFileViewProvider {
	baseLanguage : Language;
	allFiles : List<PsiFile>;
	knownTreeRoots : FileElement[];
	constructor(arg1 : PsiManager, arg2 : VirtualFile, arg3 : boolean);
	removeFile(arg1 : Language) : void;
	checkAllTreesEqual() : void;
	cloneInner(arg1 : VirtualFile) : MultiplePsiFilesPerDocumentFileViewProvider;
}


declare interface MultiplePsiFilesPerDocumentFileViewProvider extends SingleRootFileViewProvider {}
export = MultiplePsiFilesPerDocumentFileViewProvider
