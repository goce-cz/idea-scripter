import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import ElementManipulator = require('nashorn/com/intellij/psi/ElementManipulator');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');
import ClassExtension = require('nashorn/com/intellij/openapi/util/ClassExtension');

declare class ElementManipulators {
	static EP_NAME : string;
	static INSTANCE : ElementManipulators;
	static getManipulator<T extends PsiElement>(arg1 : T) : ElementManipulator<T>;
	static getOffsetInElement(arg1 : PsiElement) : number;
	static getNotNullManipulator<T extends PsiElement>(arg1 : T) : ElementManipulator<T>;
	static getValueTextRange(arg1 : PsiElement) : TextRange;
	static getValueText(arg1 : PsiElement) : string;
	static handleContentChange<T extends PsiElement>(arg1 : T, arg2 : string) : T;
}


declare interface ElementManipulators extends ClassExtension<ElementManipulator> {}
export = ElementManipulators
