import ID = require('nashorn/com/intellij/util/indexing/ID');
import Void = require('nashorn/java/lang/Void');
import DataIndexer = require('nashorn/com/intellij/util/indexing/DataIndexer');
import FileContent = require('nashorn/com/intellij/util/indexing/FileContent');
import KeyDescriptor = require('nashorn/com/intellij/util/io/KeyDescriptor');
import DataExternalizer = require('nashorn/com/intellij/util/io/DataExternalizer');
import FileBasedIndex = require('nashorn/com/intellij/util/indexing/FileBasedIndex');
import FileBasedIndexExtension = require('nashorn/com/intellij/util/indexing/FileBasedIndexExtension');

declare class RefQueueIndex {
	name : ID<Void, Void>;
	indexer : DataIndexer<Void, Void, FileContent>;
	keyDescriptor : KeyDescriptor<Void>;
	valueExternalizer : DataExternalizer<Void>;
	inputFilter : FileBasedIndex.InputFilter;
	version : number;
	constructor();
}


declare interface RefQueueIndex extends FileBasedIndexExtension<Void, Void> {}
export = RefQueueIndex
