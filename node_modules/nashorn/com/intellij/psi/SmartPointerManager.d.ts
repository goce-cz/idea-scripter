import Object = require('nashorn/java/lang/Object');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');
import SmartPsiFileRange = require('nashorn/com/intellij/psi/SmartPsiFileRange');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import SmartPsiElementPointer = require('nashorn/com/intellij/psi/SmartPsiElementPointer');

declare class SmartPointerManager extends Object {
	constructor();
	createSmartPsiFileRangePointer(arg1 : PsiFile, arg2 : TextRange) : SmartPsiFileRange;
	static getInstance(arg1 : Project) : SmartPointerManager;
	createSmartPsiElementPointer<E extends PsiElement>(arg1 : E) : SmartPsiElementPointer<E>;
	createSmartPsiElementPointer<E extends PsiElement>(arg1 : E, arg2 : PsiFile) : SmartPsiElementPointer<E>;
	createLazyPointer<E extends PsiElement>(arg1 : E) : SmartPsiElementPointer<E>;
	pointToTheSameElement(arg1 : SmartPsiElementPointer, arg2 : SmartPsiElementPointer) : boolean;
	removePointer(arg1 : SmartPsiElementPointer) : boolean;
}

export = SmartPointerManager
