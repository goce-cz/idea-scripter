import Object = require('nashorn/java/lang/Object');
import ArrayFactory = require('nashorn/com/intellij/util/ArrayFactory');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');

declare class PsiReference extends Object {
	static EMPTY_ARRAY : PsiReference[];
	static ARRAY_FACTORY : ArrayFactory<PsiReference>;
	element : PsiElement;
	rangeInElement : TextRange;
	canonicalText : string;
	variants : Object[];
	soft : boolean;
	getElement() : PsiElement;
	getRangeInElement() : TextRange;
	resolve() : PsiElement;
	getCanonicalText() : string;
	handleElementRename(arg1 : string) : PsiElement;
	bindToElement(arg1 : PsiElement) : PsiElement;
	isReferenceTo(arg1 : PsiElement) : boolean;
	getVariants() : Object[];
	isSoft() : boolean;
}

export = PsiReference
