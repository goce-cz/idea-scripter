import StdArrangementEntryMatcher = require('nashorn/com/intellij/psi/codeStyle/arrangement/match/StdArrangementEntryMatcher');
import ArrangementSettingsToken = require('nashorn/com/intellij/psi/codeStyle/arrangement/std/ArrangementSettingsToken');
import Map = require('nashorn/java/util/Map');
import Object = require('nashorn/java/lang/Object');
import ArrangementMatchRule = require('nashorn/com/intellij/psi/codeStyle/arrangement/match/ArrangementMatchRule');
import Cloneable = require('nashorn/java/lang/Cloneable');
import Comparable = require('nashorn/java/lang/Comparable');

declare class StdArrangementMatchRule {
	matcher : StdArrangementEntryMatcher;
	constructor(arg1 : StdArrangementEntryMatcher);
	constructor(arg1 : StdArrangementEntryMatcher, arg2 : ArrangementSettingsToken);
	static getEntryType(arg1 : Map<ArrangementSettingsToken, Object>) : string;
}


declare interface StdArrangementMatchRule extends ArrangementMatchRule, Cloneable, Comparable<StdArrangementMatchRule> {}
export = StdArrangementMatchRule
