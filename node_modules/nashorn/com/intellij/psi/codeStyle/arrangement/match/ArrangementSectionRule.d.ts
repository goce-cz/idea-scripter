import List = require('nashorn/java/util/List');
import StdArrangementMatchRule = require('nashorn/com/intellij/psi/codeStyle/arrangement/match/StdArrangementMatchRule');
import ArrangementSettingsToken = require('nashorn/com/intellij/psi/codeStyle/arrangement/std/ArrangementSettingsToken');
import Cloneable = require('nashorn/java/lang/Cloneable');

declare class ArrangementSectionRule {
	matchRules : List<StdArrangementMatchRule>;
	startComment : string;
	endComment : string;
	getMatchRules() : List<StdArrangementMatchRule>;
	static create(arg1 : StdArrangementMatchRule[]) : ArrangementSectionRule;
	static create(arg1 : string, arg2 : string, arg3 : StdArrangementMatchRule[]) : ArrangementSectionRule;
	static create(arg1 : string, arg2 : string, arg3 : List<StdArrangementMatchRule>) : ArrangementSectionRule;
	static createSectionRule(arg1 : string, arg2 : ArrangementSettingsToken) : StdArrangementMatchRule;
	getStartComment() : string;
	getEndComment() : string;
}


declare interface ArrangementSectionRule extends Cloneable {}
export = ArrangementSectionRule
