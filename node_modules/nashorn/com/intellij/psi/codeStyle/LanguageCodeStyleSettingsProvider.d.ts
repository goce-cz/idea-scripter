import Object = require('nashorn/java/lang/Object');
import ExtensionPointName = require('nashorn/com/intellij/openapi/extensions/ExtensionPointName');
import Language = require('nashorn/com/intellij/lang/Language');
import CommonCodeStyleSettings = require('nashorn/com/intellij/psi/codeStyle/CommonCodeStyleSettings');
import PredefinedCodeStyle = require('nashorn/com/intellij/psi/codeStyle/PredefinedCodeStyle');
import DisplayPriority = require('nashorn/com/intellij/psi/codeStyle/DisplayPriority');
import IndentOptionsEditor = require('nashorn/com/intellij/application/options/IndentOptionsEditor');
import Set = require('nashorn/java/util/Set');
import CodeStyleSettingsCustomizable = require('nashorn/com/intellij/psi/codeStyle/CodeStyleSettingsCustomizable');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import Enum = require('nashorn/java/lang/Enum');

declare class LanguageCodeStyleSettingsProvider extends Object {
	static EP_NAME : ExtensionPointName<LanguageCodeStyleSettingsProvider>;
	language : Language;
	fileExt : string;
	languageName : string;
	defaultCommonSettings : CommonCodeStyleSettings;
	predefinedCodeStyles : PredefinedCodeStyle[];
	displayPriority : DisplayPriority;
	static languagesWithCodeStyleSettings : Language[];
	indentOptionsEditor : IndentOptionsEditor;
	supportedFields : Set<string>;
	constructor();
	getLanguage() : Language;
	getCodeSample(arg1 : LanguageCodeStyleSettingsProvider.SettingsType) : string;
	getRightMargin(arg1 : LanguageCodeStyleSettingsProvider.SettingsType) : number;
	customizeSettings(arg1 : CodeStyleSettingsCustomizable, arg2 : LanguageCodeStyleSettingsProvider.SettingsType) : void;
	getFileExt() : string;
	getLanguageName() : string;
	createFileFromText(arg1 : Project, arg2 : string) : PsiFile;
	getDefaultCommonSettings() : CommonCodeStyleSettings;
	getPredefinedCodeStyles() : PredefinedCodeStyle[];
	getDisplayPriority() : DisplayPriority;
	static getLanguagesWithCodeStyleSettings() : Language[];
	static getCodeSample(arg1 : Language, arg2 : LanguageCodeStyleSettingsProvider.SettingsType) : string;
	static getRightMargin(arg1 : Language, arg2 : LanguageCodeStyleSettingsProvider.SettingsType) : number;
	static getLanguage(arg1 : string) : Language;
	static getDefaultCommonSettings(arg1 : Language) : CommonCodeStyleSettings;
	static getFileExt(arg1 : Language) : string;
	static getLanguageName(arg1 : Language) : string;
	static createFileFromText(arg1 : Language, arg2 : Project, arg3 : string) : PsiFile;
	static forLanguage(arg1 : Language) : LanguageCodeStyleSettingsProvider;
	static getDisplayPriority(arg1 : Language) : DisplayPriority;
	getIndentOptionsEditor() : IndentOptionsEditor;
	getSupportedFields() : Set<string>;
}


declare module LanguageCodeStyleSettingsProvider {
	class SupportedFieldCollector {
		collectedFields : Set<string>;
		collectFields() : void;
		getCollectedFields() : Set<string>;
	}


	interface SupportedFieldCollector extends CodeStyleSettingsCustomizable {}	class SettingsType {
		static BLANK_LINES_SETTINGS : LanguageCodeStyleSettingsProvider.SettingsType;
		static SPACING_SETTINGS : LanguageCodeStyleSettingsProvider.SettingsType;
		static WRAPPING_AND_BRACES_SETTINGS : LanguageCodeStyleSettingsProvider.SettingsType;
		static INDENT_SETTINGS : LanguageCodeStyleSettingsProvider.SettingsType;
		static LANGUAGE_SPECIFIC : LanguageCodeStyleSettingsProvider.SettingsType;
	}


	interface SettingsType extends Enum<LanguageCodeStyleSettingsProvider.SettingsType> {}}

export = LanguageCodeStyleSettingsProvider
