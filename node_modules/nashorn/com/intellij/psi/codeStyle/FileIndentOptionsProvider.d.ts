import Object = require('nashorn/java/lang/Object');
import ExtensionPointName = require('nashorn/com/intellij/openapi/extensions/ExtensionPointName');
import CodeStyleSettings = require('nashorn/com/intellij/psi/codeStyle/CodeStyleSettings');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import CommonCodeStyleSettings = require('nashorn/com/intellij/psi/codeStyle/CommonCodeStyleSettings');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import FileEditor = require('nashorn/com/intellij/openapi/fileEditor/FileEditor');
import EditorNotificationInfo = require('nashorn/com/intellij/psi/codeStyle/EditorNotificationInfo');

declare class FileIndentOptionsProvider extends Object {
	static EP_NAME : ExtensionPointName<FileIndentOptionsProvider>;
	constructor();
	getIndentOptions(arg1 : CodeStyleSettings, arg2 : PsiFile) : CommonCodeStyleSettings.IndentOptions;
	useOnFullReformat() : boolean;
	getNotificationInfo(arg1 : Project, arg2 : VirtualFile, arg3 : FileEditor, arg4 : CommonCodeStyleSettings.IndentOptions, arg5 : CommonCodeStyleSettings.IndentOptions) : EditorNotificationInfo;
	isAcceptedWithoutWarning(arg1 : VirtualFile) : boolean;
	setAccepted(arg1 : VirtualFile) : void;
}

export = FileIndentOptionsProvider
