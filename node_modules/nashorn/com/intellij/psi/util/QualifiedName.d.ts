import Object = require('nashorn/java/lang/Object');
import List = require('nashorn/java/util/List');
import Collection = require('nashorn/java/util/Collection');
import StubOutputStream = require('nashorn/com/intellij/psi/stubs/StubOutputStream');
import StubInputStream = require('nashorn/com/intellij/psi/stubs/StubInputStream');

declare class QualifiedName extends Object {
	components : List<string>;
	componentCount : number;
	firstComponent : string;
	lastComponent : string;
	static fromComponents(arg1 : Collection<string>) : QualifiedName;
	static fromComponents(arg1 : string[]) : QualifiedName;
	append(arg1 : string) : QualifiedName;
	append(arg1 : QualifiedName) : QualifiedName;
	removeLastComponent() : QualifiedName;
	removeTail(arg1 : number) : QualifiedName;
	removeHead(arg1 : number) : QualifiedName;
	getComponents() : List<string>;
	getComponentCount() : number;
	matches(arg1 : string[]) : boolean;
	matchesPrefix(arg1 : QualifiedName) : boolean;
	endsWith(arg1 : string) : boolean;
	static serialize(arg1 : QualifiedName, arg2 : StubOutputStream) : void;
	static deserialize(arg1 : StubInputStream) : QualifiedName;
	getFirstComponent() : string;
	getLastComponent() : string;
	join(arg1 : string) : string;
	static fromDottedString(arg1 : string) : QualifiedName;
	subQualifiedName(arg1 : number, arg2 : number) : QualifiedName;
}

export = QualifiedName
