import Object = require('nashorn/java/lang/Object');
import Collection = require('nashorn/java/util/Collection');

declare class CachedValueProvider<T> extends Object {
	compute() : CachedValueProvider.Result<T>;
}


declare module CachedValueProvider {
	class Result<T> extends Object {
		value : T;
		dependencyItems : Object[];
		constructor(arg1 : T, arg2 : Object[]);
		getValue() : T;
		getDependencyItems() : Object[];
		static createSingleDependency<T>(arg1 : T, arg2 : Object) : CachedValueProvider.Result<T>;
		static create<T>(arg1 : T, arg2 : Object[]) : CachedValueProvider.Result<T>;
		static create<T>(arg1 : T, arg2 : Collection<any>) : CachedValueProvider.Result<T>;
	}
}

export = CachedValueProvider
