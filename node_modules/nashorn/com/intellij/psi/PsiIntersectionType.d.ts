import PsiType = require('nashorn/com/intellij/psi/PsiType');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import List = require('nashorn/java/util/List');
import Set = require('nashorn/java/util/Set');

declare class PsiIntersectionType {
	conjuncts : PsiType[];
	presentableText : string;
	internalCanonicalText : string;
	valid : boolean;
	resolveScope : GlobalSearchScope;
	superTypes : PsiType[];
	representative : PsiType;
	static createIntersection(arg1 : List<PsiType>) : PsiType;
	static createIntersection(arg1 : PsiType[]) : PsiType;
	static flattenAndRemoveDuplicates(arg1 : PsiType[]) : PsiType[];
	static flatten(arg1 : PsiType[], arg2 : Set<PsiType>) : Set<PsiType>;
	getConjuncts() : PsiType[];
	getRepresentative() : PsiType;
}


declare interface PsiIntersectionType extends PsiType.Stub {}
export = PsiIntersectionType
