import Object = require('nashorn/java/lang/Object');
import PsiTypeParameter = require('nashorn/com/intellij/psi/PsiTypeParameter');
import PsiParameter = require('nashorn/com/intellij/psi/PsiParameter');
import PsiExpression = require('nashorn/com/intellij/psi/PsiExpression');
import PsiSubstitutor = require('nashorn/com/intellij/psi/PsiSubstitutor');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import ParameterTypeInferencePolicy = require('nashorn/com/intellij/psi/impl/source/resolve/ParameterTypeInferencePolicy');
import PsiType = require('nashorn/com/intellij/psi/PsiType');
import LanguageLevel = require('nashorn/com/intellij/pom/java/LanguageLevel');

declare class PsiInferenceHelper extends Object {
	inferTypeForMethodTypeParameter(arg1 : PsiTypeParameter, arg2 : PsiParameter[], arg3 : PsiExpression[], arg4 : PsiSubstitutor, arg5 : PsiElement, arg6 : ParameterTypeInferencePolicy) : PsiType;
	inferTypeArguments(arg1 : PsiTypeParameter[], arg2 : PsiParameter[], arg3 : PsiExpression[], arg4 : PsiSubstitutor, arg5 : PsiElement, arg6 : ParameterTypeInferencePolicy, arg7 : LanguageLevel) : PsiSubstitutor;
	inferTypeArguments(arg1 : PsiTypeParameter[], arg2 : PsiType[], arg3 : PsiType[], arg4 : LanguageLevel) : PsiSubstitutor;
	getSubstitutionForTypeParameter(arg1 : PsiTypeParameter, arg2 : PsiType, arg3 : PsiType, arg4 : boolean, arg5 : LanguageLevel) : PsiType;
}

export = PsiInferenceHelper
