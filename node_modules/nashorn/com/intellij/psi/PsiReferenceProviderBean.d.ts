import ExtensionPointName = require('nashorn/com/intellij/openapi/extensions/ExtensionPointName');
import ElementPatternBean = require('nashorn/com/intellij/patterns/ElementPatternBean');
import PsiReferenceProvider = require('nashorn/com/intellij/psi/PsiReferenceProvider');
import ElementPattern = require('nashorn/com/intellij/patterns/ElementPattern');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import AbstractExtensionPointBean = require('nashorn/com/intellij/openapi/extensions/AbstractExtensionPointBean');
import KeyedLazyInstance = require('nashorn/com/intellij/util/KeyedLazyInstance');

declare class PsiReferenceProviderBean {
	static EP_NAME : ExtensionPointName<PsiReferenceProviderBean>;
	language : string;
	className : string;
	description : string;
	patterns : ElementPatternBean[];
	key : string;
	instance : PsiReferenceProviderBean;
	constructor();
	getDescription() : string;
	instantiate() : PsiReferenceProvider;
	createElementPattern() : ElementPattern<PsiElement>;
}


declare interface PsiReferenceProviderBean extends AbstractExtensionPointBean, KeyedLazyInstance<PsiReferenceProviderBean> {}
export = PsiReferenceProviderBean
