import Object = require('nashorn/java/lang/Object');
import Key = require('nashorn/com/intellij/openapi/util/Key');
import Map = require('nashorn/java/util/Map');
import PsiTypeParameter = require('nashorn/com/intellij/psi/PsiTypeParameter');
import PsiType = require('nashorn/com/intellij/psi/PsiType');
import PsiClass = require('nashorn/com/intellij/psi/PsiClass');

declare class PsiSubstitutor extends Object {
	static KEY : Key<PsiSubstitutor>;
	static EMPTY : PsiSubstitutor;
	static UNKNOWN : PsiSubstitutor;
	substitutionMap : Map<PsiTypeParameter, PsiType>;
	valid : boolean;
	substitute(arg1 : PsiTypeParameter) : PsiType;
	substitute(arg1 : PsiType) : PsiType;
	substituteWithBoundsPromotion(arg1 : PsiTypeParameter) : PsiType;
	put(arg1 : PsiTypeParameter, arg2 : PsiType) : PsiSubstitutor;
	putAll(arg1 : PsiClass, arg2 : PsiType[]) : PsiSubstitutor;
	putAll(arg1 : PsiSubstitutor) : PsiSubstitutor;
	getSubstitutionMap() : Map<PsiTypeParameter, PsiType>;
	isValid() : boolean;
	ensureValid() : void;
}

export = PsiSubstitutor
