import PsiManager = require('nashorn/com/intellij/psi/PsiManager');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import List = require('nashorn/java/util/List');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import PsiPackageImpl = require('nashorn/com/intellij/psi/impl/file/PsiPackageImpl');
import PsiElementFinder = require('nashorn/com/intellij/psi/PsiElementFinder');

declare class NonClasspathClassFinder {
	psiManager : PsiManager;
	constructor(arg1 : Project, arg2 : string[]);
	getClassRoots(arg1 : GlobalSearchScope) : List<VirtualFile>;
	getClassRoots() : List<VirtualFile>;
	calcClassRoots() : List<VirtualFile>;
	a(arg1 : string) : PsiPackageImpl;
	static addNonClasspathScope(arg1 : Project, arg2 : GlobalSearchScope) : GlobalSearchScope;
	getPsiManager() : PsiManager;
	static a(arg1 : VirtualFile, arg2 : string, arg3 : string[]) : VirtualFile;
}


declare interface NonClasspathClassFinder extends PsiElementFinder {}
export = NonClasspathClassFinder
