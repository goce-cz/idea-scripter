import Language = require('nashorn/com/intellij/lang/Language');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import CharSequence = require('nashorn/java/lang/CharSequence');
import IElementType = require('nashorn/com/intellij/psi/tree/IElementType');

declare class ILazyParseableElementType {
	constructor(arg1 : string);
	constructor(arg1 : string, arg2 : Language);
	constructor(arg1 : string, arg2 : Language, arg3 : boolean);
	parseContents(arg1 : ASTNode) : ASTNode;
	doParseContents(arg1 : ASTNode, arg2 : PsiElement) : ASTNode;
	getLanguageForParser(arg1 : PsiElement) : Language;
	createNode(arg1 : CharSequence) : ASTNode;
}


declare interface ILazyParseableElementType extends IElementType {}
export = ILazyParseableElementType
