import PsiType = require('nashorn/com/intellij/psi/PsiType');
import List = require('nashorn/java/util/List');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import PsiManager = require('nashorn/com/intellij/psi/PsiManager');

declare class PsiDisjunctionType {
	leastUpperBound : PsiType;
	disjunctions : List<PsiType>;
	presentableText : string;
	internalCanonicalText : string;
	valid : boolean;
	resolveScope : GlobalSearchScope;
	superTypes : PsiType[];
	constructor(arg1 : List<PsiType>, arg2 : PsiManager);
	static createDisjunction(arg1 : List<PsiType>, arg2 : PsiManager) : PsiType;
	getLeastUpperBound() : PsiType;
	getDisjunctions() : List<PsiType>;
	newDisjunctionType(arg1 : List<PsiType>) : PsiDisjunctionType;
}


declare interface PsiDisjunctionType extends PsiType.Stub {}
export = PsiDisjunctionType
