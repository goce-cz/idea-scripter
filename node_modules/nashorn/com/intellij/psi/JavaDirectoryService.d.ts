import Object = require('nashorn/java/lang/Object');
import PsiDirectory = require('nashorn/com/intellij/psi/PsiDirectory');
import PsiPackage = require('nashorn/com/intellij/psi/PsiPackage');
import PsiClass = require('nashorn/com/intellij/psi/PsiClass');
import Map = require('nashorn/java/util/Map');
import LanguageLevel = require('nashorn/com/intellij/pom/java/LanguageLevel');

declare class JavaDirectoryService extends Object {
	static instance : JavaDirectoryService;
	constructor();
	static getInstance() : JavaDirectoryService;
	getPackage(arg1 : PsiDirectory) : PsiPackage;
	getClasses(arg1 : PsiDirectory) : PsiClass[];
	createClass(arg1 : PsiDirectory, arg2 : string) : PsiClass;
	createClass(arg1 : PsiDirectory, arg2 : string, arg3 : string) : PsiClass;
	createClass(arg1 : PsiDirectory, arg2 : string, arg3 : string, arg4 : boolean) : PsiClass;
	createClass(arg1 : PsiDirectory, arg2 : string, arg3 : string, arg4 : boolean, arg5 : Map<string, string>) : PsiClass;
	checkCreateClass(arg1 : PsiDirectory, arg2 : string) : void;
	createInterface(arg1 : PsiDirectory, arg2 : string) : PsiClass;
	createEnum(arg1 : PsiDirectory, arg2 : string) : PsiClass;
	createAnnotationType(arg1 : PsiDirectory, arg2 : string) : PsiClass;
	isSourceRoot(arg1 : PsiDirectory) : boolean;
	getLanguageLevel(arg1 : PsiDirectory) : LanguageLevel;
}

export = JavaDirectoryService
