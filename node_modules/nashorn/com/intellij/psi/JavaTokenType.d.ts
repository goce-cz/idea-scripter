import IElementType = require('nashorn/com/intellij/psi/tree/IElementType');
import TokenType = require('nashorn/com/intellij/psi/TokenType');

declare class JavaTokenType {
	static IDENTIFIER : IElementType;
	static C_STYLE_COMMENT : IElementType;
	static END_OF_LINE_COMMENT : IElementType;
	static INTEGER_LITERAL : IElementType;
	static LONG_LITERAL : IElementType;
	static FLOAT_LITERAL : IElementType;
	static DOUBLE_LITERAL : IElementType;
	static CHARACTER_LITERAL : IElementType;
	static STRING_LITERAL : IElementType;
	static TRUE_KEYWORD : IElementType;
	static FALSE_KEYWORD : IElementType;
	static NULL_KEYWORD : IElementType;
	static ABSTRACT_KEYWORD : IElementType;
	static ASSERT_KEYWORD : IElementType;
	static BOOLEAN_KEYWORD : IElementType;
	static BREAK_KEYWORD : IElementType;
	static BYTE_KEYWORD : IElementType;
	static CASE_KEYWORD : IElementType;
	static CATCH_KEYWORD : IElementType;
	static CHAR_KEYWORD : IElementType;
	static CLASS_KEYWORD : IElementType;
	static CONST_KEYWORD : IElementType;
	static CONTINUE_KEYWORD : IElementType;
	static DEFAULT_KEYWORD : IElementType;
	static DO_KEYWORD : IElementType;
	static DOUBLE_KEYWORD : IElementType;
	static ELSE_KEYWORD : IElementType;
	static ENUM_KEYWORD : IElementType;
	static EXTENDS_KEYWORD : IElementType;
	static FINAL_KEYWORD : IElementType;
	static FINALLY_KEYWORD : IElementType;
	static FLOAT_KEYWORD : IElementType;
	static FOR_KEYWORD : IElementType;
	static GOTO_KEYWORD : IElementType;
	static IF_KEYWORD : IElementType;
	static IMPLEMENTS_KEYWORD : IElementType;
	static IMPORT_KEYWORD : IElementType;
	static INSTANCEOF_KEYWORD : IElementType;
	static INT_KEYWORD : IElementType;
	static INTERFACE_KEYWORD : IElementType;
	static LONG_KEYWORD : IElementType;
	static NATIVE_KEYWORD : IElementType;
	static NEW_KEYWORD : IElementType;
	static PACKAGE_KEYWORD : IElementType;
	static PRIVATE_KEYWORD : IElementType;
	static PUBLIC_KEYWORD : IElementType;
	static SHORT_KEYWORD : IElementType;
	static SUPER_KEYWORD : IElementType;
	static SWITCH_KEYWORD : IElementType;
	static SYNCHRONIZED_KEYWORD : IElementType;
	static THIS_KEYWORD : IElementType;
	static THROW_KEYWORD : IElementType;
	static PROTECTED_KEYWORD : IElementType;
	static TRANSIENT_KEYWORD : IElementType;
	static RETURN_KEYWORD : IElementType;
	static VOID_KEYWORD : IElementType;
	static STATIC_KEYWORD : IElementType;
	static STRICTFP_KEYWORD : IElementType;
	static WHILE_KEYWORD : IElementType;
	static TRY_KEYWORD : IElementType;
	static VOLATILE_KEYWORD : IElementType;
	static THROWS_KEYWORD : IElementType;
	static LPARENTH : IElementType;
	static RPARENTH : IElementType;
	static LBRACE : IElementType;
	static RBRACE : IElementType;
	static LBRACKET : IElementType;
	static RBRACKET : IElementType;
	static SEMICOLON : IElementType;
	static COMMA : IElementType;
	static DOT : IElementType;
	static ELLIPSIS : IElementType;
	static AT : IElementType;
	static EQ : IElementType;
	static GT : IElementType;
	static LT : IElementType;
	static EXCL : IElementType;
	static TILDE : IElementType;
	static QUEST : IElementType;
	static COLON : IElementType;
	static PLUS : IElementType;
	static MINUS : IElementType;
	static ASTERISK : IElementType;
	static DIV : IElementType;
	static AND : IElementType;
	static OR : IElementType;
	static XOR : IElementType;
	static PERC : IElementType;
	static EQEQ : IElementType;
	static LE : IElementType;
	static GE : IElementType;
	static NE : IElementType;
	static ANDAND : IElementType;
	static OROR : IElementType;
	static PLUSPLUS : IElementType;
	static MINUSMINUS : IElementType;
	static LTLT : IElementType;
	static GTGT : IElementType;
	static GTGTGT : IElementType;
	static PLUSEQ : IElementType;
	static MINUSEQ : IElementType;
	static ASTERISKEQ : IElementType;
	static DIVEQ : IElementType;
	static ANDEQ : IElementType;
	static OREQ : IElementType;
	static XOREQ : IElementType;
	static PERCEQ : IElementType;
	static LTLTEQ : IElementType;
	static GTGTEQ : IElementType;
	static GTGTGTEQ : IElementType;
	static DOUBLE_COLON : IElementType;
	static ARROW : IElementType;
}


declare interface JavaTokenType extends TokenType {}
export = JavaTokenType
