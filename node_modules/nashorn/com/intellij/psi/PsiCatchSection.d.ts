import ArrayFactory = require('nashorn/com/intellij/util/ArrayFactory');
import PsiParameter = require('nashorn/com/intellij/psi/PsiParameter');
import PsiCodeBlock = require('nashorn/com/intellij/psi/PsiCodeBlock');
import PsiType = require('nashorn/com/intellij/psi/PsiType');
import List = require('nashorn/java/util/List');
import PsiTryStatement = require('nashorn/com/intellij/psi/PsiTryStatement');
import PsiJavaToken = require('nashorn/com/intellij/psi/PsiJavaToken');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');

declare class PsiCatchSection {
	static EMPTY_ARRAY : PsiCatchSection[];
	static ARRAY_FACTORY : ArrayFactory<PsiCatchSection>;
	parameter : PsiParameter;
	catchBlock : PsiCodeBlock;
	catchType : PsiType;
	preciseCatchTypes : List<PsiType>;
	tryStatement : PsiTryStatement;
	rParenth : PsiJavaToken;
	lParenth : PsiJavaToken;
	getParameter() : PsiParameter;
	getCatchBlock() : PsiCodeBlock;
	getCatchType() : PsiType;
	getPreciseCatchTypes() : List<PsiType>;
	getTryStatement() : PsiTryStatement;
	getRParenth() : PsiJavaToken;
	getLParenth() : PsiJavaToken;
}


declare interface PsiCatchSection extends PsiElement {}
export = PsiCatchSection
