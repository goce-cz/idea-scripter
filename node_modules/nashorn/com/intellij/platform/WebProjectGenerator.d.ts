import DirectoryProjectGenerator = require('nashorn/com/intellij/platform/DirectoryProjectGenerator');
import DialogWrapper = require('nashorn/com/intellij/openapi/ui/DialogWrapper');
import Object = require('nashorn/java/lang/Object');
import JComponent = require('nashorn/javax/swing/JComponent');
import SettingsStep = require('nashorn/com/intellij/ide/util/projectWizard/SettingsStep');
import ValidationInfo = require('nashorn/com/intellij/openapi/ui/ValidationInfo');

declare class WebProjectGenerator<T> {
	name : string;
	description : string;
	preferredDescriptionWidth : number;
	helpId : string;
	primaryGenerator : boolean;
	constructor();
	getDescription() : string;
	getPreferredDescriptionWidth() : number;
	getHelpId() : string;
	createPeer() : WebProjectGenerator.GeneratorPeer<T>;
	isPrimaryGenerator() : boolean;
}


declare interface WebProjectGenerator<T> extends DirectoryProjectGenerator<T> {}

declare module WebProjectGenerator {
	class MyDialogWrapper {
	}


	interface MyDialogWrapper extends DialogWrapper {}	class SettingsStateListener extends Object {
		stateChanged(arg1 : boolean) : void;
	}
	class GeneratorPeer<T> extends Object {
		component : JComponent;
		settings : T;
		backgroundJobRunning : boolean;
		getComponent() : JComponent;
		buildUI(arg1 : SettingsStep) : void;
		getSettings() : T;
		validate() : ValidationInfo;
		isBackgroundJobRunning() : boolean;
		addSettingsStateListener(arg1 : WebProjectGenerator.SettingsStateListener) : void;
	}
}

export = WebProjectGenerator
