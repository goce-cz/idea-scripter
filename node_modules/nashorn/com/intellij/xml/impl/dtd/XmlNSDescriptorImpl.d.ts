import XmlFile = require('nashorn/com/intellij/psi/xml/XmlFile');
import XmlElementDescriptor = require('nashorn/com/intellij/xml/XmlElementDescriptor');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Object = require('nashorn/java/lang/Object');
import Map = require('nashorn/java/util/Map');
import CachedValue = require('nashorn/com/intellij/psi/util/CachedValue');
import XmlNSDescriptorEx = require('nashorn/com/intellij/xml/XmlNSDescriptorEx');
import Validator = require('nashorn/com/intellij/codeInsight/daemon/Validator');
import XmlDocument = require('nashorn/com/intellij/psi/xml/XmlDocument');
import DumbAware = require('nashorn/com/intellij/openapi/project/DumbAware');

declare class XmlNSDescriptorImpl {
	descriptorFile : XmlFile;
	hierarhyEnabled : boolean;
	elements : XmlElementDescriptor[];
	declaration : PsiElement;
	name : string;
	dependences : Object[];
	constructor();
	getElements() : XmlElementDescriptor[];
	a() : Map<string, XmlElementDescriptor>;
	b() : CachedValue<Map<string, XmlElementDescriptor>>;
	getElementDescriptor(arg1 : string) : XmlElementDescriptor;
}


declare interface XmlNSDescriptorImpl extends XmlNSDescriptorEx, Validator<XmlDocument>, DumbAware {}
export = XmlNSDescriptorImpl
