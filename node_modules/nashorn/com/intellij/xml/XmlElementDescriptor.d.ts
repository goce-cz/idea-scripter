import XmlNSDescriptor = require('nashorn/com/intellij/xml/XmlNSDescriptor');
import XmlElementsGroup = require('nashorn/com/intellij/xml/XmlElementsGroup');
import XmlTag = require('nashorn/com/intellij/psi/xml/XmlTag');
import XmlAttributeDescriptor = require('nashorn/com/intellij/xml/XmlAttributeDescriptor');
import XmlAttribute = require('nashorn/com/intellij/psi/xml/XmlAttribute');
import PsiMetaData = require('nashorn/com/intellij/psi/meta/PsiMetaData');

declare class XmlElementDescriptor {
	static EMPTY_ARRAY : XmlElementDescriptor[];
	static CONTENT_TYPE_UNKNOWN : number;
	static CONTENT_TYPE_EMPTY : number;
	static CONTENT_TYPE_ANY : number;
	static CONTENT_TYPE_CHILDREN : number;
	static CONTENT_TYPE_MIXED : number;
	qualifiedName : string;
	defaultName : string;
	nSDescriptor : XmlNSDescriptor;
	topGroup : XmlElementsGroup;
	contentType : number;
	defaultValue : string;
	getQualifiedName() : string;
	getDefaultName() : string;
	getElementsDescriptors(arg1 : XmlTag) : XmlElementDescriptor[];
	getElementDescriptor(arg1 : XmlTag, arg2 : XmlTag) : XmlElementDescriptor;
	getAttributesDescriptors(arg1 : XmlTag) : XmlAttributeDescriptor[];
	getAttributeDescriptor(arg1 : string, arg2 : XmlTag) : XmlAttributeDescriptor;
	getAttributeDescriptor(arg1 : XmlAttribute) : XmlAttributeDescriptor;
	getNSDescriptor() : XmlNSDescriptor;
	getTopGroup() : XmlElementsGroup;
	getContentType() : number;
	getDefaultValue() : string;
}


declare interface XmlElementDescriptor extends PsiMetaData {}
export = XmlElementDescriptor
