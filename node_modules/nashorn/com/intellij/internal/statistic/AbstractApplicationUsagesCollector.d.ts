import Set = require('nashorn/java/util/Set');
import UsageDescriptor = require('nashorn/com/intellij/internal/statistic/beans/UsageDescriptor');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import CollectedUsages = require('nashorn/com/intellij/internal/statistic/persistence/CollectedUsages');
import ApplicationStatisticsPersistence = require('nashorn/com/intellij/internal/statistic/persistence/ApplicationStatisticsPersistence');
import UsagesCollector = require('nashorn/com/intellij/internal/statistic/UsagesCollector');

declare class AbstractApplicationUsagesCollector {
	applicationUsages : Set<UsageDescriptor>;
	usages : Set<UsageDescriptor>;
	constructor();
	persistProjectUsages(arg1 : Project) : void;
	persistProjectUsages(arg1 : Project, arg2 : CollectedUsages) : void;
	persistProjectUsages(arg1 : Project, arg2 : CollectedUsages, arg3 : ApplicationStatisticsPersistence) : void;
	getApplicationUsages() : Set<UsageDescriptor>;
	getApplicationUsages(arg1 : ApplicationStatisticsPersistence) : Set<UsageDescriptor>;
	getProjectUsages(arg1 : Project) : Set<UsageDescriptor>;
}


declare interface AbstractApplicationUsagesCollector extends UsagesCollector {}
export = AbstractApplicationUsagesCollector
