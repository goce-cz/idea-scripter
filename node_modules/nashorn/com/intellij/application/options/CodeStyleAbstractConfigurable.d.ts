import CodeStyleAbstractPanel = require('nashorn/com/intellij/application/options/CodeStyleAbstractPanel');
import CodeStyleSettings = require('nashorn/com/intellij/psi/codeStyle/CodeStyleSettings');
import CodeStyleSchemesModel = require('nashorn/com/intellij/application/options/codeStyle/CodeStyleSchemesModel');
import Configurable = require('nashorn/com/intellij/openapi/options/Configurable');
import OptionsContainingConfigurable = require('nashorn/com/intellij/application/options/OptionsContainingConfigurable');

declare class CodeStyleAbstractConfigurable {
	displayName : string;
	modified : boolean;
	panel : CodeStyleAbstractPanel;
	constructor(arg1 : CodeStyleSettings, arg2 : CodeStyleSettings, arg3 : string);
	createPanel(arg1 : CodeStyleSettings) : CodeStyleAbstractPanel;
	resetFromClone() : void;
	reset(arg1 : CodeStyleSettings) : void;
	getPanel() : CodeStyleAbstractPanel;
	setModel(arg1 : CodeStyleSchemesModel) : void;
	onSomethingChanged() : void;
	getCurrentSettings() : CodeStyleSettings;
}


declare interface CodeStyleAbstractConfigurable extends Configurable, OptionsContainingConfigurable {}
export = CodeStyleAbstractConfigurable
