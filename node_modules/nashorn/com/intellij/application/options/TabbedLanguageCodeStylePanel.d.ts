import JComponent = require('nashorn/javax/swing/JComponent');
import CodeStyleSettings = require('nashorn/com/intellij/psi/codeStyle/CodeStyleSettings');
import Component = require('nashorn/java/awt/Component');
import CodeStyleAbstractPanel = require('nashorn/com/intellij/application/options/CodeStyleAbstractPanel');
import Configurable = require('nashorn/com/intellij/openapi/options/Configurable');
import CodeStyleSettingsProvider = require('nashorn/com/intellij/psi/codeStyle/CodeStyleSettingsProvider');
import JMenuItem = require('nashorn/javax/swing/JMenuItem');
import PredefinedCodeStyle = require('nashorn/com/intellij/psi/codeStyle/PredefinedCodeStyle');
import Language = require('nashorn/com/intellij/lang/Language');
import Object = require('nashorn/java/lang/Object');
import CommonCodeStyleSettings = require('nashorn/com/intellij/psi/codeStyle/CommonCodeStyleSettings');
import WrappingAndBracesPanel = require('nashorn/com/intellij/application/options/codeStyle/WrappingAndBracesPanel');
import CodeStyleBlankLinesPanel = require('nashorn/com/intellij/application/options/codeStyle/CodeStyleBlankLinesPanel');
import CodeStyleSpacesPanel = require('nashorn/com/intellij/application/options/codeStyle/CodeStyleSpacesPanel');

declare class TabbedLanguageCodeStylePanel {
	panel : JComponent;
	copyFromMenuAvailable : boolean;
	initTabs(arg1 : CodeStyleSettings) : void;
	addIndentOptionsTab(arg1 : CodeStyleSettings) : void;
	addSpacesTab(arg1 : CodeStyleSettings) : void;
	addBlankLinesTab(arg1 : CodeStyleSettings) : void;
	addWrappingAndBracesTab(arg1 : CodeStyleSettings) : void;
	f() : void;
	showSetFrom(arg1 : Component) : void;
	g() : void;
	addTab(arg1 : CodeStyleAbstractPanel) : void;
	a(arg1 : Configurable) : void;
	createTab(arg1 : CodeStyleSettingsProvider) : void;
	a(arg1 : JComponent) : void;
	a(arg1 : JMenuItem) : void;
	h() : PredefinedCodeStyle[];
	a(arg1 : Language) : void;
	a(arg1 : string) : void;
	setListener(arg1 : TabbedLanguageCodeStylePanel.TabChangeListener) : void;
	changeTab(arg1 : string) : void;
}


declare interface TabbedLanguageCodeStylePanel extends CodeStyleAbstractPanel {}

declare module TabbedLanguageCodeStylePanel {
	class TabChangeListener extends Object {
		tabChanged(arg1 : TabbedLanguageCodeStylePanel, arg2 : string) : void;
	}
	class MyIndentOptionsWrapper {
		panel : JComponent;
		defaultLanguage : Language;
		a(arg1 : CodeStyleSettings) : CommonCodeStyleSettings.IndentOptions;
	}


	interface MyIndentOptionsWrapper extends CodeStyleAbstractPanel {}	class ConfigurableWrapper {
		defaultLanguage : Language;
		panel : JComponent;
		constructor(arg1 : Configurable, arg2 : CodeStyleSettings);
	}


	interface ConfigurableWrapper extends CodeStyleAbstractPanel {}	class MyWrappingAndBracesPanel {
		defaultLanguage : Language;
		constructor(arg1 : CodeStyleSettings);
	}


	interface MyWrappingAndBracesPanel extends WrappingAndBracesPanel {}	class MyBlankLinesPanel {
		defaultLanguage : Language;
		constructor(arg1 : CodeStyleSettings);
	}


	interface MyBlankLinesPanel extends CodeStyleBlankLinesPanel {}	class MySpacesPanel {
		defaultLanguage : Language;
		constructor(arg1 : CodeStyleSettings);
	}


	interface MySpacesPanel extends CodeStyleSpacesPanel {}}

export = TabbedLanguageCodeStylePanel
