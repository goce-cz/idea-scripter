import ItemPresentation = require('nashorn/com/intellij/navigation/ItemPresentation');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import KeyboardShortcut = require('nashorn/com/intellij/openapi/actionSystem/KeyboardShortcut');
import FindUsagesOptions = require('nashorn/com/intellij/find/findUsages/FindUsagesOptions');
import PsiElementUsageTarget = require('nashorn/com/intellij/usages/PsiElementUsageTarget');
import TypeSafeDataProvider = require('nashorn/com/intellij/openapi/actionSystem/TypeSafeDataProvider');
import PsiElementNavigationItem = require('nashorn/com/intellij/navigation/PsiElementNavigationItem');
import ConfigurableUsageTarget = require('nashorn/com/intellij/usages/ConfigurableUsageTarget');

declare class PsiElement2UsageTargetAdapter {
	name : string;
	presentation : ItemPresentation;
	targetElement : PsiElement;
	element : PsiElement;
	valid : boolean;
	readOnly : boolean;
	files : VirtualFile[];
	shortcut : KeyboardShortcut;
	longDescriptiveName : string;
	presentableText : string;
	locationString : string;
	constructor(arg1 : PsiElement, arg2 : FindUsagesOptions);
	constructor(arg1 : PsiElement);
	static convert(arg1 : PsiElement[]) : PsiElement2UsageTargetAdapter[];
	a(arg1 : PsiElement) : void;
}


declare interface PsiElement2UsageTargetAdapter extends PsiElementUsageTarget, TypeSafeDataProvider, PsiElementNavigationItem, ItemPresentation, ConfigurableUsageTarget {}
export = PsiElement2UsageTargetAdapter
