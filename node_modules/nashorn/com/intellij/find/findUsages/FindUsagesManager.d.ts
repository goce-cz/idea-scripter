import Object = require('nashorn/java/lang/Object');
import UsageHistory = require('nashorn/com/intellij/find/findUsages/UsageHistory');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import UsageViewManager = require('nashorn/com/intellij/usages/UsageViewManager');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import FileEditor = require('nashorn/com/intellij/openapi/fileEditor/FileEditor');
import FindUsagesOptions = require('nashorn/com/intellij/find/findUsages/FindUsagesOptions');
import FindUsagesHandler = require('nashorn/com/intellij/find/findUsages/FindUsagesHandler');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import SearchScope = require('nashorn/com/intellij/psi/search/SearchScope');
import NavigationItem = require('nashorn/com/intellij/navigation/NavigationItem');
import Processor = require('nashorn/com/intellij/util/Processor');
import Usage = require('nashorn/com/intellij/usages/Usage');
import Runnable = require('nashorn/java/lang/Runnable');
import ProgressIndicator = require('nashorn/com/intellij/openapi/progress/ProgressIndicator');
import UsageViewPresentation = require('nashorn/com/intellij/usages/UsageViewPresentation');
import UsageSearcher = require('nashorn/com/intellij/usages/UsageSearcher');
import Iterable = require('nashorn/java/lang/Iterable');
import PsiElement2UsageTargetAdapter = require('nashorn/com/intellij/find/findUsages/PsiElement2UsageTargetAdapter');
import FileEditorLocation = require('nashorn/com/intellij/openapi/fileEditor/FileEditorLocation');
import AtomicBoolean = require('nashorn/java/util/concurrent/atomic/AtomicBoolean');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import ConfigurableUsageTarget = require('nashorn/com/intellij/usages/ConfigurableUsageTarget');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import Enum = require('nashorn/java/lang/Enum');

declare class FindUsagesManager extends Object {
	history : UsageHistory;
	constructor(arg1 : Project, arg2 : UsageViewManager);
	canFindUsages(arg1 : PsiElement) : boolean;
	clearFindingNextUsageInFile() : void;
	findNextUsageInFile(arg1 : FileEditor) : boolean;
	findPreviousUsageInFile(arg1 : FileEditor) : boolean;
	a(arg1 : FileEditor, arg2 : FindUsagesManager.FileSearchScope) : boolean;
	a(arg1 : FindUsagesOptions, arg2 : PsiElement[], arg3 : PsiElement[]) : void;
	getFindUsagesHandler(arg1 : PsiElement, arg2 : boolean) : FindUsagesHandler;
	getNewFindUsagesHandler(arg1 : PsiElement, arg2 : boolean) : FindUsagesHandler;
	findUsages(arg1 : PsiElement, arg2 : PsiFile, arg3 : FileEditor, arg4 : boolean, arg5 : SearchScope) : void;
	startFindUsages(arg1 : PsiElement, arg2 : FindUsagesOptions, arg3 : PsiFile, arg4 : FileEditor) : void;
	a(arg1 : FindUsagesOptions, arg2 : FindUsagesHandler, arg3 : PsiFile, arg4 : FileEditor) : void;
	static showSettingsAndFindUsages(arg1 : NavigationItem[]) : void;
	static a(arg1 : PsiElement[], arg2 : FindUsagesHandler, arg3 : string) : void;
	static startProcessUsages(arg1 : FindUsagesHandler, arg2 : PsiElement[], arg3 : PsiElement[], arg4 : Processor<Usage>, arg5 : FindUsagesOptions, arg6 : Runnable) : ProgressIndicator;
	createPresentation(arg1 : FindUsagesHandler, arg2 : FindUsagesOptions) : UsageViewPresentation;
	a(arg1 : boolean) : void;
	a() : boolean;
	b() : boolean;
	static a(arg1 : PsiElement[], arg2 : PsiElement[], arg3 : FindUsagesHandler, arg4 : FindUsagesOptions, arg5 : PsiFile) : UsageSearcher;
	static a(arg1 : Iterable<PsiElement>, arg2 : FindUsagesOptions) : PsiElement2UsageTargetAdapter[];
	findUsages(arg1 : PsiElement[], arg2 : PsiElement[], arg3 : FindUsagesHandler, arg4 : FindUsagesOptions, arg5 : boolean) : void;
	static a(arg1 : ProgressIndicator, arg2 : Project) : void;
	static a(arg1 : PsiElement, arg2 : FindUsagesOptions, arg3 : boolean) : UsageViewPresentation;
	a(arg1 : PsiElement[], arg2 : PsiElement[], arg3 : FindUsagesHandler, arg4 : PsiFile, arg5 : FindUsagesManager.FileSearchScope, arg6 : FindUsagesOptions, arg7 : FileEditor) : void;
	static a(arg1 : PsiElement) : string;
	c() : void;
	static a(arg1 : PsiElement, arg2 : FindUsagesManager.FileSearchScope) : string;
	a(arg1 : string, arg2 : FileEditor) : void;
	static a(arg1 : UsageSearcher, arg2 : FindUsagesManager.FileSearchScope, arg3 : FileEditorLocation, arg4 : AtomicBoolean, arg5 : FileEditor) : Usage;
	static a(arg1 : PsiElement, arg2 : FindUsagesOptions) : PsiElement2UsageTargetAdapter;
	static a(arg1 : FindUsagesOptions) : string;
	static a(arg1 : string, arg2 : Editor) : void;
	static getHelpID(arg1 : PsiElement) : string;
	rerunAndRecallFromHistory(arg1 : ConfigurableUsageTarget) : void;
	addToHistory(arg1 : ConfigurableUsageTarget) : void;
	getHistory() : UsageHistory;
	static getMaximalScope(arg1 : FindUsagesHandler) : GlobalSearchScope;
}


declare module FindUsagesManager {
	class FileSearchScope {
		static FROM_START : FindUsagesManager.FileSearchScope;
		static FROM_END : FindUsagesManager.FileSearchScope;
		static AFTER_CARET : FindUsagesManager.FileSearchScope;
		static BEFORE_CARET : FindUsagesManager.FileSearchScope;
	}


	interface FileSearchScope extends Enum<FindUsagesManager.FileSearchScope> {}}

export = FindUsagesManager
