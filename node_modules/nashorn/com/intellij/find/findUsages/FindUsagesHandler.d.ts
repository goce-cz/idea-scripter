import Object = require('nashorn/java/lang/Object');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import FindUsagesOptions = require('nashorn/com/intellij/find/findUsages/FindUsagesOptions');
import AbstractFindUsagesDialog = require('nashorn/com/intellij/find/findUsages/AbstractFindUsagesDialog');
import DataContext = require('nashorn/com/intellij/openapi/actionSystem/DataContext');
import Processor = require('nashorn/com/intellij/util/Processor');
import UsageInfo = require('nashorn/com/intellij/usageView/UsageInfo');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import Collection = require('nashorn/java/util/Collection');
import SearchScope = require('nashorn/com/intellij/psi/search/SearchScope');
import PsiReference = require('nashorn/com/intellij/psi/PsiReference');

declare class FindUsagesHandler extends Object {
	static NULL_HANDLER : FindUsagesHandler;
	psiElement : PsiElement;
	project : Project;
	primaryElements : PsiElement[];
	secondaryElements : PsiElement[];
	findUsagesOptions : FindUsagesOptions;
	getFindUsagesDialog(arg1 : boolean, arg2 : boolean, arg3 : boolean) : AbstractFindUsagesDialog;
	getPsiElement() : PsiElement;
	getProject() : Project;
	getPrimaryElements() : PsiElement[];
	getSecondaryElements() : PsiElement[];
	getHelpId() : string;
	static createFindUsagesOptions(arg1 : Project, arg2 : DataContext) : FindUsagesOptions;
	getFindUsagesOptions() : FindUsagesOptions;
	getFindUsagesOptions(arg1 : DataContext) : FindUsagesOptions;
	processElementUsages(arg1 : PsiElement, arg2 : Processor<UsageInfo>, arg3 : FindUsagesOptions) : boolean;
	processUsagesInText(arg1 : PsiElement, arg2 : Processor<UsageInfo>, arg3 : GlobalSearchScope) : boolean;
	getStringsToSearch(arg1 : PsiElement) : Collection<string>;
	isSearchForTextOccurencesAvailable(arg1 : PsiElement, arg2 : boolean) : boolean;
	findReferencesToHighlight(arg1 : PsiElement, arg2 : SearchScope) : Collection<PsiReference>;
}


declare module FindUsagesHandler {
	class NullFindUsagesHandler {
		primaryElements : PsiElement[];
		secondaryElements : PsiElement[];
		findUsagesOptions : FindUsagesOptions;
	}


	interface NullFindUsagesHandler extends FindUsagesHandler {}}

export = FindUsagesHandler
