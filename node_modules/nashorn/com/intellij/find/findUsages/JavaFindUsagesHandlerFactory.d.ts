import JavaClassFindUsagesOptions = require('nashorn/com/intellij/find/findUsages/JavaClassFindUsagesOptions');
import JavaMethodFindUsagesOptions = require('nashorn/com/intellij/find/findUsages/JavaMethodFindUsagesOptions');
import JavaPackageFindUsagesOptions = require('nashorn/com/intellij/find/findUsages/JavaPackageFindUsagesOptions');
import JavaThrowFindUsagesOptions = require('nashorn/com/intellij/find/findUsages/JavaThrowFindUsagesOptions');
import JavaVariableFindUsagesOptions = require('nashorn/com/intellij/find/findUsages/JavaVariableFindUsagesOptions');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import FindUsagesHandlerFactory = require('nashorn/com/intellij/find/findUsages/FindUsagesHandlerFactory');

declare class JavaFindUsagesHandlerFactory {
	findClassOptions : JavaClassFindUsagesOptions;
	findMethodOptions : JavaMethodFindUsagesOptions;
	findPackageOptions : JavaPackageFindUsagesOptions;
	findThrowOptions : JavaThrowFindUsagesOptions;
	findVariableOptions : JavaVariableFindUsagesOptions;
	constructor(arg1 : Project);
	static getInstance(arg1 : Project) : JavaFindUsagesHandlerFactory;
	getFindClassOptions() : JavaClassFindUsagesOptions;
	getFindMethodOptions() : JavaMethodFindUsagesOptions;
	getFindPackageOptions() : JavaPackageFindUsagesOptions;
	getFindThrowOptions() : JavaThrowFindUsagesOptions;
	getFindVariableOptions() : JavaVariableFindUsagesOptions;
}


declare interface JavaFindUsagesHandlerFactory extends FindUsagesHandlerFactory {}
export = JavaFindUsagesHandlerFactory
