import Object = require('nashorn/java/lang/Object');
import FindModel = require('nashorn/com/intellij/find/FindModel');
import DataContext = require('nashorn/com/intellij/openapi/actionSystem/DataContext');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import PsiDirectory = require('nashorn/com/intellij/psi/PsiDirectory');
import Pattern = require('nashorn/java/util/regex/Pattern');
import Processor = require('nashorn/com/intellij/util/Processor');
import UsageInfo = require('nashorn/com/intellij/usageView/UsageInfo');
import FindUsagesProcessPresentation = require('nashorn/com/intellij/usages/FindUsagesProcessPresentation');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import Document = require('nashorn/com/intellij/openapi/editor/Document');
import UsageViewPresentation = require('nashorn/com/intellij/usages/UsageViewPresentation');
import SearchScope = require('nashorn/com/intellij/psi/search/SearchScope');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import ItemPresentation = require('nashorn/com/intellij/navigation/ItemPresentation');
import KeyboardShortcut = require('nashorn/com/intellij/openapi/actionSystem/KeyboardShortcut');
import ConfigurableUsageTarget = require('nashorn/com/intellij/usages/ConfigurableUsageTarget');
import TypeSafeDataProvider = require('nashorn/com/intellij/openapi/actionSystem/TypeSafeDataProvider');

declare class FindInProjectUtil extends Object {
	static setDirectoryName(arg1 : FindModel, arg2 : DataContext) : void;
	static getPsiDirectory(arg1 : FindModel, arg2 : Project) : PsiDirectory;
	static createFileMaskRegExp(arg1 : string) : Pattern;
	static findUsages(arg1 : FindModel, arg2 : PsiDirectory, arg3 : Project, arg4 : Processor<UsageInfo>, arg5 : FindUsagesProcessPresentation) : void;
	static processUsagesInFile(arg1 : PsiFile, arg2 : FindModel, arg3 : Processor<UsageInfo>) : number;
	static a(arg1 : Document, arg2 : Processor<UsageInfo>, arg3 : FindModel, arg4 : PsiFile, arg5 : number[], arg6 : number) : number;
	static a(arg1 : FindModel) : string;
	static setupViewPresentation(arg1 : boolean, arg2 : FindModel) : UsageViewPresentation;
	static setupProcessPresentation(arg1 : Project, arg2 : boolean, arg3 : UsageViewPresentation) : FindUsagesProcessPresentation;
	static getScopeFromModel(arg1 : Project, arg2 : FindModel) : SearchScope;
}


declare module FindInProjectUtil {
	class StringUsageTarget {
		presentableText : string;
		longDescriptiveName : string;
		locationString : string;
		valid : boolean;
		readOnly : boolean;
		files : VirtualFile[];
		name : string;
		presentation : ItemPresentation;
		shortcut : KeyboardShortcut;
		constructor(arg1 : Project, arg2 : FindModel);
	}


	interface StringUsageTarget extends ConfigurableUsageTarget, ItemPresentation, TypeSafeDataProvider {}}

export = FindInProjectUtil
