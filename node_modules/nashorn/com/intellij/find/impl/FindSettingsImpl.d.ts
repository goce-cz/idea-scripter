import List = require('nashorn/java/util/List');
import FindSettings = require('nashorn/com/intellij/find/FindSettings');
import PersistentStateComponent = require('nashorn/com/intellij/openapi/components/PersistentStateComponent');

declare class FindSettingsImpl {
	SEARCH_OVERLOADED_METHODS : boolean;
	SEARCH_IN_LIBRARIES : boolean;
	SKIP_RESULTS_WHEN_ONE_USAGE : boolean;
	FIND_DIRECTION : string;
	FIND_ORIGIN : string;
	FIND_SCOPE : string;
	FIND_CUSTOM_SCOPE : string;
	CASE_SENSITIVE_SEARCH : boolean;
	LOCAL_CASE_SENSITIVE_SEARCH : boolean;
	PRESERVE_CASE_REPLACE : boolean;
	WHOLE_WORDS_ONLY : boolean;
	COMMENTS_ONLY : boolean;
	STRING_LITERALS_ONLY : boolean;
	EXCEPT_COMMENTS : boolean;
	EXCEPT_COMMENTS_AND_STRING_LITERALS : boolean;
	EXCEPT_STRING_LITERALS : boolean;
	LOCAL_WHOLE_WORDS_ONLY : boolean;
	REGULAR_EXPRESSIONS : boolean;
	LOCAL_REGULAR_EXPRESSIONS : boolean;
	WITH_SUBDIRECTORIES : boolean;
	SHOW_RESULTS_IN_SEPARATE_VIEW : boolean;
	SEARCH_SCOPE : string;
	FILE_MASK : string;
	recentFileMasks : List<string>;
	searchOverloadedMethods : boolean;
	state : FindSettingsImpl;
	skipResultsWithOneUsage : boolean;
	defaultScopeName : string;
	forward : boolean;
	fromCursor : boolean;
	global : boolean;
	caseSensitive : boolean;
	localCaseSensitive : boolean;
	localWholeWordsOnly : boolean;
	preserveCase : boolean;
	wholeWordsOnly : boolean;
	regularExpressions : boolean;
	localRegularExpressions : boolean;
	recentFindStrings : string[];
	recentReplaceStrings : string[];
	recentDirectories : List<string>;
	fileMask : string;
	customScope : string;
	inStringLiteralsOnly : boolean;
	inCommentsOnly : boolean;
	exceptComments : boolean;
	showResultsInSeparateView : boolean;
	exceptCommentsAndLiterals : boolean;
	exceptStringLiterals : boolean;
	constructor();
	a() : boolean;
	static a(arg1 : string, arg2 : List<string>, arg3 : number) : void;
}


declare interface FindSettingsImpl extends FindSettings, PersistentStateComponent<FindSettingsImpl> {}

declare module FindSettingsImpl {
	class FindRecents {
		findStrings : List<string>;
		replaceStrings : List<string>;
		dirStrings : List<string>;
		static instance : FindSettingsImpl.FindRecents;
		state : FindSettingsImpl.FindRecents;
		static getInstance() : FindSettingsImpl.FindRecents;
	}


	interface FindRecents extends PersistentStateComponent<FindSettingsImpl.FindRecents> {}}

export = FindSettingsImpl
