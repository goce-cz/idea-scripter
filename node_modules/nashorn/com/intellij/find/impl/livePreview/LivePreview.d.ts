import PrintStream = require('nashorn/java/io/PrintStream');
import SearchResults = require('nashorn/com/intellij/find/impl/livePreview/SearchResults');
import TextAttributes = require('nashorn/com/intellij/openapi/editor/markup/TextAttributes');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');
import Set = require('nashorn/java/util/Set');
import RangeHighlighter = require('nashorn/com/intellij/openapi/editor/markup/RangeHighlighter');
import Balloon = require('nashorn/com/intellij/openapi/ui/popup/Balloon');
import DocumentAdapter = require('nashorn/com/intellij/openapi/editor/event/DocumentAdapter');
import SelectionListener = require('nashorn/com/intellij/openapi/editor/event/SelectionListener');
import PositionTracker = require('nashorn/com/intellij/util/ui/PositionTracker');
import Object = require('nashorn/java/lang/Object');
import FindResult = require('nashorn/com/intellij/find/FindResult');

declare class LivePreview {
	static ourTestOutput : PrintStream;
	delegate : LivePreview.Delegate;
	constructor(arg1 : SearchResults);
	inSmartUpdate() : void;
	static processNotFound() : void;
	static a() : TextAttributes;
	b() : void;
	a(arg1 : PrintStream) : void;
	c() : void;
	d() : void;
	getDelegate() : LivePreview.Delegate;
	setDelegate(arg1 : LivePreview.Delegate) : void;
	cleanUp() : void;
	dispose() : void;
	e() : void;
	f() : void;
	g() : void;
	h() : void;
	a(arg1 : Editor, arg2 : string) : void;
	i() : void;
	a(arg1 : TextRange, arg2 : TextAttributes, arg3 : Set<RangeHighlighter>) : RangeHighlighter;
	b(arg1 : TextRange, arg2 : TextAttributes, arg3 : Set<RangeHighlighter>) : RangeHighlighter;
	static a(arg1 : Balloon) : void;
}


declare interface LivePreview extends DocumentAdapter, SearchResults.SearchResultsListener, SelectionListener {}

declare module LivePreview {
	class ReplacementBalloonPositionTracker {
		constructor(arg1 : Editor);
	}


	interface ReplacementBalloonPositionTracker extends PositionTracker<Balloon> {}	class Delegate extends Object {
		getStringToReplace(arg1 : Editor, arg2 : FindResult) : string;
	}
}

export = LivePreview
