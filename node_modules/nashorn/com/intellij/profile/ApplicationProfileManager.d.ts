import Profile = require('nashorn/com/intellij/profile/Profile');
import NamedScopesHolder = require('nashorn/com/intellij/psi/search/scope/packageSet/NamedScopesHolder');
import ProfileChangeAdapter = require('nashorn/com/intellij/profile/ProfileChangeAdapter');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import NamedScope = require('nashorn/com/intellij/psi/search/scope/packageSet/NamedScope');
import ProfileManager = require('nashorn/com/intellij/profile/ProfileManager');

declare class ApplicationProfileManager {
	rootProfile : Profile;
	scopesManager : NamedScopesHolder;
	constructor();
	createProfile() : Profile;
	addProfileChangeListener(arg1 : ProfileChangeAdapter) : void;
	addProfileChangeListener(arg1 : ProfileChangeAdapter, arg2 : Disposable) : void;
	removeProfileChangeListener(arg1 : ProfileChangeAdapter) : void;
	fireProfileChanged(arg1 : Profile) : void;
	fireProfileChanged(arg1 : Profile, arg2 : Profile, arg3 : NamedScope) : void;
	setRootProfile(arg1 : string) : void;
	getRootProfile() : Profile;
	addProfile(arg1 : Profile) : void;
}


declare interface ApplicationProfileManager extends ProfileManager {}
export = ApplicationProfileManager
