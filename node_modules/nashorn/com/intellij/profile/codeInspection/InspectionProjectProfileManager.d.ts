import InspectionProfile = require('nashorn/com/intellij/codeInspection/InspectionProfile');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import InspectionProfileManager = require('nashorn/com/intellij/profile/codeInspection/InspectionProfileManager');
import DependencyValidationManager = require('nashorn/com/intellij/packageDependencies/DependencyValidationManager');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Profile = require('nashorn/com/intellij/profile/Profile');
import DefaultProjectProfileManager = require('nashorn/com/intellij/profile/DefaultProjectProfileManager');
import ProjectComponent = require('nashorn/com/intellij/openapi/components/ProjectComponent');
import SeverityProvider = require('nashorn/com/intellij/profile/codeInspection/SeverityProvider');
import PersistentStateComponent = require('nashorn/com/intellij/openapi/components/PersistentStateComponent');
import Element = require('nashorn/org/jdom/Element');

declare class InspectionProjectProfileManager {
	profileName : string;
	inspectionProfile : InspectionProfile;
	profileLoaded : boolean;
	componentName : string;
	constructor(arg1 : Project, arg2 : InspectionProfileManager, arg3 : DependencyValidationManager);
	static getInstance(arg1 : Project) : InspectionProjectProfileManager;
	getInspectionProfile() : InspectionProfile;
	getInspectionProfile(arg1 : PsiElement) : InspectionProfile;
	isProfileLoaded() : boolean;
	initProfileWrapper(arg1 : Profile) : void;
}


declare interface InspectionProjectProfileManager extends DefaultProjectProfileManager, ProjectComponent, SeverityProvider, PersistentStateComponent<Element> {}
export = InspectionProjectProfileManager
