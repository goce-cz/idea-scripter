import DataKey = require('nashorn/com/intellij/openapi/actionSystem/DataKey');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import HierarchyBrowserBaseEx = require('nashorn/com/intellij/ide/hierarchy/HierarchyBrowserBaseEx');
import DeleteProvider = require('nashorn/com/intellij/ide/DeleteProvider');

declare class TypeHierarchyBrowserBase {
	static TYPE_HIERARCHY_TYPE : string;
	static SUBTYPES_HIERARCHY_TYPE : string;
	static SUPERTYPES_HIERARCHY_TYPE : string;
	static DATA_KEY : DataKey<TypeHierarchyBrowserBase>;
	static TYPE_HIERARCHY_BROWSER_DATA_KEY : string;
	interface : boolean;
	constructor(arg1 : Project, arg2 : PsiElement);
	isInterface(arg1 : PsiElement) : boolean;
	canBeDeleted(arg1 : PsiElement) : boolean;
	getQualifiedName(arg1 : PsiElement) : string;
	isInterface() : boolean;
}


declare interface TypeHierarchyBrowserBase extends HierarchyBrowserBaseEx {}

declare module TypeHierarchyBrowserBase {
	class BaseOnThisTypeAction {
		constructor();
	}


	interface BaseOnThisTypeAction extends HierarchyBrowserBaseEx.BaseOnThisElementAction {}	class MyDeleteProvider {
	}


	interface MyDeleteProvider extends DeleteProvider {}}

export = TypeHierarchyBrowserBase
