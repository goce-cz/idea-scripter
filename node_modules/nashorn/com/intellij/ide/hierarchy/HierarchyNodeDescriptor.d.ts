import Object = require('nashorn/java/lang/Object');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import CompositeAppearance = require('nashorn/com/intellij/openapi/roots/ui/util/CompositeAppearance');
import TextAttributes = require('nashorn/com/intellij/openapi/editor/markup/TextAttributes');
import SmartElementDescriptor = require('nashorn/com/intellij/ide/util/treeView/SmartElementDescriptor');

declare class HierarchyNodeDescriptor {
	element : Object;
	containingFile : PsiFile;
	valid : boolean;
	cachedChildren : Object[];
	highlightedText : CompositeAppearance;
	getContainingFile() : PsiFile;
	isValid() : boolean;
	getCachedChildren() : Object[];
	setCachedChildren(arg1 : Object[]) : void;
	getHighlightedText() : CompositeAppearance;
	static getInvalidPrefixAttributes() : TextAttributes;
	static getUsageCountPrefixAttributes() : TextAttributes;
	static getPackageNameAttributes() : TextAttributes;
}


declare interface HierarchyNodeDescriptor extends SmartElementDescriptor {}
export = HierarchyNodeDescriptor
