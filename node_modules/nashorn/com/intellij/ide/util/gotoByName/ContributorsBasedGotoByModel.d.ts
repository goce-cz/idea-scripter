import Logger = require('nashorn/com/intellij/openapi/diagnostic/Logger');
import ListCellRenderer = require('nashorn/javax/swing/ListCellRenderer');
import IdFilter = require('nashorn/com/intellij/util/indexing/IdFilter');
import ChooseByNameContributor = require('nashorn/com/intellij/navigation/ChooseByNameContributor');
import List = require('nashorn/java/util/List');
import FindSymbolParameters = require('nashorn/com/intellij/util/indexing/FindSymbolParameters');
import ProgressIndicator = require('nashorn/com/intellij/openapi/progress/ProgressIndicator');
import Object = require('nashorn/java/lang/Object');
import NavigationItem = require('nashorn/com/intellij/navigation/NavigationItem');
import ChooseByNameModelEx = require('nashorn/com/intellij/ide/util/gotoByName/ChooseByNameModelEx');

declare class ContributorsBasedGotoByModel {
	static LOG : Logger;
	listCellRenderer : ListCellRenderer;
	helpId : string;
	sameNamesForProjectAndLibraries() : boolean;
	getIdFilter(arg1 : boolean) : IdFilter;
	a(arg1 : ChooseByNameContributor[]) : List<ChooseByNameContributor>;
	getElementsByName(arg1 : string, arg2 : FindSymbolParameters, arg3 : ProgressIndicator) : Object[];
	getContributors() : ChooseByNameContributor[];
	acceptItem(arg1 : NavigationItem) : boolean;
	removeModelSpecificMarkup(arg1 : string) : string;
}


declare interface ContributorsBasedGotoByModel extends ChooseByNameModelEx {}
export = ContributorsBasedGotoByModel
