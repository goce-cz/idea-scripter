import Icon = require('nashorn/javax/swing/Icon');
import WizardContext = require('nashorn/com/intellij/ide/util/projectWizard/WizardContext');
import ModulesProvider = require('nashorn/com/intellij/openapi/roots/ui/configuration/ModulesProvider');
import ModuleWizardStep = require('nashorn/com/intellij/ide/util/projectWizard/ModuleWizardStep');
import SettingsStep = require('nashorn/com/intellij/ide/util/projectWizard/SettingsStep');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import ProjectBuilder = require('nashorn/com/intellij/ide/util/projectWizard/ProjectBuilder');

declare class AbstractModuleBuilder {
	nodeIcon : Icon;
	builderId : string;
	constructor();
	getNodeIcon() : Icon;
	getBuilderId() : string;
	createWizardSteps(arg1 : WizardContext, arg2 : ModulesProvider) : ModuleWizardStep[];
	modifySettingsStep(arg1 : SettingsStep) : ModuleWizardStep;
	modifyProjectTypeStep(arg1 : SettingsStep) : ModuleWizardStep;
	getCustomOptionsStep(arg1 : WizardContext, arg2 : Disposable) : ModuleWizardStep;
	setName(arg1 : string) : void;
	setModuleFilePath(arg1 : string) : void;
	setContentEntryPath(arg1 : string) : void;
}


declare interface AbstractModuleBuilder extends ProjectBuilder {}
export = AbstractModuleBuilder
