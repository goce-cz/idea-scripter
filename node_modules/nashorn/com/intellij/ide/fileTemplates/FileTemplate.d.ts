import FileType = require('nashorn/com/intellij/openapi/fileTypes/FileType');
import Map = require('nashorn/java/util/Map');
import Properties = require('nashorn/java/util/Properties');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Cloneable = require('nashorn/java/lang/Cloneable');

declare class FileTemplate {
	static EMPTY_ARRAY : FileTemplate[];
	static ATTRIBUTE_EXCEPTION : string;
	static ATTRIBUTE_EXCEPTION_TYPE : string;
	static ATTRIBUTE_DESCRIPTION : string;
	static ATTRIBUTE_DISPLAY_NAME : string;
	static ATTRIBUTE_RETURN_TYPE : string;
	static ATTRIBUTE_DEFAULT_RETURN_VALUE : string;
	static ATTRIBUTE_CALL_SUPER : string;
	static ourEncoding : string;
	static ATTRIBUTE_CLASS_NAME : string;
	static ATTRIBUTE_SIMPLE_CLASS_NAME : string;
	static ATTRIBUTE_METHOD_NAME : string;
	static ATTRIBUTE_PACKAGE_NAME : string;
	static ATTRIBUTE_NAME : string;
	static ATTRIBUTE_FILE_NAME : string;
	name : string;
	default : boolean;
	description : string;
	text : string;
	extension : string;
	reformatCode : boolean;
	getName() : string;
	setName(arg1 : string) : void;
	isTemplateOfType(arg1 : FileType) : boolean;
	isDefault() : boolean;
	getDescription() : string;
	getText() : string;
	setText(arg1 : string) : void;
	getText(arg1 : Map) : string;
	getText(arg1 : Properties) : string;
	getExtension() : string;
	setExtension(arg1 : string) : void;
	isReformatCode() : boolean;
	setReformatCode(arg1 : boolean) : void;
	getUnsetAttributes(arg1 : Properties, arg2 : Project) : string[];
}


declare interface FileTemplate extends Cloneable {}
export = FileTemplate
