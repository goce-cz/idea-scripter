import Icon = require('nashorn/javax/swing/Icon');
import Object = require('nashorn/java/lang/Object');
import JComponent = require('nashorn/javax/swing/JComponent');
import Step = require('nashorn/com/intellij/ide/wizard/Step');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import StepListener = require('nashorn/com/intellij/ide/wizard/StepListener');
import Enum = require('nashorn/java/lang/Enum');

declare class AbstractWizardStepEx {
	icon : Icon;
	stepId : Object;
	nextStepId : Object;
	previousStepId : Object;
	complete : boolean;
	title : string;
	preferredFocusedComponent : JComponent;
	helpId : string;
	constructor(arg1 : string);
	_commitPrev() : void;
	addStepListener(arg1 : AbstractWizardStepEx.Listener) : void;
	setTitle(arg1 : string) : void;
	fireStateChanged() : void;
	fireGoNext() : void;
	getStepId() : Object;
	getNextStepId() : Object;
	getPreviousStepId() : Object;
	isComplete() : boolean;
	commit(arg1 : AbstractWizardStepEx.CommitType) : void;
	getTitle() : string;
	getHelpId() : string;
}


declare interface AbstractWizardStepEx extends Step, Disposable {}

declare module AbstractWizardStepEx {
	class Listener {
		doNextAction() : void;
	}


	interface Listener extends StepListener {}	class CommitType {
		static Prev : AbstractWizardStepEx.CommitType;
		static Next : AbstractWizardStepEx.CommitType;
		static Finish : AbstractWizardStepEx.CommitType;
	}


	interface CommitType extends Enum<AbstractWizardStepEx.CommitType> {}}

export = AbstractWizardStepEx
