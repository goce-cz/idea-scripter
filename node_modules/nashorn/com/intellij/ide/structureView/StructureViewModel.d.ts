import Object = require('nashorn/java/lang/Object');
import StructureViewTreeElement = require('nashorn/com/intellij/ide/structureView/StructureViewTreeElement');
import FileEditorPositionListener = require('nashorn/com/intellij/ide/structureView/FileEditorPositionListener');
import ModelListener = require('nashorn/com/intellij/ide/structureView/ModelListener');
import TreeModel = require('nashorn/com/intellij/ide/util/treeView/smartTree/TreeModel');

declare class StructureViewModel {
	currentEditorElement : Object;
	root : StructureViewTreeElement;
	getCurrentEditorElement() : Object;
	addEditorPositionListener(arg1 : FileEditorPositionListener) : void;
	removeEditorPositionListener(arg1 : FileEditorPositionListener) : void;
	addModelListener(arg1 : ModelListener) : void;
	removeModelListener(arg1 : ModelListener) : void;
	dispose() : void;
	shouldEnterElement(arg1 : Object) : boolean;
}


declare interface StructureViewModel extends TreeModel {}

declare module StructureViewModel {
	class ExpandInfoProvider extends Object {
		smartExpand : boolean;
		isAutoExpand(arg1 : StructureViewTreeElement) : boolean;
		isSmartExpand() : boolean;
	}
	class ElementInfoProvider {
		isAlwaysShowsPlus(arg1 : StructureViewTreeElement) : boolean;
		isAlwaysLeaf(arg1 : StructureViewTreeElement) : boolean;
	}


	interface ElementInfoProvider extends StructureViewModel {}}

export = StructureViewModel
