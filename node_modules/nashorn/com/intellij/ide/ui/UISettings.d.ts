import UISettingsListener = require('nashorn/com/intellij/ide/ui/UISettingsListener');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import Pair = require('nashorn/com/intellij/openapi/util/Pair');
import Graphics = require('nashorn/java/awt/Graphics');
import SimpleModificationTracker = require('nashorn/com/intellij/openapi/util/SimpleModificationTracker');
import PersistentStateComponent = require('nashorn/com/intellij/openapi/components/PersistentStateComponent');
import SerializationFilter = require('nashorn/com/intellij/util/xmlb/SerializationFilter');

declare class UISettings {
	static TABS_NONE : number;
	FONT_FACE : string;
	FONT_SIZE : number;
	RECENT_FILES_LIMIT : number;
	CONSOLE_COMMAND_HISTORY_LIMIT : number;
	EDITOR_TAB_LIMIT : number;
	ANIMATE_WINDOWS : boolean;
	ANIMATION_SPEED : number;
	ANIMATION_DURATION : number;
	SHOW_TOOL_WINDOW_NUMBERS : boolean;
	HIDE_TOOL_STRIPES : boolean;
	WIDESCREEN_SUPPORT : boolean;
	LEFT_HORIZONTAL_SPLIT : boolean;
	RIGHT_HORIZONTAL_SPLIT : boolean;
	SHOW_EDITOR_TOOLTIP : boolean;
	SHOW_MEMORY_INDICATOR : boolean;
	ALLOW_MERGE_BUTTONS : boolean;
	SHOW_MAIN_TOOLBAR : boolean;
	SHOW_STATUS_BAR : boolean;
	SHOW_NAVIGATION_BAR : boolean;
	ALWAYS_SHOW_WINDOW_BUTTONS : boolean;
	CYCLE_SCROLLING : boolean;
	SCROLL_TAB_LAYOUT_IN_EDITOR : boolean;
	HIDE_TABS_IF_NEED : boolean;
	SHOW_CLOSE_BUTTON : boolean;
	EDITOR_TAB_PLACEMENT : number;
	HIDE_KNOWN_EXTENSION_IN_TABS : boolean;
	SHOW_ICONS_IN_QUICK_NAVIGATION : boolean;
	CLOSE_NON_MODIFIED_FILES_FIRST : boolean;
	ACTIVATE_MRU_EDITOR_ON_CLOSE : boolean;
	ACTIVATE_RIGHT_EDITOR_ON_CLOSE : boolean;
	ANTIALIASING_IN_EDITOR : boolean;
	MOVE_MOUSE_ON_DEFAULT_BUTTON : boolean;
	ENABLE_ALPHA_MODE : boolean;
	ALPHA_MODE_DELAY : number;
	ALPHA_MODE_RATIO : number;
	MAX_CLIPBOARD_CONTENTS : number;
	OVERRIDE_NONIDEA_LAF_FONTS : boolean;
	SHOW_ICONS_IN_MENUS : boolean;
	DISABLE_MNEMONICS : boolean;
	DISABLE_MNEMONICS_IN_CONTROLS : boolean;
	USE_SMALL_LABELS_ON_TABS : boolean;
	SORT_LOOKUP_ELEMENTS_LEXICOGRAPHICALLY : boolean;
	MAX_LOOKUP_WIDTH2 : number;
	MAX_LOOKUP_LIST_HEIGHT : number;
	HIDE_NAVIGATION_ON_FOCUS_LOSS : boolean;
	DND_WITH_PRESSED_ALT_ONLY : boolean;
	FILE_COLORS_IN_PROJECT_VIEW : boolean;
	DEFAULT_AUTOSCROLL_TO_SOURCE : boolean;
	PRESENTATION_MODE : boolean;
	PRESENTATION_MODE_FONT_SIZE : number;
	MARK_MODIFIED_TABS_WITH_ASTERISK : boolean;
	SHOW_TABS_TOOLTIPS : boolean;
	SHOW_DIRECTORY_FOR_NON_UNIQUE_FILENAMES : boolean;
	NAVIGATE_TO_PREVIEW : boolean;
	static instance : UISettings;
	static shadowInstance : UISettings;
	state : UISettings;
	static remoteDesktopConnected : boolean;
	constructor();
	static getInstance() : UISettings;
	static getShadowInstance() : UISettings;
	tweakPlatformDefaults() : void;
	addUISettingsListener(arg1 : UISettingsListener) : void;
	addUISettingsListener(arg1 : UISettingsListener, arg2 : Disposable) : void;
	fireUISettingsChanged() : void;
	removeUISettingsListener(arg1 : UISettingsListener) : void;
	setSystemFontFaceAndSize() : void;
	static getSystemFontFaceAndSize() : Pair<string, number>;
	static hasDefaultFontSetting(arg1 : UISettings) : boolean;
	static setupAntialiasing(arg1 : Graphics) : void;
	static isRemoteDesktopConnected() : boolean;
}


declare interface UISettings extends SimpleModificationTracker, PersistentStateComponent<UISettings> {}

declare module UISettings {
	class FontFilter {
		constructor();
	}


	interface FontFilter extends SerializationFilter {}}

export = UISettings
