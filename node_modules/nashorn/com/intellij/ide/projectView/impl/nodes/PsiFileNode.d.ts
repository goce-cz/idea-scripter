import Collection = require('nashorn/java/util/Collection');
import AbstractTreeNode = require('nashorn/com/intellij/ide/util/treeView/AbstractTreeNode');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import Comparable = require('nashorn/java/lang/Comparable');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import ViewSettings = require('nashorn/com/intellij/ide/projectView/ViewSettings');
import BasePsiNode = require('nashorn/com/intellij/ide/projectView/impl/nodes/BasePsiNode');
import NavigatableWithText = require('nashorn/com/intellij/pom/NavigatableWithText');

declare class PsiFileNode {
	childrenImpl : Collection<AbstractTreeNode>;
	virtualFile : VirtualFile;
	weight : number;
	title : string;
	typeSortKey : Comparable;
	constructor(arg1 : Project, arg2 : PsiFile, arg3 : ViewSettings);
	b() : boolean;
	c() : boolean;
	d() : VirtualFile;
	static extension(arg1 : PsiFile) : string;
}


declare interface PsiFileNode extends BasePsiNode<PsiFile>, NavigatableWithText {}

declare module PsiFileNode {
	class ExtensionSortKey {
		constructor(arg1 : string);
	}


	interface ExtensionSortKey extends Comparable {}}

export = PsiFileNode
