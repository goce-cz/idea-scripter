import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Icon = require('nashorn/javax/swing/Icon');
import Map = require('nashorn/java/util/Map');
import PsiDirectory = require('nashorn/com/intellij/psi/PsiDirectory');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import CreateFileFromTemplateDialog = require('nashorn/com/intellij/ide/actions/CreateFileFromTemplateDialog');
import DataContext = require('nashorn/com/intellij/openapi/actionSystem/DataContext');
import PsiNameIdentifierOwner = require('nashorn/com/intellij/psi/PsiNameIdentifierOwner');
import AnAction = require('nashorn/com/intellij/openapi/actionSystem/AnAction');

declare class CreateFromTemplateAction<T extends PsiElement> {
	constructor(arg1 : string, arg2 : string, arg3 : Icon);
	postProcess(arg1 : T, arg2 : string, arg3 : Map<string, string>) : void;
	createFile(arg1 : string, arg2 : string, arg3 : PsiDirectory) : T;
	buildDialog(arg1 : Project, arg2 : PsiDirectory, arg3 : CreateFileFromTemplateDialog.Builder) : void;
	getDefaultTemplateName(arg1 : PsiDirectory) : string;
	getDefaultTemplateProperty() : string;
	isAvailable(arg1 : DataContext) : boolean;
	getActionName(arg1 : PsiDirectory, arg2 : string, arg3 : string) : string;
	getErrorTitle() : string;
	static moveCaretAfterNameIdentifier(arg1 : PsiNameIdentifierOwner) : void;
}


declare interface CreateFromTemplateAction<T extends PsiElement> extends AnAction {}
export = CreateFromTemplateAction
