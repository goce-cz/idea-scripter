import JComponent = require('nashorn/javax/swing/JComponent');
import JTextField = require('nashorn/javax/swing/JTextField');
import TemplateKindCombo = require('nashorn/com/intellij/ide/actions/TemplateKindCombo');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import DialogWrapper = require('nashorn/com/intellij/openapi/ui/DialogWrapper');
import Object = require('nashorn/java/lang/Object');
import Map = require('nashorn/java/util/Map');
import InputValidator = require('nashorn/com/intellij/openapi/ui/InputValidator');
import Icon = require('nashorn/javax/swing/Icon');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');

declare class CreateFileFromTemplateDialog {
	preferredFocusedComponent : JComponent;
	getNameField() : JTextField;
	getKindCombo() : TemplateKindCombo;
	a() : string;
	setTemplateKindComponentsVisible(arg1 : boolean) : void;
	static createDialog(arg1 : Project) : CreateFileFromTemplateDialog.Builder;
}


declare interface CreateFileFromTemplateDialog extends DialogWrapper {}

declare module CreateFileFromTemplateDialog {
	class FileCreator<T> extends Object {
		createFile(arg1 : string, arg2 : string) : T;
		getActionName(arg1 : string, arg2 : string) : string;
	}
	class Builder extends Object {
		customProperties : Map<string, string>;
		setTitle(arg1 : string) : CreateFileFromTemplateDialog.Builder;
		setValidator(arg1 : InputValidator) : CreateFileFromTemplateDialog.Builder;
		addKind(arg1 : string, arg2 : Icon, arg3 : string) : CreateFileFromTemplateDialog.Builder;
		show<T extends PsiElement>(arg1 : string, arg2 : string, arg3 : CreateFileFromTemplateDialog.FileCreator<T>) : T;
		getCustomProperties() : Map<string, string>;
	}
	class BuilderImpl {
		customProperties : Map<string, string>;
		constructor(arg1 : CreateFileFromTemplateDialog, arg2 : Project);
	}


	interface BuilderImpl extends CreateFileFromTemplateDialog.Builder {}}

export = CreateFileFromTemplateDialog
