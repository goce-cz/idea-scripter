import PomModelAspect = require('nashorn/com/intellij/pom/PomModelAspect');
import Class = require('nashorn/java/lang/Class');
import Set = require('nashorn/java/util/Set');
import PomModelListener = require('nashorn/com/intellij/pom/event/PomModelListener');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import PomTransaction = require('nashorn/com/intellij/pom/PomTransaction');
import UserDataHolder = require('nashorn/com/intellij/openapi/util/UserDataHolder');

declare class PomModel {
	getModelAspect<T extends PomModelAspect>(arg1 : Class<T>) : T;
	registerAspect(arg1 : Class<PomModelAspect>, arg2 : PomModelAspect, arg3 : Set<PomModelAspect>) : void;
	addModelListener(arg1 : PomModelListener) : void;
	addModelListener(arg1 : PomModelListener, arg2 : Disposable) : void;
	removeModelListener(arg1 : PomModelListener) : void;
	runTransaction(arg1 : PomTransaction) : void;
}


declare interface PomModel extends UserDataHolder {}
export = PomModel
