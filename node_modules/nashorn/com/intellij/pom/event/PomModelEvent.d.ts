import Set = require('nashorn/java/util/Set');
import PomModelAspect = require('nashorn/com/intellij/pom/PomModelAspect');
import PomModel = require('nashorn/com/intellij/pom/PomModel');
import PomChangeSet = require('nashorn/com/intellij/pom/event/PomChangeSet');
import EventObject = require('nashorn/java/util/EventObject');

declare class PomModelEvent {
	changedAspects : Set<PomModelAspect>;
	source : PomModel;
	constructor(arg1 : PomModel);
	getChangedAspects() : Set<PomModelAspect>;
	registerChangeSet(arg1 : PomModelAspect, arg2 : PomChangeSet) : void;
	registerChangeSetIfAbsent<T extends PomChangeSet>(arg1 : PomModelAspect, arg2 : T) : T;
	getChangeSet(arg1 : PomModelAspect) : PomChangeSet;
	merge(arg1 : PomModelEvent) : void;
}


declare interface PomModelEvent extends EventObject {}
export = PomModelEvent
