import Object = require('nashorn/java/lang/Object');
import NotificationDisplayType = require('nashorn/com/intellij/notification/NotificationDisplayType');
import Iterable = require('nashorn/java/lang/Iterable');
import MessageType = require('nashorn/com/intellij/openapi/ui/MessageType');
import Notification = require('nashorn/com/intellij/notification/Notification');
import NotificationType = require('nashorn/com/intellij/notification/NotificationType');
import NotificationListener = require('nashorn/com/intellij/notification/NotificationListener');

declare class NotificationGroup extends Object {
	displayId : string;
	displayType : NotificationDisplayType;
	logByDefault : boolean;
	toolWindowId : string;
	static allRegisteredGroups : Iterable<NotificationGroup>;
	constructor(arg1 : string, arg2 : NotificationDisplayType, arg3 : boolean);
	constructor(arg1 : string, arg2 : NotificationDisplayType, arg3 : boolean, arg4 : string);
	static balloonGroup(arg1 : string) : NotificationGroup;
	static logOnlyGroup(arg1 : string) : NotificationGroup;
	static toolWindowGroup(arg1 : string, arg2 : string, arg3 : boolean) : NotificationGroup;
	static toolWindowGroup(arg1 : string, arg2 : string) : NotificationGroup;
	getDisplayId() : string;
	createNotification(arg1 : string, arg2 : MessageType) : Notification;
	createNotification(arg1 : string, arg2 : NotificationType) : Notification;
	createNotification(arg1 : string, arg2 : string, arg3 : NotificationType, arg4 : NotificationListener) : Notification;
	getDisplayType() : NotificationDisplayType;
	isLogByDefault() : boolean;
	getToolWindowId() : string;
	static findRegisteredGroup(arg1 : string) : NotificationGroup;
	static getAllRegisteredGroups() : Iterable<NotificationGroup>;
}

export = NotificationGroup
