import Object = require('nashorn/java/lang/Object');
import ExtensionPointName = require('nashorn/com/intellij/openapi/extensions/ExtensionPointName');
import Expression = require('nashorn/com/intellij/codeInsight/template/Expression');
import ExpressionContext = require('nashorn/com/intellij/codeInsight/template/ExpressionContext');
import Result = require('nashorn/com/intellij/codeInsight/template/Result');
import LookupElement = require('nashorn/com/intellij/codeInsight/lookup/LookupElement');
import TemplateContextType = require('nashorn/com/intellij/codeInsight/template/TemplateContextType');

declare class Macro extends Object {
	static EP_NAME : ExtensionPointName<Macro>;
	name : string;
	presentableName : string;
	defaultValue : string;
	constructor();
	getName() : string;
	getPresentableName() : string;
	getDefaultValue() : string;
	calculateResult(arg1 : Expression[], arg2 : ExpressionContext) : Result;
	calculateQuickResult(arg1 : Expression[], arg2 : ExpressionContext) : Result;
	calculateLookupItems(arg1 : Expression[], arg2 : ExpressionContext) : LookupElement[];
	isAcceptableInContext(arg1 : TemplateContextType) : boolean;
}

export = Macro
