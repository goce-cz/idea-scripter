import Expression = require('nashorn/com/intellij/codeInsight/template/Expression');
import Cloneable = require('nashorn/java/lang/Cloneable');

declare class Variable {
	expressionString : string;
	expression : Expression;
	defaultValueString : string;
	defaultValueExpression : Expression;
	name : string;
	alwaysStopAt : boolean;
	constructor(arg1 : string, arg2 : Expression, arg3 : Expression, arg4 : boolean, arg5 : boolean);
	constructor(arg1 : string, arg2 : string, arg3 : string, arg4 : boolean);
	getExpressionString() : string;
	setExpressionString(arg1 : string) : void;
	getExpression() : Expression;
	getDefaultValueString() : string;
	setDefaultValueString(arg1 : string) : void;
	getDefaultValueExpression() : Expression;
	getName() : string;
	isAlwaysStopAt() : boolean;
	setAlwaysStopAt(arg1 : boolean) : void;
	skipOnStart() : boolean;
}


declare interface Variable extends Cloneable {}
export = Variable
