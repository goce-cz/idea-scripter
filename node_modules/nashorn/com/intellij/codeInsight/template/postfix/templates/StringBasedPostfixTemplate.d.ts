import PostfixTemplateExpressionSelector = require('nashorn/com/intellij/codeInsight/template/postfix/templates/PostfixTemplateExpressionSelector');
import TemplateManager = require('nashorn/com/intellij/codeInsight/template/TemplateManager');
import Template = require('nashorn/com/intellij/codeInsight/template/Template');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import PostfixTemplateWithExpressionSelector = require('nashorn/com/intellij/codeInsight/template/postfix/templates/PostfixTemplateWithExpressionSelector');

declare class StringBasedPostfixTemplate {
	constructor(arg1 : string, arg2 : string, arg3 : PostfixTemplateExpressionSelector);
	createTemplate(arg1 : TemplateManager, arg2 : string) : Template;
	setVariables(arg1 : Template, arg2 : PsiElement) : void;
	getTemplateString(arg1 : PsiElement) : string;
	shouldAddExpressionToContext() : boolean;
	shouldReformat() : boolean;
	shouldRemoveParent() : boolean;
}


declare interface StringBasedPostfixTemplate extends PostfixTemplateWithExpressionSelector {}
export = StringBasedPostfixTemplate
