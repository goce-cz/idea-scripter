import Object = require('nashorn/java/lang/Object');
import ExtensionPointName = require('nashorn/com/intellij/openapi/extensions/ExtensionPointName');
import List = require('nashorn/java/util/List');
import TemplateToken = require('nashorn/com/intellij/codeInsight/template/emmet/tokens/TemplateToken');
import GenerationNode = require('nashorn/com/intellij/codeInsight/template/emmet/nodes/GenerationNode');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');

declare class ZenCodingFilter extends Object {
	static EP_NAME : ExtensionPointName<ZenCodingFilter>;
	suffix : string;
	displayName : string;
	static instances : List<ZenCodingFilter>;
	constructor();
	filterText(arg1 : string, arg2 : TemplateToken) : string;
	filterNode(arg1 : GenerationNode) : GenerationNode;
	getSuffix() : string;
	isMyContext(arg1 : PsiElement) : boolean;
	isAppliedByDefault(arg1 : PsiElement) : boolean;
	getDisplayName() : string;
	static getInstances() : List<ZenCodingFilter>;
}

export = ZenCodingFilter
