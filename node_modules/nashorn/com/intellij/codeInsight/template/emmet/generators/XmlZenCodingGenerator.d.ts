import TemplateToken = require('nashorn/com/intellij/codeInsight/template/emmet/tokens/TemplateToken');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import XmlTag = require('nashorn/com/intellij/psi/xml/XmlTag');
import Map = require('nashorn/java/util/Map');
import ZenCodingGenerator = require('nashorn/com/intellij/codeInsight/template/emmet/generators/ZenCodingGenerator');

declare class XmlZenCodingGenerator {
	constructor();
	a(arg1 : TemplateToken, arg2 : boolean, arg3 : PsiElement) : string;
	toString(arg1 : XmlTag, arg2 : Map<string, string>, arg3 : boolean, arg4 : PsiElement) : string;
	buildAttributesString(arg1 : Map<string, string>, arg2 : boolean, arg3 : number, arg4 : number, arg5 : string) : string;
}


declare interface XmlZenCodingGenerator extends ZenCodingGenerator {}
export = XmlZenCodingGenerator
