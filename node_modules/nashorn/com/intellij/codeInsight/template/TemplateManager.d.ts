import Object = require('nashorn/java/lang/Object');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import Template = require('nashorn/com/intellij/codeInsight/template/Template');
import TemplateEditingListener = require('nashorn/com/intellij/codeInsight/template/TemplateEditingListener');
import Map = require('nashorn/java/util/Map');
import PairProcessor = require('nashorn/com/intellij/util/PairProcessor');

declare class TemplateManager extends Object {
	constructor();
	static getInstance(arg1 : Project) : TemplateManager;
	startTemplate(arg1 : Editor, arg2 : Template) : void;
	startTemplate(arg1 : Editor, arg2 : string, arg3 : Template) : void;
	startTemplate(arg1 : Editor, arg2 : Template, arg3 : TemplateEditingListener) : void;
	startTemplate(arg1 : Editor, arg2 : Template, arg3 : boolean, arg4 : Map<string, string>, arg5 : TemplateEditingListener) : void;
	startTemplate(arg1 : Editor, arg2 : Template, arg3 : TemplateEditingListener, arg4 : PairProcessor<string, string>) : void;
	startTemplate(arg1 : Editor, arg2 : string) : boolean;
	createTemplate(arg1 : string, arg2 : string) : Template;
	createTemplate(arg1 : string, arg2 : string, arg3 : string) : Template;
	getActiveTemplate(arg1 : Editor) : Template;
}

export = TemplateManager
