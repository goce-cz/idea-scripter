import Topic = require('nashorn/com/intellij/util/messages/Topic');
import Runnable = require('nashorn/java/lang/Runnable');
import MessageBus = require('nashorn/com/intellij/util/messages/MessageBus');
import HighlightInfoType = require('nashorn/com/intellij/codeInsight/daemon/impl/HighlightInfoType');
import HighlightSeverity = require('nashorn/com/intellij/lang/annotation/HighlightSeverity');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Color = require('nashorn/java/awt/Color');
import TextAttributes = require('nashorn/com/intellij/openapi/editor/markup/TextAttributes');
import List = require('nashorn/java/util/List');
import Icon = require('nashorn/javax/swing/Icon');
import Collection = require('nashorn/java/util/Collection');
import JDOMExternalizable = require('nashorn/com/intellij/openapi/util/JDOMExternalizable');
import Comparator = require('nashorn/java/util/Comparator');
import Object = require('nashorn/java/lang/Object');
import Element = require('nashorn/org/jdom/Element');
import TObjectIntHashMap = require('nashorn/gnu/trove/TObjectIntHashMap');

declare class SeverityRegistrar {
	static SEVERITIES_CHANGED_TOPIC : Topic<Runnable>;
	severitiesCount : number;
	severityMaxIndex : number;
	constructor(arg1 : MessageBus);
	static registerStandard(arg1 : HighlightInfoType, arg2 : HighlightSeverity) : void;
	static getSeverityRegistrar(arg1 : Project) : SeverityRegistrar;
	registerSeverity(arg1 : SeverityRegistrar.SeverityBasedTextAttributes, arg2 : Color) : void;
	a() : void;
	unregisterSeverity(arg1 : HighlightSeverity) : SeverityRegistrar.SeverityBasedTextAttributes;
	getHighlightInfoTypeBySeverity(arg1 : HighlightSeverity) : HighlightInfoType.HighlightInfoTypeImpl;
	a(arg1 : HighlightSeverity) : SeverityRegistrar.SeverityBasedTextAttributes;
	getTextAttributesBySeverity(arg1 : HighlightSeverity) : TextAttributes;
	static a(arg1 : SeverityRegistrar.OrderMap) : List<HighlightSeverity>;
	getSeveritiesCount() : number;
	getSeverityByIndex(arg1 : number) : HighlightSeverity;
	getSeverityMaxIndex() : number;
	getSeverity(arg1 : string) : HighlightSeverity;
	b() : List<string>;
	getRendererIconByIndex(arg1 : number) : Icon;
	isSeverityValid(arg1 : string) : boolean;
	static a(arg1 : HighlightSeverity, arg2 : HighlightSeverity, arg3 : SeverityRegistrar.OrderMap) : number;
	c() : SeverityRegistrar.OrderMap;
	static a(arg1 : List<HighlightSeverity>) : SeverityRegistrar.OrderMap;
	d() : List<HighlightSeverity>;
	setOrder(arg1 : List<HighlightSeverity>) : void;
	getSeverityIdx(arg1 : HighlightSeverity) : number;
	isDefaultSeverity(arg1 : HighlightSeverity) : boolean;
	static isGotoBySeverityEnabled(arg1 : HighlightSeverity) : boolean;
	allRegisteredAttributes() : Collection<SeverityRegistrar.SeverityBasedTextAttributes>;
	standardSeverities() : Collection<HighlightInfoType>;
}


declare interface SeverityRegistrar extends JDOMExternalizable, Comparator<HighlightSeverity> {}

declare module SeverityRegistrar {
	class SeverityBasedTextAttributes extends Object {
		attributes : TextAttributes;
		type : HighlightInfoType.HighlightInfoTypeImpl;
		severity : HighlightSeverity;
		constructor(arg1 : Element);
		constructor(arg1 : TextAttributes, arg2 : HighlightInfoType.HighlightInfoTypeImpl);
		getAttributes() : TextAttributes;
		getType() : HighlightInfoType.HighlightInfoTypeImpl;
		a(arg1 : Element) : void;
		getSeverity() : HighlightSeverity;
	}
	class OrderMap {
		a(arg1 : HighlightSeverity, arg2 : number) : number;
	}


	interface OrderMap extends TObjectIntHashMap<HighlightSeverity> {}}

export = SeverityRegistrar
