import Object = require('nashorn/java/lang/Object');
import HighlightSeverity = require('nashorn/com/intellij/lang/annotation/HighlightSeverity');
import TextAttributesKey = require('nashorn/com/intellij/openapi/editor/colors/TextAttributesKey');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Icon = require('nashorn/javax/swing/Icon');
import HighlightDisplayKey = require('nashorn/com/intellij/codeInsight/daemon/HighlightDisplayKey');
import Element = require('nashorn/org/jdom/Element');

declare class HighlightInfoType extends Object {
	static UNUSED_SYMBOL_SHORT_NAME : string;
	static UNUSED_SYMBOL_DISPLAY_NAME : string;
	static UNUSED_SYMBOL_ID : string;
	static ERROR : HighlightInfoType;
	static WARNING : HighlightInfoType;
	static INFO : HighlightInfoType;
	static WEAK_WARNING : HighlightInfoType;
	static INFORMATION : HighlightInfoType;
	static WRONG_REF : HighlightInfoType;
	static GENERIC_WARNINGS_OR_ERRORS_FROM_SERVER : HighlightInfoType;
	static DUPLICATE_FROM_SERVER : HighlightInfoType;
	static UNUSED_SYMBOL : HighlightInfoType;
	static DEPRECATED : HighlightInfoType;
	static SYMBOL_TYPE_SEVERITY : HighlightSeverity;
	static LOCAL_VARIABLE : HighlightInfoType;
	static INSTANCE_FIELD : HighlightInfoType;
	static STATIC_FIELD : HighlightInfoType;
	static STATIC_FINAL_FIELD : HighlightInfoType;
	static PARAMETER : HighlightInfoType;
	static METHOD_CALL : HighlightInfoType;
	static METHOD_DECLARATION : HighlightInfoType;
	static CONSTRUCTOR_CALL : HighlightInfoType;
	static CONSTRUCTOR_DECLARATION : HighlightInfoType;
	static STATIC_METHOD : HighlightInfoType;
	static ABSTRACT_METHOD : HighlightInfoType;
	static INHERITED_METHOD : HighlightInfoType;
	static CLASS_NAME : HighlightInfoType;
	static ANONYMOUS_CLASS_NAME : HighlightInfoType;
	static INTERFACE_NAME : HighlightInfoType;
	static ENUM_NAME : HighlightInfoType;
	static TYPE_PARAMETER_NAME : HighlightInfoType;
	static ABSTRACT_CLASS_NAME : HighlightInfoType;
	static ANNOTATION_NAME : HighlightInfoType;
	static ANNOTATION_ATTRIBUTE_NAME : HighlightInfoType;
	static REASSIGNED_LOCAL_VARIABLE : HighlightInfoType;
	static REASSIGNED_PARAMETER : HighlightInfoType;
	static IMPLICIT_ANONYMOUS_CLASS_PARAMETER : HighlightInfoType;
	static TODO : HighlightInfoType;
	static UNHANDLED_EXCEPTION : HighlightInfoType;
	static INJECTED_FRAGMENT_SEVERITY : HighlightSeverity;
	static INJECTED_LANGUAGE_FRAGMENT : HighlightInfoType;
	static INJECTED_LANGUAGE_BACKGROUND : HighlightInfoType;
	static ELEMENT_UNDER_CARET_SEVERITY : HighlightSeverity;
	static ELEMENT_UNDER_CARET_READ : HighlightInfoType;
	static ELEMENT_UNDER_CARET_WRITE : HighlightInfoType;
	attributesKey : TextAttributesKey;
	getSeverity(arg1 : PsiElement) : HighlightSeverity;
	getAttributesKey() : TextAttributesKey;
}


declare module HighlightInfoType {
	class Iconable extends Object {
		icon : Icon;
		getIcon() : Icon;
	}
	class HighlightInfoTypeSeverityByKey {
		attributesKey : TextAttributesKey;
		severityKey : HighlightDisplayKey;
		constructor(arg1 : HighlightDisplayKey, arg2 : TextAttributesKey);
		getSeverityKey() : HighlightDisplayKey;
	}


	interface HighlightInfoTypeSeverityByKey extends HighlightInfoType {}	class HighlightInfoTypeImpl {
		attributesKey : TextAttributesKey;
		constructor(arg1 : HighlightSeverity, arg2 : TextAttributesKey);
		writeExternal(arg1 : Element) : void;
	}


	interface HighlightInfoTypeImpl extends HighlightInfoType {}}

export = HighlightInfoType
