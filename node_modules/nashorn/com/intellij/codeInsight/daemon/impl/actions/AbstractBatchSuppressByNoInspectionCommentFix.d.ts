import ThreeState = require('nashorn/com/intellij/util/ThreeState');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Language = require('nashorn/com/intellij/lang/Language');
import List = require('nashorn/java/util/List');
import InjectionAwareSuppressQuickFix = require('nashorn/com/intellij/codeInspection/InjectionAwareSuppressQuickFix');
import Iconable = require('nashorn/com/intellij/openapi/util/Iconable');

declare class AbstractBatchSuppressByNoInspectionCommentFix {
	shouldBeAppliedToInjectionHost : ThreeState;
	name : string;
	text : string;
	familyName : string;
	constructor(arg1 : string, arg2 : boolean);
	getContainer(arg1 : PsiElement) : PsiElement;
	getText() : string;
	setText(arg1 : string) : void;
	startInWriteAction() : boolean;
	replaceSuppressionComment(arg1 : PsiElement) : void;
	createSuppression(arg1 : Project, arg2 : PsiElement, arg3 : PsiElement) : void;
	getCommentLanguage(arg1 : PsiElement) : Language;
	invoke(arg1 : Project, arg2 : PsiElement) : void;
	replaceSuppressionComments(arg1 : PsiElement) : boolean;
	getCommentsFor(arg1 : PsiElement) : List<PsiElement>;
}


declare interface AbstractBatchSuppressByNoInspectionCommentFix extends InjectionAwareSuppressQuickFix, Iconable {}
export = AbstractBatchSuppressByNoInspectionCommentFix
