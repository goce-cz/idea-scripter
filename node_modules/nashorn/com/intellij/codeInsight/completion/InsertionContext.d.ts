import Object = require('nashorn/java/lang/Object');
import OffsetKey = require('nashorn/com/intellij/codeInsight/completion/OffsetKey');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import Document = require('nashorn/com/intellij/openapi/editor/Document');
import OffsetMap = require('nashorn/com/intellij/codeInsight/completion/OffsetMap');
import LookupElement = require('nashorn/com/intellij/codeInsight/lookup/LookupElement');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Runnable = require('nashorn/java/lang/Runnable');
import CommonCodeStyleSettings = require('nashorn/com/intellij/psi/codeStyle/CommonCodeStyleSettings');

declare class InsertionContext extends Object {
	static TAIL_OFFSET : OffsetKey;
	tailOffset : number;
	file : PsiFile;
	editor : Editor;
	document : Document;
	offsetMap : OffsetMap;
	startOffset : number;
	completionChar : string;
	elements : LookupElement[];
	project : Project;
	selectionEndOffset : number;
	laterRunnable : Runnable;
	codeStyleSettings : CommonCodeStyleSettings;
	constructor(arg1 : OffsetMap, arg2 : string, arg3 : LookupElement[], arg4 : PsiFile, arg5 : Editor, arg6 : boolean);
	setTailOffset(arg1 : number) : void;
	getTailOffset() : number;
	getFile() : PsiFile;
	getEditor() : Editor;
	commitDocument() : void;
	getDocument() : Document;
	getOffset(arg1 : OffsetKey) : number;
	getOffsetMap() : OffsetMap;
	trackOffset(arg1 : number, arg2 : boolean) : OffsetKey;
	getStartOffset() : number;
	getCompletionChar() : string;
	getElements() : LookupElement[];
	getProject() : Project;
	getSelectionEndOffset() : number;
	getLaterRunnable() : Runnable;
	setLaterRunnable(arg1 : Runnable) : void;
	setAddCompletionChar(arg1 : boolean) : void;
	shouldAddCompletionChar() : boolean;
	getCodeStyleSettings() : CommonCodeStyleSettings;
}

export = InsertionContext
