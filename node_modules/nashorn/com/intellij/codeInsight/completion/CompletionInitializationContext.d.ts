import Object = require('nashorn/java/lang/Object');
import OffsetKey = require('nashorn/com/intellij/codeInsight/completion/OffsetKey');
import Language = require('nashorn/com/intellij/lang/Language');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import Caret = require('nashorn/com/intellij/openapi/editor/Caret');
import CompletionType = require('nashorn/com/intellij/codeInsight/completion/CompletionType');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import OffsetMap = require('nashorn/com/intellij/codeInsight/completion/OffsetMap');

declare class CompletionInitializationContext extends Object {
	static START_OFFSET : OffsetKey;
	static SELECTION_END_OFFSET : OffsetKey;
	static IDENTIFIER_END_OFFSET : OffsetKey;
	static DUMMY_IDENTIFIER : string;
	static DUMMY_IDENTIFIER_TRIMMED : string;
	positionLanguage : Language;
	dummyIdentifier : string;
	editor : Editor;
	caret : Caret;
	completionType : CompletionType;
	project : Project;
	file : PsiFile;
	offsetMap : OffsetMap;
	startOffset : number;
	selectionEndOffset : number;
	identifierEndOffset : number;
	replacementOffset : number;
	invocationCount : number;
	constructor(arg1 : Editor, arg2 : Caret, arg3 : PsiFile, arg4 : CompletionType, arg5 : number);
	static calcSelectionEnd(arg1 : Caret) : number;
	static calcStartOffset(arg1 : Caret) : number;
	static calcDefaultIdentifierEnd(arg1 : Editor, arg2 : number) : number;
	setDummyIdentifier(arg1 : string) : void;
	getPositionLanguage() : Language;
	getDummyIdentifier() : string;
	getEditor() : Editor;
	getCaret() : Caret;
	getCompletionType() : CompletionType;
	getProject() : Project;
	getFile() : PsiFile;
	getOffsetMap() : OffsetMap;
	getStartOffset() : number;
	getSelectionEndOffset() : number;
	getIdentifierEndOffset() : number;
	getReplacementOffset() : number;
	getInvocationCount() : number;
	setReplacementOffset(arg1 : number) : void;
}

export = CompletionInitializationContext
