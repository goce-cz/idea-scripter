import Object = require('nashorn/java/lang/Object');
import ExtensionPointName = require('nashorn/com/intellij/openapi/extensions/ExtensionPointName');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import FileType = require('nashorn/com/intellij/openapi/fileTypes/FileType');
import Enum = require('nashorn/java/lang/Enum');

declare class TypedHandlerDelegate extends Object {
	static EP_NAME : ExtensionPointName<TypedHandlerDelegate>;
	constructor();
	checkAutoPopup(arg1 : string, arg2 : Project, arg3 : Editor, arg4 : PsiFile) : TypedHandlerDelegate.Result;
	beforeCharTyped(arg1 : string, arg2 : Project, arg3 : Editor, arg4 : PsiFile, arg5 : FileType) : TypedHandlerDelegate.Result;
	charTyped(arg1 : string, arg2 : Project, arg3 : Editor, arg4 : PsiFile) : TypedHandlerDelegate.Result;
}


declare module TypedHandlerDelegate {
	class Result {
		static STOP : TypedHandlerDelegate.Result;
		static CONTINUE : TypedHandlerDelegate.Result;
		static DEFAULT : TypedHandlerDelegate.Result;
	}


	interface Result extends Enum<TypedHandlerDelegate.Result> {}}

export = TypedHandlerDelegate
