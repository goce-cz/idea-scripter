import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Object = require('nashorn/java/lang/Object');
import List = require('nashorn/java/util/List');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');
import Consumer = require('nashorn/com/intellij/util/Consumer');

declare class HighlightUsagesHandlerBase<T extends PsiElement> extends Object {
	targets : List<T>;
	featureId : string;
	readUsages : List<TextRange>;
	writeUsages : List<TextRange>;
	highlightUsages() : void;
	performHighlighting() : void;
	buildStatusText(arg1 : string, arg2 : number) : void;
	getTargets() : List<T>;
	getFeatureId() : string;
	selectTargets(arg1 : List<T>, arg2 : Consumer<List<T>>) : void;
	computeUsages(arg1 : List<T>) : void;
	addOccurrence(arg1 : PsiElement) : void;
	getReadUsages() : List<TextRange>;
	getWriteUsages() : List<TextRange>;
}

export = HighlightUsagesHandlerBase
