import InsertHandler = require('nashorn/com/intellij/codeInsight/completion/InsertHandler');
import AutoCompletionPolicy = require('nashorn/com/intellij/codeInsight/lookup/AutoCompletionPolicy');
import Icon = require('nashorn/javax/swing/Icon');
import TailType = require('nashorn/com/intellij/codeInsight/TailType');
import LookupElement = require('nashorn/com/intellij/codeInsight/lookup/LookupElement');

declare class MutableLookupElement<T> {
	insertHandler : InsertHandler<MutableLookupElement>;
	bold : boolean;
	constructor();
	setBold() : MutableLookupElement<T>;
	setAutoCompletionPolicy(arg1 : AutoCompletionPolicy) : MutableLookupElement<T>;
	setIcon(arg1 : Icon) : MutableLookupElement<T>;
	setPriority(arg1 : number) : MutableLookupElement<T>;
	setPresentableText(arg1 : string) : MutableLookupElement<T>;
	setTypeText(arg1 : string) : MutableLookupElement<T>;
	setTailText(arg1 : string, arg2 : boolean) : MutableLookupElement<T>;
	setTailType(arg1 : TailType) : MutableLookupElement<T>;
	setCaseSensitive(arg1 : boolean) : MutableLookupElement<T>;
	addLookupStrings(arg1 : string[]) : MutableLookupElement<T>;
	setInsertHandler(arg1 : InsertHandler<LookupElement>) : MutableLookupElement<T>;
	getInsertHandler() : InsertHandler<MutableLookupElement>;
	isBold() : boolean;
}


declare interface MutableLookupElement<T> extends LookupElement {}
export = MutableLookupElement
