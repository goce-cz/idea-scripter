import Object = require('nashorn/java/lang/Object');
import Icon = require('nashorn/javax/swing/Icon');
import List = require('nashorn/java/util/List');
import Color = require('nashorn/java/awt/Color');
import LookupElement = require('nashorn/com/intellij/codeInsight/lookup/LookupElement');

declare class LookupElementPresentation extends Object {
	real : boolean;
	icon : Icon;
	typeIcon : Icon;
	itemText : string;
	tailFragments : List<LookupElementPresentation.TextFragment>;
	tailText : string;
	typeText : string;
	strikeout : boolean;
	tailGrayed : boolean;
	tailForeground : Color;
	itemTextBold : boolean;
	itemTextUnderlined : boolean;
	itemTextForeground : Color;
	typeGrayed : boolean;
	constructor();
	setIcon(arg1 : Icon) : void;
	setItemText(arg1 : string) : void;
	setStrikeout(arg1 : boolean) : void;
	setItemTextBold(arg1 : boolean) : void;
	setTailText(arg1 : string) : void;
	clearTail() : void;
	appendTailText(arg1 : string, arg2 : boolean) : void;
	appendTailText(arg1 : LookupElementPresentation.TextFragment) : void;
	setTailText(arg1 : string, arg2 : boolean) : void;
	setTailText(arg1 : string, arg2 : Color) : void;
	setTypeText(arg1 : string) : void;
	setTypeText(arg1 : string, arg2 : Icon) : void;
	isReal() : boolean;
	getIcon() : Icon;
	getTypeIcon() : Icon;
	getItemText() : string;
	getTailFragments() : List<LookupElementPresentation.TextFragment>;
	getTailText() : string;
	getTypeText() : string;
	isStrikeout() : boolean;
	isTailGrayed() : boolean;
	getTailForeground() : Color;
	isItemTextBold() : boolean;
	isItemTextUnderlined() : boolean;
	setItemTextUnderlined(arg1 : boolean) : void;
	getItemTextForeground() : Color;
	setItemTextForeground(arg1 : Color) : void;
	copyFrom(arg1 : LookupElementPresentation) : void;
	isTypeGrayed() : boolean;
	setTypeGrayed(arg1 : boolean) : void;
	static renderElement(arg1 : LookupElement) : LookupElementPresentation;
}


declare module LookupElementPresentation {
	class TextFragment extends Object {
		text : string;
		grayed : boolean;
		foregroundColor : Color;
		constructor(arg1 : string, arg2 : boolean, arg3 : Color);
		isGrayed() : boolean;
		getForegroundColor() : Color;
	}
}

export = LookupElementPresentation
