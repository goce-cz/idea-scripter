import Object = require('nashorn/java/lang/Object');
import LookupElement = require('nashorn/com/intellij/codeInsight/lookup/LookupElement');
import Rectangle = require('nashorn/java/awt/Rectangle');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import List = require('nashorn/java/util/List');
import LookupListener = require('nashorn/com/intellij/codeInsight/lookup/LookupListener');
import PrefixMatcher = require('nashorn/com/intellij/codeInsight/completion/PrefixMatcher');

declare class Lookup extends Object {
	static NORMAL_SELECT_CHAR : string;
	static REPLACE_SELECT_CHAR : string;
	static COMPLETE_STATEMENT_SELECT_CHAR : string;
	static AUTO_INSERT_SELECT_CHAR : string;
	lookupStart : number;
	currentItem : LookupElement;
	bounds : Rectangle;
	currentItemBounds : Rectangle;
	positionedAboveCaret : boolean;
	psiElement : PsiElement;
	editor : Editor;
	psiFile : PsiFile;
	completion : boolean;
	items : List<LookupElement>;
	focused : boolean;
	selectionTouched : boolean;
	advertisements : List<string>;
	getLookupStart() : number;
	getCurrentItem() : LookupElement;
	addLookupListener(arg1 : LookupListener) : void;
	removeLookupListener(arg1 : LookupListener) : void;
	getBounds() : Rectangle;
	getCurrentItemBounds() : Rectangle;
	isPositionedAboveCaret() : boolean;
	getPsiElement() : PsiElement;
	getEditor() : Editor;
	getPsiFile() : PsiFile;
	isCompletion() : boolean;
	getItems() : List<LookupElement>;
	isFocused() : boolean;
	itemPattern(arg1 : LookupElement) : string;
	itemMatcher(arg1 : LookupElement) : PrefixMatcher;
	isSelectionTouched() : boolean;
	getAdvertisements() : List<string>;
}

export = Lookup
