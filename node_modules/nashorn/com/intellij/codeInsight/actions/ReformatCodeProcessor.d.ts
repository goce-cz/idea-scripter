import Project = require('nashorn/com/intellij/openapi/project/Project');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import SelectionModel = require('nashorn/com/intellij/openapi/editor/SelectionModel');
import AbstractLayoutCodeProcessor = require('nashorn/com/intellij/codeInsight/actions/AbstractLayoutCodeProcessor');
import Module = require('nashorn/com/intellij/openapi/module/Module');
import PsiDirectory = require('nashorn/com/intellij/psi/PsiDirectory');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');
import Runnable = require('nashorn/java/lang/Runnable');
import Document = require('nashorn/com/intellij/openapi/editor/Document');
import CharSequence = require('nashorn/java/lang/CharSequence');
import Collection = require('nashorn/java/util/Collection');

declare class ReformatCodeProcessor {
	static COMMAND_NAME : string;
	constructor(arg1 : Project, arg2 : boolean);
	constructor(arg1 : PsiFile, arg2 : SelectionModel);
	constructor(arg1 : AbstractLayoutCodeProcessor, arg2 : SelectionModel);
	constructor(arg1 : AbstractLayoutCodeProcessor, arg2 : boolean);
	constructor(arg1 : Project, arg2 : Module, arg3 : boolean);
	constructor(arg1 : Project, arg2 : PsiDirectory, arg3 : boolean, arg4 : boolean);
	constructor(arg1 : Project, arg2 : PsiFile, arg3 : TextRange, arg4 : boolean);
	constructor(arg1 : PsiFile, arg2 : boolean);
	constructor(arg1 : Project, arg2 : PsiFile[], arg3 : Runnable, arg4 : boolean);
	constructor(arg1 : Project, arg2 : PsiFile[], arg3 : string, arg4 : Runnable, arg5 : boolean);
	a(arg1 : Document, arg2 : CharSequence) : void;
	a(arg1 : boolean, arg2 : PsiFile) : Collection<TextRange>;
}


declare interface ReformatCodeProcessor extends AbstractLayoutCodeProcessor {}
export = ReformatCodeProcessor
