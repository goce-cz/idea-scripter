import Object = require('nashorn/java/lang/Object');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import CommonCodeStyleSettings = require('nashorn/com/intellij/psi/codeStyle/CommonCodeStyleSettings');
import FileType = require('nashorn/com/intellij/openapi/fileTypes/FileType');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import InsertionContext = require('nashorn/com/intellij/codeInsight/completion/InsertionContext');

declare class TailType extends Object {
	static UNKNOWN : TailType;
	static NONE : TailType;
	static SEMICOLON : TailType;
	static EXCLAMATION : TailType;
	static COMMA : TailType;
	static SPACE : TailType;
	static INSERT_SPACE : TailType;
	static HUMBLE_SPACE_BEFORE_WORD : TailType;
	static DOT : TailType;
	static CASE_COLON : TailType;
	static COND_EXPR_COLON : TailType;
	static EQ : TailType;
	static LPARENTH : TailType;
	constructor();
	static insertChar(arg1 : Editor, arg2 : number, arg3 : string) : number;
	static insertChar(arg1 : Editor, arg2 : number, arg3 : string, arg4 : boolean) : number;
	static moveCaret(arg1 : Editor, arg2 : number, arg3 : number) : number;
	static getLocalCodeStyleSettings(arg1 : Editor, arg2 : number) : CommonCodeStyleSettings;
	static getFileType(arg1 : Editor) : FileType;
	static getFile(arg1 : Editor) : PsiFile;
	processTail(arg1 : Editor, arg2 : number) : number;
	static createSimpleTailType(arg1 : string) : TailType;
	isApplicable(arg1 : InsertionContext) : boolean;
}


declare module TailType {
	class TailTypeEQ {
		constructor();
		isSpaceAroundAssignmentOperators(arg1 : Editor, arg2 : number) : boolean;
	}


	interface TailTypeEQ extends TailType {}}

export = TailType
