import StubElement = require('nashorn/com/intellij/psi/stubs/StubElement');
import Key = require('nashorn/com/intellij/openapi/util/Key');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import Language = require('nashorn/com/intellij/lang/Language');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import PsiManagerEx = require('nashorn/com/intellij/psi/impl/PsiManagerEx');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import IStubElementType = require('nashorn/com/intellij/psi/stubs/IStubElementType');
import PsiFileImpl = require('nashorn/com/intellij/psi/impl/source/PsiFileImpl');
import StubTree = require('nashorn/com/intellij/psi/stubs/StubTree');
import FileElement = require('nashorn/com/intellij/psi/impl/source/tree/FileElement');
import ArrayFactory = require('nashorn/com/intellij/util/ArrayFactory');
import TokenSet = require('nashorn/com/intellij/psi/tree/TokenSet');
import Class = require('nashorn/java/lang/Class');
import ASTDelegatePsiElement = require('nashorn/com/intellij/extapi/psi/ASTDelegatePsiElement');

declare class StubBasedPsiElementBase<T extends StubElement> {
	static CREATION_TRACE : Key<string>;
	static ourTraceStubAstBinding : boolean;
	node : ASTNode;
	language : Language;
	containingFile : PsiFile;
	writable : boolean;
	valid : boolean;
	manager : PsiManagerEx;
	project : Project;
	physical : boolean;
	context : PsiElement;
	parent : PsiElement;
	elementType : IStubElementType;
	stub : T;
	constructor(arg1 : T, arg2 : IStubElementType);
	constructor(arg1 : ASTNode);
	a(arg1 : PsiFileImpl, arg2 : StubTree, arg3 : FileElement) : ASTNode;
	a(arg1 : FileElement) : string;
	a(arg1 : PsiFileImpl, arg2 : FileElement, arg3 : StubTree) : ASTNode;
	setNode(arg1 : ASTNode) : void;
	getParentByStub() : PsiElement;
	getParentByTree() : PsiElement;
	getElementType() : IStubElementType;
	getStub() : T;
	setStub(arg1 : T) : void;
	getStubOrPsiChild<Psi extends PsiElement>(arg1 : IStubElementType<StubElement, Psi>) : Psi;
	getRequiredStubOrPsiChild<Stub extends StubElement, Psi extends PsiElement>(arg1 : IStubElementType<Stub, Psi>) : Psi;
	getStubOrPsiChildren<Stub extends StubElement, Psi extends PsiElement>(arg1 : IStubElementType<Stub, Psi>, arg2 : Psi[]) : Psi[];
	getStubOrPsiChildren<Stub extends StubElement, Psi extends PsiElement>(arg1 : IStubElementType<Stub, Psi>, arg2 : ArrayFactory<Psi>) : Psi[];
	getStubOrPsiChildren<Psi extends PsiElement>(arg1 : TokenSet, arg2 : Psi[]) : Psi[];
	getStubOrPsiChildren<Psi extends PsiElement>(arg1 : TokenSet, arg2 : ArrayFactory<Psi>) : Psi[];
	getStubOrPsiParentOfType<E extends PsiElement>(arg1 : Class<E>) : E;
	getStubOrPsiParent() : PsiElement;
}


declare interface StubBasedPsiElementBase<T extends StubElement> extends ASTDelegatePsiElement {}
export = StubBasedPsiElementBase
