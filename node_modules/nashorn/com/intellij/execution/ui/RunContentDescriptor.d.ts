import Runnable = require('nashorn/java/lang/Runnable');
import AnAction = require('nashorn/com/intellij/openapi/actionSystem/AnAction');
import ExecutionConsole = require('nashorn/com/intellij/execution/ui/ExecutionConsole');
import Icon = require('nashorn/javax/swing/Icon');
import ProcessHandler = require('nashorn/com/intellij/execution/process/ProcessHandler');
import JComponent = require('nashorn/javax/swing/JComponent');
import Content = require('nashorn/com/intellij/ui/content/Content');
import Computable = require('nashorn/com/intellij/openapi/util/Computable');
import RunnerLayoutUi = require('nashorn/com/intellij/execution/ui/RunnerLayoutUi');
import RunProfile = require('nashorn/com/intellij/execution/configurations/RunProfile');
import ExecutionResult = require('nashorn/com/intellij/execution/ExecutionResult');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');

declare class RunContentDescriptor {
	activationCallback : Runnable;
	restartActions : AnAction[];
	executionConsole : ExecutionConsole;
	icon : Icon;
	processHandler : ProcessHandler;
	contentReuseProhibited : boolean;
	component : JComponent;
	displayName : string;
	helpId : string;
	attachedContent : Content;
	restarter : Runnable;
	activateToolWindowWhenAdded : boolean;
	reuseToolWindowActivation : boolean;
	executionId : number;
	preferredFocusComputable : Computable<JComponent>;
	autoFocusContent : boolean;
	runnerLayoutUi : RunnerLayoutUi;
	constructor(arg1 : ExecutionConsole, arg2 : ProcessHandler, arg3 : JComponent, arg4 : string, arg5 : Icon, arg6 : Runnable);
	constructor(arg1 : ExecutionConsole, arg2 : ProcessHandler, arg3 : JComponent, arg4 : string, arg5 : Icon);
	constructor(arg1 : ExecutionConsole, arg2 : ProcessHandler, arg3 : JComponent, arg4 : string);
	constructor(arg1 : RunProfile, arg2 : ExecutionResult, arg3 : RunnerLayoutUi);
	getActivationCallback() : Runnable;
	getRestartActions() : AnAction[];
	getExecutionConsole() : ExecutionConsole;
	getIcon() : Icon;
	getProcessHandler() : ProcessHandler;
	setProcessHandler(arg1 : ProcessHandler) : void;
	isContentReuseProhibited() : boolean;
	getComponent() : JComponent;
	getDisplayName() : string;
	getHelpId() : string;
	getAttachedContent() : Content;
	setAttachedContent(arg1 : Content) : void;
	getRestarter() : Runnable;
	setRestarter(arg1 : Runnable) : void;
	isActivateToolWindowWhenAdded() : boolean;
	setActivateToolWindowWhenAdded(arg1 : boolean) : void;
	isReuseToolWindowActivation() : boolean;
	setReuseToolWindowActivation(arg1 : boolean) : void;
	getExecutionId() : number;
	setExecutionId(arg1 : number) : void;
	getPreferredFocusComputable() : Computable<JComponent>;
	setFocusComputable(arg1 : Computable<JComponent>) : void;
	isAutoFocusContent() : boolean;
	setAutoFocusContent(arg1 : boolean) : void;
	getRunnerLayoutUi() : RunnerLayoutUi;
}


declare interface RunContentDescriptor extends Disposable {}
export = RunContentDescriptor
