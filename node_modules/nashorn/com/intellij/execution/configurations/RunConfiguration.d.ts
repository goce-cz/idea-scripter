import DataKey = require('nashorn/com/intellij/openapi/actionSystem/DataKey');
import ConfigurationType = require('nashorn/com/intellij/execution/configurations/ConfigurationType');
import ConfigurationFactory = require('nashorn/com/intellij/execution/configurations/ConfigurationFactory');
import SettingsEditor = require('nashorn/com/intellij/openapi/options/SettingsEditor');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import ConfigurationInfoProvider = require('nashorn/com/intellij/execution/configurations/ConfigurationInfoProvider');
import ConfigurationPerRunnerSettings = require('nashorn/com/intellij/execution/configurations/ConfigurationPerRunnerSettings');
import ProgramRunner = require('nashorn/com/intellij/execution/runners/ProgramRunner');
import RunProfile = require('nashorn/com/intellij/execution/configurations/RunProfile');
import JDOMExternalizable = require('nashorn/com/intellij/openapi/util/JDOMExternalizable');
import Cloneable = require('nashorn/java/lang/Cloneable');

declare class RunConfiguration {
	static DATA_KEY : DataKey<RunConfiguration>;
	type : ConfigurationType;
	factory : ConfigurationFactory;
	configurationEditor : SettingsEditor<RunConfiguration>;
	project : Project;
	uniqueID : number;
	getType() : ConfigurationType;
	getFactory() : ConfigurationFactory;
	setName(arg1 : string) : void;
	getConfigurationEditor() : SettingsEditor<RunConfiguration>;
	getProject() : Project;
	createRunnerSettings(arg1 : ConfigurationInfoProvider) : ConfigurationPerRunnerSettings;
	getRunnerSettingsEditor(arg1 : ProgramRunner) : SettingsEditor<ConfigurationPerRunnerSettings>;
	getUniqueID() : number;
	checkConfiguration() : void;
}


declare interface RunConfiguration extends RunProfile, JDOMExternalizable, Cloneable {}
export = RunConfiguration
