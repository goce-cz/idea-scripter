import Object = require('nashorn/java/lang/Object');
import Icon = require('nashorn/javax/swing/Icon');
import ConfigurationType = require('nashorn/com/intellij/execution/configurations/ConfigurationType');
import RunConfiguration = require('nashorn/com/intellij/execution/configurations/RunConfiguration');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import RunManager = require('nashorn/com/intellij/execution/RunManager');
import Key = require('nashorn/com/intellij/openapi/util/Key');
import BeforeRunTask = require('nashorn/com/intellij/execution/BeforeRunTask');

declare class ConfigurationFactory extends Object {
	static ADD_ICON : Icon;
	name : string;
	addIcon : Icon;
	icon : Icon;
	type : ConfigurationType;
	configurationSingletonByDefault : boolean;
	createConfiguration(arg1 : string, arg2 : RunConfiguration) : RunConfiguration;
	isApplicable(arg1 : Project) : boolean;
	createTemplateConfiguration(arg1 : Project) : RunConfiguration;
	createTemplateConfiguration(arg1 : Project, arg2 : RunManager) : RunConfiguration;
	getName() : string;
	getAddIcon() : Icon;
	getIcon(arg1 : RunConfiguration) : Icon;
	getIcon() : Icon;
	getType() : ConfigurationType;
	configureBeforeRunTaskDefaults(arg1 : Key<BeforeRunTask>, arg2 : BeforeRunTask) : void;
	isConfigurationSingletonByDefault() : boolean;
	canConfigurationBeSingleton() : boolean;
}

export = ConfigurationFactory
