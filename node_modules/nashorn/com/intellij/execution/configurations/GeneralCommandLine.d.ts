import File = require('nashorn/java/io/File');
import Map = require('nashorn/java/util/Map');
import ParametersList = require('nashorn/com/intellij/execution/configurations/ParametersList');
import Charset = require('nashorn/java/nio/charset/Charset');
import List = require('nashorn/java/util/List');
import Platform = require('nashorn/com/intellij/execution/Platform');
import Process = require('nashorn/java/lang/Process');
import UserDataHolder = require('nashorn/com/intellij/openapi/util/UserDataHolder');
import THashMap = require('nashorn/gnu/trove/THashMap');

declare class GeneralCommandLine {
	exePath : string;
	workDirectory : File;
	environment : Map<string, string>;
	envParams : Map<string, string>;
	passParentEnvironment : boolean;
	parentEnvironment : Map<string, string>;
	parametersList : ParametersList;
	charset : Charset;
	redirectErrorStream : boolean;
	commandLineString : string;
	constructor();
	constructor(arg1 : string[]);
	constructor(arg1 : List<string>);
	getExePath() : string;
	setExePath(arg1 : string) : void;
	getWorkDirectory() : File;
	withWorkDirectory(arg1 : string) : GeneralCommandLine;
	withWorkDirectory(arg1 : File) : GeneralCommandLine;
	setWorkDirectory(arg1 : string) : void;
	setWorkDirectory(arg1 : File) : void;
	getEnvironment() : Map<string, string>;
	withEnvironment(arg1 : Map<string, string>) : GeneralCommandLine;
	getEnvParams() : Map<string, string>;
	setEnvParams(arg1 : Map<string, string>) : void;
	setPassParentEnvironment(arg1 : boolean) : void;
	setPassParentEnvs(arg1 : boolean) : void;
	isPassParentEnvironment() : boolean;
	getParentEnvironment() : Map<string, string>;
	addParameters(arg1 : string[]) : void;
	addParameters(arg1 : List<string>) : void;
	addParameter(arg1 : string) : void;
	getParametersList() : ParametersList;
	getCharset() : Charset;
	withCharset(arg1 : Charset) : GeneralCommandLine;
	setCharset(arg1 : Charset) : void;
	isRedirectErrorStream() : boolean;
	setRedirectErrorStream(arg1 : boolean) : void;
	getCommandLineString() : string;
	getCommandLineString(arg1 : string) : string;
	getCommandLineList(arg1 : string) : List<string>;
	getPreparedCommandLine(arg1 : Platform) : string;
	createProcess() : Process;
	startProcess(arg1 : List<string>) : Process;
	checkWorkingDirectory() : void;
	setupEnvironment(arg1 : Map<string, string>) : void;
	static inescapableQuote(arg1 : string) : string;
}


declare interface GeneralCommandLine extends UserDataHolder {}

declare module GeneralCommandLine {
	class MyTHashMap {
	}


	interface MyTHashMap extends THashMap<string, string> {}}

export = GeneralCommandLine
