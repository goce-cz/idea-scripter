import Set = require('nashorn/java/util/Set');
import Charset = require('nashorn/java/nio/charset/Charset');
import File = require('nashorn/java/io/File');
import Pattern = require('nashorn/java/util/regex/Pattern');
import List = require('nashorn/java/util/List');
import JDOMExternalizable = require('nashorn/com/intellij/openapi/util/JDOMExternalizable');

declare class LogFileOptions {
	name : string;
	pathPattern : string;
	paths : Set<string>;
	enabled : boolean;
	skipContent : boolean;
	showAll : boolean;
	charset : Charset;
	constructor();
	constructor(arg1 : string, arg2 : string, arg3 : boolean, arg4 : boolean, arg5 : boolean);
	constructor(arg1 : string, arg2 : string, arg3 : Charset, arg4 : boolean, arg5 : boolean, arg6 : boolean);
	getName() : string;
	getPathPattern() : string;
	getPaths() : Set<string>;
	static collectMatchedFiles(arg1 : File, arg2 : Pattern, arg3 : List<File>) : void;
	isEnabled() : boolean;
	isSkipContent() : boolean;
	setEnable(arg1 : boolean) : void;
	setName(arg1 : string) : void;
	setPathPattern(arg1 : string) : void;
	setSkipContent(arg1 : boolean) : void;
	setShowAll(arg1 : boolean) : void;
	setLast(arg1 : boolean) : void;
	isShowAll() : boolean;
	getCharset() : Charset;
	setCharset(arg1 : Charset) : void;
	static areEqual(arg1 : LogFileOptions, arg2 : LogFileOptions) : boolean;
}


declare interface LogFileOptions extends JDOMExternalizable {}
export = LogFileOptions
