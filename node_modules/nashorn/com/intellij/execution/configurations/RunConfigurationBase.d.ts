import ConfigurationFactory = require('nashorn/com/intellij/execution/configurations/ConfigurationFactory');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import ConfigurationType = require('nashorn/com/intellij/execution/configurations/ConfigurationType');
import Icon = require('nashorn/javax/swing/Icon');
import ArrayList = require('nashorn/java/util/ArrayList');
import PredefinedLogFile = require('nashorn/com/intellij/execution/configurations/PredefinedLogFile');
import LogFileOptions = require('nashorn/com/intellij/execution/configurations/LogFileOptions');
import ProgramRunner = require('nashorn/com/intellij/execution/runners/ProgramRunner');
import RunnerSettings = require('nashorn/com/intellij/execution/configurations/RunnerSettings');
import ConfigurationPerRunnerSettings = require('nashorn/com/intellij/execution/configurations/ConfigurationPerRunnerSettings');
import AdditionalTabComponentManager = require('nashorn/com/intellij/execution/configurations/AdditionalTabComponentManager');
import ProcessHandler = require('nashorn/com/intellij/execution/process/ProcessHandler');
import LogConsole = require('nashorn/com/intellij/diagnostic/logging/LogConsole');
import UserDataHolderBase = require('nashorn/com/intellij/openapi/util/UserDataHolderBase');
import RunConfiguration = require('nashorn/com/intellij/execution/configurations/RunConfiguration');
import TargetAwareRunProfile = require('nashorn/com/intellij/execution/configurations/TargetAwareRunProfile');

declare class RunConfigurationBase {
	uniqueID : number;
	factory : ConfigurationFactory;
	project : Project;
	type : ConfigurationType;
	icon : Icon;
	name : string;
	predefinedLogFiles : ArrayList<PredefinedLogFile>;
	allLogFiles : ArrayList<LogFileOptions>;
	logFiles : ArrayList<LogFileOptions>;
	saveOutputToFile : boolean;
	showConsoleOnStdOut : boolean;
	showConsoleOnStdErr : boolean;
	outputFilePath : string;
	checkRunnerSettings(arg1 : ProgramRunner, arg2 : RunnerSettings, arg3 : ConfigurationPerRunnerSettings) : void;
	checkSettingsBeforeRun() : void;
	getOptionsForPredefinedLogFile(arg1 : PredefinedLogFile) : LogFileOptions;
	removeAllPredefinedLogFiles() : void;
	addPredefinedLogFile(arg1 : PredefinedLogFile) : void;
	getPredefinedLogFiles() : ArrayList<PredefinedLogFile>;
	getAllLogFiles() : ArrayList<LogFileOptions>;
	getLogFiles() : ArrayList<LogFileOptions>;
	addLogFile(arg1 : string, arg2 : string, arg3 : boolean) : void;
	addLogFile(arg1 : string, arg2 : string, arg3 : boolean, arg4 : boolean, arg5 : boolean) : void;
	removeAllLogFiles() : void;
	createAdditionalTabComponents(arg1 : AdditionalTabComponentManager, arg2 : ProcessHandler) : void;
	customizeLogConsole(arg1 : LogConsole) : void;
	isNewSerializationUsed() : boolean;
	isSaveOutputToFile() : boolean;
	setSaveOutputToFile(arg1 : boolean) : void;
	isShowConsoleOnStdOut() : boolean;
	setShowConsoleOnStdOut(arg1 : boolean) : void;
	isShowConsoleOnStdErr() : boolean;
	setShowConsoleOnStdErr(arg1 : boolean) : void;
	getOutputFilePath() : string;
	setFileOutputPath(arg1 : string) : void;
	collectOutputFromProcessHandler() : boolean;
	excludeCompileBeforeLaunchOption() : boolean;
}


declare interface RunConfigurationBase extends UserDataHolderBase, RunConfiguration, TargetAwareRunProfile {}
export = RunConfigurationBase
