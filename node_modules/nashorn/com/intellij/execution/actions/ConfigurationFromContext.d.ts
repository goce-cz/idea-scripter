import Object = require('nashorn/java/lang/Object');
import Comparator = require('nashorn/java/util/Comparator');
import RunnerAndConfigurationSettings = require('nashorn/com/intellij/execution/RunnerAndConfigurationSettings');
import RunConfiguration = require('nashorn/com/intellij/execution/configurations/RunConfiguration');
import ConfigurationType = require('nashorn/com/intellij/execution/configurations/ConfigurationType');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import ConfigurationContext = require('nashorn/com/intellij/execution/actions/ConfigurationContext');
import Runnable = require('nashorn/java/lang/Runnable');
import Class = require('nashorn/java/lang/Class');
import RunConfigurationProducer = require('nashorn/com/intellij/execution/actions/RunConfigurationProducer');

declare class ConfigurationFromContext extends Object {
	static COMPARATOR : Comparator<ConfigurationFromContext>;
	static NAME_COMPARATOR : Comparator<ConfigurationFromContext>;
	configurationSettings : RunnerAndConfigurationSettings;
	configuration : RunConfiguration;
	configurationType : ConfigurationType;
	sourceElement : PsiElement;
	constructor();
	getConfigurationSettings() : RunnerAndConfigurationSettings;
	setConfigurationSettings(arg1 : RunnerAndConfigurationSettings) : void;
	getConfiguration() : RunConfiguration;
	getConfigurationType() : ConfigurationType;
	getSourceElement() : PsiElement;
	onFirstRun(arg1 : ConfigurationContext, arg2 : Runnable) : void;
	isPreferredTo(arg1 : ConfigurationFromContext) : boolean;
	isProducedBy(arg1 : Class<RunConfigurationProducer>) : boolean;
}

export = ConfigurationFromContext
