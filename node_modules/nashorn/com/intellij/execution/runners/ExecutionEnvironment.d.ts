import Project = require('nashorn/com/intellij/openapi/project/Project');
import ExecutionTarget = require('nashorn/com/intellij/execution/ExecutionTarget');
import RunProfile = require('nashorn/com/intellij/execution/configurations/RunProfile');
import RunnerAndConfigurationSettings = require('nashorn/com/intellij/execution/RunnerAndConfigurationSettings');
import RunContentDescriptor = require('nashorn/com/intellij/execution/ui/RunContentDescriptor');
import ProgramRunner = require('nashorn/com/intellij/execution/runners/ProgramRunner');
import RunnerSettings = require('nashorn/com/intellij/execution/configurations/RunnerSettings');
import ConfigurationPerRunnerSettings = require('nashorn/com/intellij/execution/configurations/ConfigurationPerRunnerSettings');
import RunProfileState = require('nashorn/com/intellij/execution/configurations/RunProfileState');
import Executor = require('nashorn/com/intellij/execution/Executor');
import DataContext = require('nashorn/com/intellij/openapi/actionSystem/DataContext');
import UserDataHolderBase = require('nashorn/com/intellij/openapi/util/UserDataHolderBase');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');

declare class ExecutionEnvironment {
	project : Project;
	executionTarget : ExecutionTarget;
	runProfile : RunProfile;
	runnerAndConfigurationSettings : RunnerAndConfigurationSettings;
	contentToReuse : RunContentDescriptor;
	runnerId : string;
	runner : ProgramRunner<any>;
	runnerSettings : RunnerSettings;
	configurationSettings : ConfigurationPerRunnerSettings;
	state : RunProfileState;
	executionId : number;
	executor : Executor;
	dataContext : DataContext;
	constructor();
	constructor(arg1 : Executor, arg2 : ProgramRunner, arg3 : RunnerAndConfigurationSettings, arg4 : Project);
	constructor(arg1 : Executor, arg2 : ProgramRunner, arg3 : ExecutionTarget, arg4 : RunnerAndConfigurationSettings, arg5 : Project);
	constructor(arg1 : RunProfile, arg2 : Executor, arg3 : Project, arg4 : RunnerSettings);
	getProject() : Project;
	getExecutionTarget() : ExecutionTarget;
	getRunProfile() : RunProfile;
	getRunnerAndConfigurationSettings() : RunnerAndConfigurationSettings;
	getContentToReuse() : RunContentDescriptor;
	setContentToReuse(arg1 : RunContentDescriptor) : void;
	getRunnerId() : string;
	getRunner() : ProgramRunner<any>;
	getRunnerSettings() : RunnerSettings;
	getConfigurationSettings() : ConfigurationPerRunnerSettings;
	getState() : RunProfileState;
	assignNewExecutionId() : number;
	setExecutionId(arg1 : number) : void;
	getExecutionId() : number;
	getExecutor() : Executor;
	setDataContext(arg1 : DataContext) : void;
	getDataContext() : DataContext;
}


declare interface ExecutionEnvironment extends UserDataHolderBase, Disposable {}

declare module ExecutionEnvironment {
	class CachingDataContext {
		static cacheIfNeed(arg1 : DataContext) : ExecutionEnvironment.CachingDataContext;
	}


	interface CachingDataContext extends DataContext {}}

export = ExecutionEnvironment
