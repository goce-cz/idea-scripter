import RunnerSettings = require('nashorn/com/intellij/execution/configurations/RunnerSettings');
import Object = require('nashorn/java/lang/Object');
import ExtensionPointName = require('nashorn/com/intellij/openapi/extensions/ExtensionPointName');
import RunProfile = require('nashorn/com/intellij/execution/configurations/RunProfile');
import ConfigurationInfoProvider = require('nashorn/com/intellij/execution/configurations/ConfigurationInfoProvider');
import ConfigurationPerRunnerSettings = require('nashorn/com/intellij/execution/configurations/ConfigurationPerRunnerSettings');
import ExecutionResult = require('nashorn/com/intellij/execution/ExecutionResult');
import Executor = require('nashorn/com/intellij/execution/Executor');
import RunConfiguration = require('nashorn/com/intellij/execution/configurations/RunConfiguration');
import SettingsEditor = require('nashorn/com/intellij/openapi/options/SettingsEditor');
import ExecutionEnvironment = require('nashorn/com/intellij/execution/runners/ExecutionEnvironment');
import RunContentDescriptor = require('nashorn/com/intellij/execution/ui/RunContentDescriptor');

declare class ProgramRunner<Settings extends RunnerSettings> extends Object {
	static PROGRAM_RUNNER_EP : ExtensionPointName<ProgramRunner>;
	runnerId : string;
	getRunnerId() : string;
	canRun(arg1 : string, arg2 : RunProfile) : boolean;
	createConfigurationData(arg1 : ConfigurationInfoProvider) : Settings;
	checkConfiguration(arg1 : RunnerSettings, arg2 : ConfigurationPerRunnerSettings) : void;
	onProcessStarted(arg1 : RunnerSettings, arg2 : ExecutionResult) : void;
	getSettingsEditor(arg1 : Executor, arg2 : RunConfiguration) : SettingsEditor<Settings>;
	execute(arg1 : ExecutionEnvironment) : void;
	execute(arg1 : ExecutionEnvironment, arg2 : ProgramRunner.Callback) : void;
}


declare module ProgramRunner {
	class Callback extends Object {
		processStarted(arg1 : RunContentDescriptor) : void;
	}
}

export = ProgramRunner
