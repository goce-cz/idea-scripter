import RunnerSettings = require('nashorn/com/intellij/execution/configurations/RunnerSettings');
import DataKey = require('nashorn/com/intellij/openapi/actionSystem/DataKey');
import RunContentDescriptor = require('nashorn/com/intellij/execution/ui/RunContentDescriptor');
import RunProfileState = require('nashorn/com/intellij/execution/configurations/RunProfileState');
import ExecutionEnvironment = require('nashorn/com/intellij/execution/runners/ExecutionEnvironment');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import BaseProgramRunner = require('nashorn/com/intellij/execution/runners/BaseProgramRunner');

declare class GenericProgramRunner<Settings extends RunnerSettings> {
	static CONTENT_TO_REUSE_DATA_KEY : DataKey<RunContentDescriptor>;
	static CONTENT_TO_REUSE : string;
	constructor();
	doExecute(arg1 : RunProfileState, arg2 : ExecutionEnvironment) : RunContentDescriptor;
	doExecute(arg1 : Project, arg2 : RunProfileState, arg3 : RunContentDescriptor, arg4 : ExecutionEnvironment) : RunContentDescriptor;
}


declare interface GenericProgramRunner<Settings extends RunnerSettings> extends BaseProgramRunner<Settings> {}
export = GenericProgramRunner
