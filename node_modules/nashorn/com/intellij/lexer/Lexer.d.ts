import Object = require('nashorn/java/lang/Object');
import CharSequence = require('nashorn/java/lang/CharSequence');
import IElementType = require('nashorn/com/intellij/psi/tree/IElementType');
import LexerPosition = require('nashorn/com/intellij/lexer/LexerPosition');

declare class Lexer extends Object {
	tokenSequence : CharSequence;
	tokenText : string;
	state : number;
	tokenType : IElementType;
	tokenStart : number;
	tokenEnd : number;
	currentPosition : LexerPosition;
	bufferSequence : CharSequence;
	bufferEnd : number;
	constructor();
	start(arg1 : CharSequence, arg2 : number, arg3 : number, arg4 : number) : void;
	start(arg1 : CharSequence, arg2 : number, arg3 : number) : void;
	start(arg1 : CharSequence) : void;
	getTokenSequence() : CharSequence;
	getTokenText() : string;
	getState() : number;
	getTokenType() : IElementType;
	getTokenStart() : number;
	getTokenEnd() : number;
	advance() : void;
	getCurrentPosition() : LexerPosition;
	restore(arg1 : LexerPosition) : void;
	getBufferSequence() : CharSequence;
	getBufferEnd() : number;
}

export = Lexer
