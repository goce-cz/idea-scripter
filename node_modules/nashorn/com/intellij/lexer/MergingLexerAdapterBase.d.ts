import MergeFunction = require('nashorn/com/intellij/lexer/MergeFunction');
import IElementType = require('nashorn/com/intellij/psi/tree/IElementType');
import Lexer = require('nashorn/com/intellij/lexer/Lexer');
import LexerPosition = require('nashorn/com/intellij/lexer/LexerPosition');
import DelegateLexer = require('nashorn/com/intellij/lexer/DelegateLexer');

declare class MergingLexerAdapterBase {
	mergeFunction : MergeFunction;
	state : number;
	tokenType : IElementType;
	tokenStart : number;
	tokenEnd : number;
	original : Lexer;
	currentPosition : LexerPosition;
	constructor(arg1 : Lexer);
	getMergeFunction() : MergeFunction;
	locateToken() : void;
	getOriginal() : Lexer;
}


declare interface MergingLexerAdapterBase extends DelegateLexer {}

declare module MergingLexerAdapterBase {
	class MyLexerPosition {
		offset : number;
		state : number;
		type : IElementType;
		originalPosition : LexerPosition;
		oldState : number;
		constructor(arg1 : number, arg2 : IElementType, arg3 : LexerPosition, arg4 : number);
		getType() : IElementType;
		getOriginalPosition() : LexerPosition;
		getOldState() : number;
	}


	interface MyLexerPosition extends LexerPosition {}}

export = MergingLexerAdapterBase
