import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');
import ProblemHighlightType = require('nashorn/com/intellij/codeInspection/ProblemHighlightType');
import ProblemGroup = require('nashorn/com/intellij/lang/annotation/ProblemGroup');
import TextAttributesKey = require('nashorn/com/intellij/openapi/editor/colors/TextAttributesKey');
import CommonProblemDescriptor = require('nashorn/com/intellij/codeInspection/CommonProblemDescriptor');

declare class ProblemDescriptor {
	static EMPTY_ARRAY : ProblemDescriptor[];
	psiElement : PsiElement;
	startElement : PsiElement;
	endElement : PsiElement;
	textRangeInElement : TextRange;
	lineNumber : number;
	highlightType : ProblemHighlightType;
	afterEndOfLine : boolean;
	problemGroup : ProblemGroup;
	getPsiElement() : PsiElement;
	getStartElement() : PsiElement;
	getEndElement() : PsiElement;
	getTextRangeInElement() : TextRange;
	getLineNumber() : number;
	getHighlightType() : ProblemHighlightType;
	isAfterEndOfLine() : boolean;
	setTextAttributes(arg1 : TextAttributesKey) : void;
	getProblemGroup() : ProblemGroup;
	setProblemGroup(arg1 : ProblemGroup) : void;
	showTooltip() : boolean;
}


declare interface ProblemDescriptor extends CommonProblemDescriptor {}
export = ProblemDescriptor
