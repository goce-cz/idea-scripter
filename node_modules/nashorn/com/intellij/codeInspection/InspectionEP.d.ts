import ExtensionPointName = require('nashorn/com/intellij/openapi/extensions/ExtensionPointName');
import HighlightDisplayLevel = require('nashorn/com/intellij/codeHighlighting/HighlightDisplayLevel');
import InspectionProfileEntry = require('nashorn/com/intellij/codeInspection/InspectionProfileEntry');
import LanguageExtensionPoint = require('nashorn/com/intellij/lang/LanguageExtensionPoint');

declare class InspectionEP {
	static GLOBAL_INSPECTION : ExtensionPointName<InspectionEP>;
	shortName : string;
	key : string;
	bundle : string;
	displayName : string;
	groupKey : string;
	groupBundle : string;
	groupDisplayName : string;
	groupPath : string;
	enabledByDefault : boolean;
	applyToDialects : boolean;
	cleanupTool : boolean;
	level : string;
	hasStaticDescription : boolean;
	presentation : string;
	defaultLevel : HighlightDisplayLevel;
	defaultShortName : string;
	defaultDisplayName : string;
	defaultGroupDisplayName : string;
	constructor();
	getShortName() : string;
	getDisplayName() : string;
	getGroupDisplayName() : string;
	getGroupPath() : string[];
	getDefaultLevel() : HighlightDisplayLevel;
	getLocalizedString(arg1 : string, arg2 : string) : string;
	instantiateTool() : InspectionProfileEntry;
}


declare interface InspectionEP extends LanguageExtensionPoint, InspectionProfileEntry.DefaultNameProvider {}
export = InspectionEP
