import Object = require('nashorn/java/lang/Object');
import ExtensionPointName = require('nashorn/com/intellij/openapi/extensions/ExtensionPointName');
import Element = require('nashorn/org/jdom/Element');
import Map = require('nashorn/java/util/Map');
import List = require('nashorn/java/util/List');

declare class InspectionElementsMerger extends Object {
	static EP_NAME : ExtensionPointName<InspectionElementsMerger>;
	constructor();
	getMergedToolName() : string;
	getSourceToolNames() : string[];
	writeOldSettings(arg1 : string) : Element;
	getDefaultSeverityLevel(arg1 : string) : string;
	isEnabledByDefault(arg1 : string) : boolean;
	static getMergedMarkerName(arg1 : string) : string;
	markSettingsMerged(arg1 : Map<string, Element>) : boolean;
	areSettingsMerged(arg1 : Map<string, Element>, arg2 : Element) : boolean;
	merge(arg1 : Map<string, Element>) : Element;
	merge(arg1 : Map<string, Element>, arg2 : boolean) : Element;
	static a(arg1 : Element) : string;
	static collectContent(arg1 : Element, arg2 : List<Element>, arg3 : Map<string, Element>) : void;
}

export = InspectionElementsMerger
