import Object = require('nashorn/java/lang/Object');
import InspectionToolWrapper = require('nashorn/com/intellij/codeInspection/ex/InspectionToolWrapper');
import HighlightDisplayLevel = require('nashorn/com/intellij/codeHighlighting/HighlightDisplayLevel');
import JComponent = require('nashorn/javax/swing/JComponent');
import NamedScope = require('nashorn/com/intellij/psi/search/scope/packageSet/NamedScope');
import Project = require('nashorn/com/intellij/openapi/project/Project');

declare class ScopeToolState extends Object {
	scopeName : string;
	tool : InspectionToolWrapper;
	enabled : boolean;
	level : HighlightDisplayLevel;
	additionalConfigPanel : JComponent;
	constructor(arg1 : NamedScope, arg2 : InspectionToolWrapper, arg3 : boolean, arg4 : HighlightDisplayLevel);
	constructor(arg1 : string, arg2 : InspectionToolWrapper, arg3 : boolean, arg4 : HighlightDisplayLevel);
	copy() : ScopeToolState;
	getScope(arg1 : Project) : NamedScope;
	getScopeName() : string;
	getTool() : InspectionToolWrapper;
	isEnabled() : boolean;
	getLevel() : HighlightDisplayLevel;
	setEnabled(arg1 : boolean) : void;
	setLevel(arg1 : HighlightDisplayLevel) : void;
	getAdditionalConfigPanel() : JComponent;
	resetConfigPanel() : void;
	setTool(arg1 : InspectionToolWrapper) : void;
	equalTo(arg1 : ScopeToolState) : boolean;
	scopesChanged() : void;
}

export = ScopeToolState
