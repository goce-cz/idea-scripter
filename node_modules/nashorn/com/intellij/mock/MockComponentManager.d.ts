import MutablePicoContainer = require('nashorn/org/picocontainer/MutablePicoContainer');
import MessageBus = require('nashorn/com/intellij/util/messages/MessageBus');
import PicoContainer = require('nashorn/org/picocontainer/PicoContainer');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import Object = require('nashorn/java/lang/Object');
import Class = require('nashorn/java/lang/Class');
import UserDataHolderBase = require('nashorn/com/intellij/openapi/util/UserDataHolderBase');
import ComponentManager = require('nashorn/com/intellij/openapi/components/ComponentManager');

declare class MockComponentManager {
	picoContainer : MutablePicoContainer;
	messageBus : MessageBus;
	disposed : boolean;
	constructor(arg1 : PicoContainer, arg2 : Disposable);
	a(arg1 : Object) : void;
	registerService<T>(arg1 : Class<T>, arg2 : Class<T>) : void;
	registerService<T>(arg1 : Class<T>) : void;
	registerService<T>(arg1 : Class<T>, arg2 : T) : void;
	addComponent<T>(arg1 : Class<T>, arg2 : T) : void;
}


declare interface MockComponentManager extends UserDataHolderBase, ComponentManager {}
export = MockComponentManager
