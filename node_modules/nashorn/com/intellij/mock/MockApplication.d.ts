import ModalityState = require('nashorn/com/intellij/openapi/application/ModalityState');
import ModalityInvokator = require('nashorn/com/intellij/openapi/application/ModalityInvokator');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import MockComponentManager = require('nashorn/com/intellij/mock/MockComponentManager');
import Application = require('nashorn/com/intellij/openapi/application/Application');

declare class MockApplication {
	static INSTANCES_CREATED : number;
	internal : boolean;
	eAP : boolean;
	dispatchThread : boolean;
	active : boolean;
	readAccessAllowed : boolean;
	writeAccessAllowed : boolean;
	unitTestMode : boolean;
	headlessEnvironment : boolean;
	commandLine : boolean;
	disposeInProgress : boolean;
	restartCapable : boolean;
	startTime : number;
	idleTime : number;
	noneModalityState : ModalityState;
	invokator : ModalityInvokator;
	currentModalityState : ModalityState;
	anyModalityState : ModalityState;
	defaultModalityState : ModalityState;
	constructor(arg1 : Disposable);
}


declare interface MockApplication extends MockComponentManager, Application {}
export = MockApplication
