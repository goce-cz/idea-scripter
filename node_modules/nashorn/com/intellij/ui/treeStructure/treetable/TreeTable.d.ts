import TreeTableModel = require('nashorn/com/intellij/ui/treeStructure/treetable/TreeTableModel');
import TreeTableTree = require('nashorn/com/intellij/ui/treeStructure/treetable/TreeTableTree');
import TreeTableModelAdapter = require('nashorn/com/intellij/ui/treeStructure/treetable/TreeTableModelAdapter');
import Object = require('nashorn/java/lang/Object');
import TreeCellRenderer = require('nashorn/javax/swing/tree/TreeCellRenderer');
import TreePath = require('nashorn/javax/swing/tree/TreePath');
import TreeTableCellRenderer = require('nashorn/com/intellij/ui/treeStructure/treetable/TreeTableCellRenderer');
import JBTable = require('nashorn/com/intellij/ui/table/JBTable');
import ListSelectionModel = require('nashorn/javax/swing/ListSelectionModel');
import ListSelectionListener = require('nashorn/javax/swing/event/ListSelectionListener');
import DefaultTreeSelectionModel = require('nashorn/javax/swing/tree/DefaultTreeSelectionModel');

declare class TreeTable {
	tableModel : TreeTableModel;
	editingRow : number;
	tree : TreeTableTree;
	constructor(arg1 : TreeTableModel);
	setModel(arg1 : TreeTableModel) : void;
	getTableModel() : TreeTableModel;
	setTableModel(arg1 : TreeTableModel) : void;
	adapt(arg1 : TreeTableModel) : TreeTableModelAdapter;
	setRootVisible(arg1 : boolean) : void;
	putTreeClientProperty(arg1 : Object, arg2 : Object) : void;
	setTreeCellRenderer(arg1 : TreeCellRenderer) : void;
	getTree() : TreeTableTree;
	isTreeColumn(arg1 : number) : boolean;
	addSelectedPath(arg1 : TreePath) : void;
	removeSelectedPath(arg1 : TreePath) : void;
	createTableRenderer(arg1 : TreeTableModel) : TreeTableCellRenderer;
	setMinRowHeight(arg1 : number) : void;
}


declare interface TreeTable extends JBTable {}

declare module TreeTable {
	class ListToTreeSelectionModelWrapper {
		constructor();
		getListSelectionModel() : ListSelectionModel;
		createListSelectionListener() : ListSelectionListener;
		updateSelectedPathsFromSelectedRows() : void;
	}


	interface ListToTreeSelectionModelWrapper extends DefaultTreeSelectionModel {}

	module ListToTreeSelectionModelWrapper {
		class ListSelectionHandler {
		}


		interface ListSelectionHandler extends ListSelectionListener {}	}
}

export = TreeTable
