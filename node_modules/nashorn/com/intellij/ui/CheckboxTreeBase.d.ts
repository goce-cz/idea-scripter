import CheckedTreeNode = require('nashorn/com/intellij/ui/CheckedTreeNode');
import CheckboxTreeListener = require('nashorn/com/intellij/ui/CheckboxTreeListener');
import Class = require('nashorn/java/lang/Class');
import Tree = require('nashorn/com/intellij/ui/treeStructure/Tree');
import Object = require('nashorn/java/lang/Object');
import Enum = require('nashorn/java/lang/Enum');
import JCheckBox = require('nashorn/javax/swing/JCheckBox');
import ColoredTreeCellRenderer = require('nashorn/com/intellij/ui/ColoredTreeCellRenderer');
import JTree = require('nashorn/javax/swing/JTree');
import JPanel = require('nashorn/javax/swing/JPanel');
import TreeCellRenderer = require('nashorn/javax/swing/tree/TreeCellRenderer');

declare class CheckboxTreeBase {
	toggleClickCount : number;
	constructor();
	constructor(arg1 : CheckboxTreeBase.CheckboxTreeCellRendererBase, arg2 : CheckedTreeNode);
	constructor(arg1 : CheckboxTreeBase.CheckboxTreeCellRendererBase, arg2 : CheckedTreeNode, arg3 : CheckboxTreeBase.CheckPolicy);
	installRenderer(arg1 : CheckboxTreeBase.CheckboxTreeCellRendererBase) : void;
	toggleNode(arg1 : CheckedTreeNode) : boolean;
	checkNode(arg1 : CheckedTreeNode, arg2 : boolean) : void;
	setNodeState(arg1 : CheckedTreeNode, arg2 : boolean) : void;
	addCheckboxTreeListener(arg1 : CheckboxTreeListener) : void;
	onDoubleClick(arg1 : CheckedTreeNode) : void;
	getCheckedNodes<T>(arg1 : Class<T>, arg2 : Tree.NodeFilter<T>) : T[];
	onNodeStateChanged(arg1 : CheckedTreeNode) : void;
	nodeStateWillChange(arg1 : CheckedTreeNode) : void;
	adjustParents(arg1 : CheckedTreeNode, arg2 : boolean) : void;
}


declare interface CheckboxTreeBase extends Tree {}

declare module CheckboxTreeBase {
	class CheckPolicy extends Object {
		constructor(arg1 : boolean, arg2 : boolean, arg3 : boolean, arg4 : boolean);
	}
	class NodeState {
		static FULL : CheckboxTreeBase.NodeState;
		static CLEAR : CheckboxTreeBase.NodeState;
		static PARTIAL : CheckboxTreeBase.NodeState;
	}


	interface NodeState extends Enum<CheckboxTreeBase.NodeState> {}	class CheckboxTreeCellRendererBase {
		myCheckbox : JCheckBox;
		textRenderer : ColoredTreeCellRenderer;
		checkbox : JCheckBox;
		constructor(arg1 : boolean);
		constructor(arg1 : boolean, arg2 : boolean);
		constructor();
		getNodeStatus(arg1 : CheckedTreeNode) : CheckboxTreeBase.NodeState;
		customizeRenderer(arg1 : JTree, arg2 : Object, arg3 : boolean, arg4 : boolean, arg5 : boolean, arg6 : number, arg7 : boolean) : void;
		customizeCellRenderer(arg1 : JTree, arg2 : Object, arg3 : boolean, arg4 : boolean, arg5 : boolean, arg6 : number, arg7 : boolean) : void;
		getTextRenderer() : ColoredTreeCellRenderer;
		getCheckbox() : JCheckBox;
	}


	interface CheckboxTreeCellRendererBase extends JPanel, TreeCellRenderer {}}

export = CheckboxTreeBase
