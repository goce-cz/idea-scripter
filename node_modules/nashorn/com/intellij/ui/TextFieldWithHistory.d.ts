import List = require('nashorn/java/util/List');
import JTextField = require('nashorn/javax/swing/JTextField');
import DocumentListener = require('nashorn/javax/swing/event/DocumentListener');
import KeyListener = require('nashorn/java/awt/event/KeyListener');
import ComboBox = require('nashorn/com/intellij/openapi/ui/ComboBox');
import Object = require('nashorn/java/lang/Object');
import AbstractListModel = require('nashorn/javax/swing/AbstractListModel');
import ComboBoxModel = require('nashorn/javax/swing/ComboBoxModel');

declare class TextFieldWithHistory {
	history : List<string>;
	text : string;
	textEditor : JTextField;
	constructor();
	constructor(arg1 : boolean);
	addDocumentListener(arg1 : DocumentListener) : void;
	removeDocumentListener(arg1 : DocumentListener) : void;
	addKeyboardListener(arg1 : KeyListener) : void;
	setHistorySize(arg1 : number) : void;
	setHistory(arg1 : List<string>) : void;
	getHistory() : List<string>;
	setText(arg1 : string) : void;
	getText() : string;
	addCurrentTextToHistory() : void;
	selectText() : void;
	getTextEditor() : JTextField;
}


declare interface TextFieldWithHistory extends ComboBox {}

declare module TextFieldWithHistory {
	class TextFieldWithProcessing {
	}


	interface TextFieldWithProcessing extends JTextField {}	class MyModel {
		size : number;
		selectedItem : Object;
		constructor();
		addElement(arg1 : Object) : void;
		insertElementAt(arg1 : Object, arg2 : number) : void;
		fireContentsChanged() : void;
		contains(arg1 : string) : boolean;
		setItems(arg1 : List<string>) : void;
	}


	interface MyModel extends AbstractListModel, ComboBoxModel {}}

export = TextFieldWithHistory
