import StatusText = require('nashorn/com/intellij/util/ui/StatusText');
import ExpandableItemsHandler = require('nashorn/com/intellij/ui/ExpandableItemsHandler');
import TableCell = require('nashorn/com/intellij/ui/TableCell');
import TableModel = require('nashorn/javax/swing/table/TableModel');
import TableColumnModel = require('nashorn/javax/swing/table/TableColumnModel');
import DefaultCellEditor = require('nashorn/javax/swing/DefaultCellEditor');
import TableRowSorter = require('nashorn/javax/swing/table/TableRowSorter');
import JTable = require('nashorn/javax/swing/JTable');
import ComponentWithEmptyText = require('nashorn/com/intellij/util/ui/ComponentWithEmptyText');
import ComponentWithExpandableItems = require('nashorn/com/intellij/ui/ComponentWithExpandableItems');
import Point = require('nashorn/java/awt/Point');
import JTableHeader = require('nashorn/javax/swing/table/JTableHeader');
import DefaultRowSorter = require('nashorn/javax/swing/DefaultRowSorter');
import MouseAdapter = require('nashorn/java/awt/event/MouseAdapter');
import Object = require('nashorn/java/lang/Object');
import Activatable = require('nashorn/com/intellij/util/ui/update/Activatable');
import PropertyChangeListener = require('nashorn/java/beans/PropertyChangeListener');

declare class JBTable {
	static PREFERRED_SCROLLABLE_VIEWPORT_HEIGHT_IN_ROWS : number;
	static COLUMN_RESIZE_AREA_WIDTH : number;
	rowHeight : number;
	empty : boolean;
	emptyText : StatusText;
	expandableItemsHandler : ExpandableItemsHandler<TableCell>;
	striped : boolean;
	surrendersFocusOnKeystroke : boolean;
	constructor();
	constructor(arg1 : TableModel);
	constructor(arg1 : TableModel, arg2 : TableColumnModel);
	setShowColumns(arg1 : boolean) : void;
	repaintViewport() : void;
	isEmpty() : boolean;
	isSortOnUpdates() : boolean;
	setEnableAntialiasing(arg1 : boolean) : void;
	static createBooleanEditor() : DefaultCellEditor;
	resetDefaultFocusTraversalKeys() : void;
	setPaintBusy(arg1 : boolean) : void;
	updateBusy() : void;
	isStriped() : boolean;
	setStriped(arg1 : boolean) : void;
	surrendersFocusOnKeyStroke() : boolean;
	static isTableDecorationSupported() : boolean;
	createRowSorter(arg1 : TableModel) : TableRowSorter<TableModel>;
	setMaxItemsForSizeCalculation(arg1 : number) : void;
}


declare interface JBTable extends JTable, ComponentWithEmptyText, ComponentWithExpandableItems<TableCell> {}

declare module JBTable {
	class JBTableHeader {
		constructor();
		packColumn(arg1 : number) : void;
		getExpandedColumnWidth(arg1 : number) : number;
		getPreferredHeaderWidth(arg1 : number) : number;
		getColumnToPack(arg1 : Point) : number;
		canResize(arg1 : number) : boolean;
	}


	interface JBTableHeader extends JTableHeader {}	class DefaultColumnInfoBasedRowSorter {
		constructor(arg1 : TableModel);
	}


	interface DefaultColumnInfoBasedRowSorter extends TableRowSorter<TableModel> {}

	module DefaultColumnInfoBasedRowSorter {
		class TableRowSorterModelWrapper {
			model : TableModel;
			columnCount : number;
			rowCount : number;
		}


		interface TableRowSorterModelWrapper extends DefaultRowSorter.ModelWrapper<TableModel, number> {}	}
	class MyMouseListener {
	}


	interface MyMouseListener extends MouseAdapter {}	class MyCellEditorRemover {
		constructor();
		activate() : void;
		deactivate() : void;
		tableCellEditorChanged(arg1 : Object, arg2 : Object) : void;
		permanentFocusOwnerChanged() : void;
		removeCellEditor() : void;
	}


	interface MyCellEditorRemover extends Activatable.Adapter, PropertyChangeListener {}}

export = JBTable
