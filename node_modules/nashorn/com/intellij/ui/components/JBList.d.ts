import Dimension = require('nashorn/java/awt/Dimension');
import StatusText = require('nashorn/com/intellij/util/ui/StatusText');
import ExpandableItemsHandler = require('nashorn/com/intellij/ui/ExpandableItemsHandler');
import ListModel = require('nashorn/javax/swing/ListModel');
import Object = require('nashorn/java/lang/Object');
import Collection = require('nashorn/java/util/Collection');
import DefaultListModel = require('nashorn/javax/swing/DefaultListModel');
import NotNullFunction = require('nashorn/com/intellij/util/NotNullFunction');
import JComponent = require('nashorn/javax/swing/JComponent');
import DataProvider = require('nashorn/com/intellij/openapi/actionSystem/DataProvider');
import JList = require('nashorn/javax/swing/JList');
import ComponentWithEmptyText = require('nashorn/com/intellij/util/ui/ComponentWithEmptyText');
import ComponentWithExpandableItems = require('nashorn/com/intellij/ui/ComponentWithExpandableItems');
import DefaultListCellRenderer = require('nashorn/javax/swing/DefaultListCellRenderer');

declare class JBList {
	preferredSize : Dimension;
	empty : boolean;
	itemsCount : number;
	emptyText : StatusText;
	expandableItemsHandler : ExpandableItemsHandler<number>;
	constructor();
	constructor(arg1 : ListModel);
	constructor(arg1 : Object[]);
	constructor(arg1 : Collection);
	static createDefaultListModel(arg1 : Object[]) : DefaultListModel;
	setPaintBusy(arg1 : boolean) : void;
	updateBusy() : void;
	init() : void;
	isEmpty() : boolean;
	getItemsCount() : number;
	setEmptyText(arg1 : string) : void;
	createExpandableItemsHandler() : ExpandableItemsHandler<number>;
	installCellRenderer<T>(arg1 : NotNullFunction<T, JComponent>) : void;
	setDataProvider(arg1 : DataProvider) : void;
	disableEmptyText() : void;
}


declare interface JBList extends JList, ComponentWithEmptyText, ComponentWithExpandableItems<number> {}

declare module JBList {
	class StripedListCellRenderer {
		constructor();
	}


	interface StripedListCellRenderer extends DefaultListCellRenderer {}}

export = JBList
