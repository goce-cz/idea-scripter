import Icon = require('nashorn/javax/swing/Icon');
import LinkListener = require('nashorn/com/intellij/ui/components/labels/LinkListener');
import Rectangle = require('nashorn/java/awt/Rectangle');
import Color = require('nashorn/java/awt/Color');
import Point = require('nashorn/java/awt/Point');
import MouseEvent = require('nashorn/java/awt/event/MouseEvent');
import InputEvent = require('nashorn/java/awt/event/InputEvent');
import JLabel = require('nashorn/javax/swing/JLabel');
import MouseAdapter = require('nashorn/java/awt/event/MouseAdapter');
import MouseMotionListener = require('nashorn/java/awt/event/MouseMotionListener');

declare class LinkLabel<T> {
	visited : boolean;
	constructor();
	constructor(arg1 : string, arg2 : Icon);
	constructor(arg1 : string, arg2 : Icon, arg3 : LinkListener<T>);
	constructor(arg1 : string, arg2 : Icon, arg3 : LinkListener<T>, arg4 : T);
	constructor(arg1 : string, arg2 : Icon, arg3 : LinkListener<T>, arg4 : T, arg5 : string);
	setHoveringIcon(arg1 : Icon) : void;
	setListener(arg1 : LinkListener<T>, arg2 : T) : void;
	doClick() : void;
	isVisited() : boolean;
	getTextBounds() : Rectangle;
	getTextColor() : Color;
	setPaintUnderline(arg1 : boolean) : void;
	setActive(arg1 : boolean) : void;
	onSetActive(arg1 : boolean) : void;
	isInClickableArea(arg1 : Point) : boolean;
	enableUnderline() : void;
	getStatusBarText() : string;
	disableUnderline() : void;
	static setStatusBarText(arg1 : string) : void;
	static clearVisitedHistory() : void;
	getVisited() : Color;
	getActive() : Color;
	getNormal() : Color;
	entered(arg1 : MouseEvent) : void;
	exited(arg1 : MouseEvent) : void;
	pressed(arg1 : MouseEvent) : void;
	doClick(arg1 : InputEvent) : void;
}


declare interface LinkLabel<T> extends JLabel {}

declare module LinkLabel {
	class MyMouseHandler {
	}


	interface MyMouseHandler extends MouseAdapter, MouseMotionListener {}}

export = LinkLabel
