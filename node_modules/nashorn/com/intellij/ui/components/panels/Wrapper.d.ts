import JComponent = require('nashorn/javax/swing/JComponent');
import LayoutManager = require('nashorn/java/awt/LayoutManager');
import JPanel = require('nashorn/javax/swing/JPanel');
import NullableComponent = require('nashorn/com/intellij/openapi/ui/NullableComponent');
import Runnable = require('nashorn/java/lang/Runnable');
import FocusListener = require('nashorn/java/awt/event/FocusListener');

declare class Wrapper {
	null : boolean;
	targetComponent : JComponent;
	constructor();
	constructor(arg1 : JComponent);
	constructor(arg1 : LayoutManager, arg2 : JComponent);
	constructor(arg1 : boolean);
	constructor(arg1 : LayoutManager);
	constructor(arg1 : LayoutManager, arg2 : boolean);
	setContent(arg1 : JComponent) : void;
	requestFocusInternal() : void;
	getTargetComponent() : JComponent;
}


declare interface Wrapper extends JPanel, NullableComponent {}

declare module Wrapper {
	class North {
		constructor(arg1 : JComponent);
	}


	interface North extends Wrapper {}	class FocusHolder {
		constructor();
		constructor(arg1 : JComponent);
		constructor(arg1 : LayoutManager, arg2 : JComponent);
		constructor(arg1 : boolean);
		constructor(arg1 : LayoutManager);
		constructor(arg1 : LayoutManager, arg2 : boolean);
		init() : void;
		requestFocus(arg1 : Runnable) : void;
		processCallback() : void;
	}


	interface FocusHolder extends Wrapper, FocusListener {}}

export = Wrapper
