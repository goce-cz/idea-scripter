import FocusTrackback = require('nashorn/com/intellij/ui/FocusTrackback');
import JComponent = require('nashorn/javax/swing/JComponent');
import Point = require('nashorn/java/awt/Point');
import Dimension = require('nashorn/java/awt/Dimension');
import Window = require('nashorn/java/awt/Window');
import Component = require('nashorn/java/awt/Component');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Computable = require('nashorn/com/intellij/openapi/util/Computable');
import Set = require('nashorn/java/util/Set');
import JBPopupListener = require('nashorn/com/intellij/openapi/ui/popup/JBPopupListener');
import ActiveComponent = require('nashorn/com/intellij/ui/ActiveComponent');
import IconButton = require('nashorn/com/intellij/openapi/ui/popup/IconButton');
import MouseChecker = require('nashorn/com/intellij/openapi/ui/popup/MouseChecker');
import ActiveIcon = require('nashorn/com/intellij/openapi/ui/popup/ActiveIcon');
import MaskProvider = require('nashorn/com/intellij/openapi/ui/popup/MaskProvider');
import List = require('nashorn/java/util/List');
import Pair = require('nashorn/com/intellij/openapi/util/Pair');
import ActionListener = require('nashorn/java/awt/event/ActionListener');
import KeyStroke = require('nashorn/javax/swing/KeyStroke');
import Processor = require('nashorn/com/intellij/util/Processor');
import JBPopup = require('nashorn/com/intellij/openapi/ui/popup/JBPopup');
import BooleanFunction = require('nashorn/com/intellij/util/BooleanFunction');
import KeyEvent = require('nashorn/java/awt/event/KeyEvent');
import PopupBorder = require('nashorn/com/intellij/ui/PopupBorder');
import DataContext = require('nashorn/com/intellij/openapi/actionSystem/DataContext');
import RelativePoint = require('nashorn/com/intellij/ui/awt/RelativePoint');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import JLayeredPane = require('nashorn/javax/swing/JLayeredPane');
import Rectangle = require('nashorn/java/awt/Rectangle');
import WindowManagerEx = require('nashorn/com/intellij/openapi/wm/ex/WindowManagerEx');
import IdeFocusManager = require('nashorn/com/intellij/openapi/wm/IdeFocusManager');
import PopupComponent = require('nashorn/com/intellij/ui/popup/PopupComponent');
import Object = require('nashorn/java/lang/Object');
import CaptionPanel = require('nashorn/com/intellij/ui/CaptionPanel');
import KeyListener = require('nashorn/java/awt/event/KeyListener');
import WindowAdapter = require('nashorn/java/awt/event/WindowAdapter');
import AWTEvent = require('nashorn/java/awt/AWTEvent');
import AWTEventListener = require('nashorn/java/awt/event/AWTEventListener');
import DataProvider = require('nashorn/com/intellij/openapi/actionSystem/DataProvider');
import JPanel = require('nashorn/javax/swing/JPanel');
import Enum = require('nashorn/java/lang/Enum');

declare class AbstractPopup {
	static SHOW_HINTS : string;
	toDrawMacCorner : boolean;
	dimensionServiceKey : string;
	focusTrackback : FocusTrackback;
	visible : boolean;
	disposed : boolean;
	content : JComponent;
	component : JComponent;
	cancelOnClickOutside : boolean;
	cancelOnWindowDeactivation : boolean;
	locationOnScreen : Point;
	size : Dimension;
	persistent : boolean;
	nativePopup : boolean;
	popupWindow : Window;
	modalContext : boolean;
	focused : boolean;
	cancelKeyEnabled : boolean;
	owner : Component;
	headerPreferredSize : Dimension;
	footerPreferredSize : Dimension;
	a(arg1 : string, arg2 : AbstractPopup.State[]) : void;
	init(arg1 : Project, arg2 : JComponent, arg3 : JComponent, arg4 : boolean, arg5 : boolean, arg6 : boolean, arg7 : string, arg8 : boolean, arg9 : string, arg10 : Computable<boolean>, arg11 : boolean, arg12 : Set<JBPopupListener>, arg13 : boolean, arg14 : ActiveComponent, arg15 : IconButton, arg16 : MouseChecker, arg17 : boolean, arg18 : ActiveIcon, arg19 : boolean, arg20 : boolean, arg21 : boolean, arg22 : Dimension, arg23 : number, arg24 : MaskProvider, arg25 : boolean, arg26 : boolean, arg27 : Component[], arg28 : string, arg29 : number, arg30 : boolean, arg31 : List<Pair<ActionListener, KeyStroke>>, arg32 : Component, arg33 : Processor<JBPopup>, arg34 : boolean, arg35 : boolean, arg36 : boolean, arg37 : boolean, arg38 : BooleanFunction<KeyEvent>) : AbstractPopup;
	a(arg1 : boolean) : void;
	createContentPanel(arg1 : boolean, arg2 : PopupBorder, arg3 : boolean) : AbstractPopup.MyContentPanel;
	isToDrawMacCorner() : boolean;
	setShowHints(arg1 : boolean) : void;
	static suppressMacCornerFor(arg1 : JComponent) : void;
	getDimensionServiceKey() : string;
	setDimensionServiceKey(arg1 : string) : void;
	setAdText(arg1 : string) : void;
	static getCenterOf(arg1 : Component, arg2 : JComponent) : Point;
	a(arg1 : DataContext) : RelativePoint;
	a(arg1 : Editor) : RelativePoint;
	addPopupListener(arg1 : JBPopupListener) : void;
	a(arg1 : JLayeredPane, arg2 : Rectangle) : RelativePoint;
	getFocusTrackback() : FocusTrackback;
	a() : void;
	show(arg1 : Component, arg2 : number, arg3 : number, arg4 : boolean) : void;
	focusPreferredComponent() : void;
	b() : void;
	static a(arg1 : AbstractPopup) : void;
	c() : void;
	d() : void;
	e() : void;
	a(arg1 : Window) : Window;
	static f() : WindowManagerEx;
	beforeShow() : boolean;
	afterShow() : void;
	requestFocus() : boolean;
	g() : void;
	h() : IdeFocusManager;
	static a(arg1 : Component) : JComponent;
	a(arg1 : boolean, arg2 : boolean) : PopupComponent.Factory;
	setLocation(arg1 : RelativePoint) : void;
	static a(arg1 : RelativePoint, arg2 : PopupComponent) : void;
	pack() : void;
	getComponent() : JComponent;
	setProject(arg1 : Project) : void;
	i() : void;
	storeDimensionSize(arg1 : Dimension) : void;
	storeLocation(arg1 : Point) : void;
	isCancelOnClickOutside() : boolean;
	isCancelOnWindowDeactivation() : boolean;
	static moveTo(arg1 : JComponent, arg2 : Point, arg3 : Dimension) : Window;
	static b(arg1 : Component) : Window;
	a(arg1 : Dimension, arg2 : boolean) : void;
	a(arg1 : Dimension) : Dimension;
	static setSize(arg1 : JComponent, arg2 : Dimension) : Window;
	setCaption(arg1 : string) : void;
	getPopupWindow() : Window;
	setUserData(arg1 : List<Object>) : void;
	static isFocused(arg1 : Component[]) : boolean;
	getTitle() : CaptionPanel;
	a(arg1 : JComponent) : void;
	setWarning(arg1 : string) : void;
	onSpeedSearchPatternChanged() : void;
	setOk(arg1 : boolean) : void;
	getHeaderPreferredSize() : Dimension;
	getFooterPreferredSize() : Dimension;
	static isCloseRequest(arg1 : KeyEvent) : boolean;
	j() : boolean;
}


declare interface AbstractPopup extends JBPopup {}

declare module AbstractPopup {
	class SpeedSearchKeyListener {
	}


	interface SpeedSearchKeyListener extends KeyListener {}	class MyWindowListener {
	}


	interface MyWindowListener extends WindowAdapter {}	class Canceller {
		a(arg1 : AWTEvent) : boolean;
	}


	interface Canceller extends AWTEventListener {}	class MyContentPanel {
		constructor(arg1 : boolean, arg2 : PopupBorder, arg3 : boolean);
		computePreferredSize() : Dimension;
		setDataProvider(arg1 : DataProvider) : void;
	}


	interface MyContentPanel extends JPanel, DataProvider {}	class State {
		static NEW : AbstractPopup.State;
		static INIT : AbstractPopup.State;
		static SHOWING : AbstractPopup.State;
		static SHOWN : AbstractPopup.State;
		static CANCEL : AbstractPopup.State;
		static DISPOSE : AbstractPopup.State;
	}


	interface State extends Enum<AbstractPopup.State> {}}

export = AbstractPopup
