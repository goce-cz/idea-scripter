import JComponent = require('nashorn/javax/swing/JComponent');
import SpeedSearchComparator = require('nashorn/com/intellij/ui/SpeedSearchComparator');
import Object = require('nashorn/java/lang/Object');
import ListIterator = require('nashorn/java/util/ListIterator');
import KeyEvent = require('nashorn/java/awt/event/KeyEvent');
import Rectangle = require('nashorn/java/awt/Rectangle');
import Point = require('nashorn/java/awt/Point');
import SpeedSearchSupply = require('nashorn/com/intellij/ui/speedSearch/SpeedSearchSupply');
import ToolWindowManagerAdapter = require('nashorn/com/intellij/openapi/wm/ex/ToolWindowManagerAdapter');
import Dimension = require('nashorn/java/awt/Dimension');
import JTextField = require('nashorn/javax/swing/JTextField');
import JPanel = require('nashorn/javax/swing/JPanel');

declare class SpeedSearchBase<Comp extends JComponent> {
	popupActive : boolean;
	comparator : SpeedSearchComparator;
	component : Comp;
	enteredPrefix : string;
	constructor(arg1 : Comp);
	static hasActiveSpeedSearch(arg1 : JComponent) : boolean;
	setClearSearchOnNavigateNoMatch(arg1 : boolean) : void;
	getSelectedIndex() : number;
	getAllElements() : Object[];
	getElementText(arg1 : Object) : string;
	getElementCount() : number;
	convertIndexToModel(arg1 : number) : number;
	selectElement(arg1 : Object, arg2 : string) : void;
	getElementIterator(arg1 : number) : ListIterator<Object>;
	a() : void;
	isMatchingElement(arg1 : Object, arg2 : string) : boolean;
	compare(arg1 : string, arg2 : string) : boolean;
	getComparator() : SpeedSearchComparator;
	setComparator(arg1 : SpeedSearchComparator) : void;
	a(arg1 : string) : Object;
	b(arg1 : string) : Object;
	findElement(arg1 : string) : Object;
	c(arg1 : string) : Object;
	d(arg1 : string) : Object;
	showPopup() : void;
	hidePopup() : void;
	processKeyEvent(arg1 : KeyEvent) : void;
	getComponent() : Comp;
	isSpeedSearchEnabled() : boolean;
	onSearchFieldUpdated(arg1 : string) : void;
	static a(arg1 : number) : boolean;
	static b(arg1 : number) : boolean;
	static c(arg1 : number) : boolean;
	a(arg1 : SpeedSearchBase.SearchPopup) : void;
	getComponentVisibleRect() : Rectangle;
	getComponentLocationOnScreen() : Point;
}


declare interface SpeedSearchBase<Comp extends JComponent> extends SpeedSearchSupply {}

declare module SpeedSearchBase {
	class ViewIterator {
		constructor(arg1 : SpeedSearchBase, arg2 : number);
	}


	interface ViewIterator extends ListIterator<Object> {}	class MyToolWindowManagerListener {
	}


	interface MyToolWindowManagerListener extends ToolWindowManagerAdapter {}	class SearchField {
		preferredSize : Dimension;
	}


	interface SearchField extends JTextField {}	class SearchPopup {
		constructor(arg1 : string);
		a(arg1 : number, arg2 : string) : Object;
		refreshSelection() : void;
		a(arg1 : Object) : void;
	}


	interface SearchPopup extends JPanel {}}

export = SpeedSearchBase
