import Object = require('nashorn/java/lang/Object');
import Set = require('nashorn/java/util/Set');
import DockContainer = require('nashorn/com/intellij/ui/docking/DockContainer');
import DockContainerFactory = require('nashorn/com/intellij/ui/docking/DockContainerFactory');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import MouseEvent = require('nashorn/java/awt/event/MouseEvent');
import DockableContent = require('nashorn/com/intellij/ui/docking/DockableContent');
import DragSession = require('nashorn/com/intellij/ui/docking/DragSession');
import IdeFrame = require('nashorn/com/intellij/openapi/wm/IdeFrame');
import Component = require('nashorn/java/awt/Component');

declare class DockManager extends Object {
	containers : Set<DockContainer>;
	constructor();
	register(arg1 : DockContainer) : void;
	register(arg1 : string, arg2 : DockContainerFactory) : void;
	static getInstance(arg1 : Project) : DockManager;
	createDragSession(arg1 : MouseEvent, arg2 : DockableContent) : DragSession;
	getContainers() : Set<DockContainer>;
	getIdeFrame(arg1 : DockContainer) : IdeFrame;
	getDimensionKeyForFocus(arg1 : string) : string;
	getContainerFor(arg1 : Component) : DockContainer;
}

export = DockManager
