import Icon = require('nashorn/javax/swing/Icon');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import ContentManager = require('nashorn/com/intellij/ui/content/ContentManager');
import ActionGroup = require('nashorn/com/intellij/openapi/actionSystem/ActionGroup');
import JComponent = require('nashorn/javax/swing/JComponent');
import AlertIcon = require('nashorn/com/intellij/ui/content/AlertIcon');
import BusyObject = require('nashorn/com/intellij/openapi/util/BusyObject');
import Computable = require('nashorn/com/intellij/openapi/util/Computable');
import PropertyChangeListener = require('nashorn/java/beans/PropertyChangeListener');
import UserDataHolder = require('nashorn/com/intellij/openapi/util/UserDataHolder');
import ComponentContainer = require('nashorn/com/intellij/openapi/ui/ComponentContainer');

declare class Content {
	static PROP_DISPLAY_NAME : string;
	static PROP_ICON : string;
	static PROP_ACTIONS : string;
	static PROP_DESCRIPTION : string;
	static PROP_COMPONENT : string;
	static PROP_ALERT : string;
	icon : Icon;
	displayName : string;
	tabName : string;
	toolwindowTitle : string;
	disposer : Disposable;
	description : string;
	manager : ContentManager;
	selected : boolean;
	valid : boolean;
	pinned : boolean;
	pinnable : boolean;
	closeable : boolean;
	actions : ActionGroup;
	searchComponent : JComponent;
	place : string;
	actionsContextComponent : JComponent;
	alertIcon : AlertIcon;
	busyObject : BusyObject;
	separator : string;
	popupIcon : Icon;
	executionId : number;
	setComponent(arg1 : JComponent) : void;
	setPreferredFocusableComponent(arg1 : JComponent) : void;
	setPreferredFocusedComponent(arg1 : Computable<JComponent>) : void;
	setIcon(arg1 : Icon) : void;
	getIcon() : Icon;
	setDisplayName(arg1 : string) : void;
	getDisplayName() : string;
	setTabName(arg1 : string) : void;
	getTabName() : string;
	setToolwindowTitle(arg1 : string) : void;
	getToolwindowTitle() : string;
	getDisposer() : Disposable;
	setDisposer(arg1 : Disposable) : void;
	setShouldDisposeContent(arg1 : boolean) : void;
	shouldDisposeContent() : boolean;
	getDescription() : string;
	setDescription(arg1 : string) : void;
	addPropertyChangeListener(arg1 : PropertyChangeListener) : void;
	removePropertyChangeListener(arg1 : PropertyChangeListener) : void;
	getManager() : ContentManager;
	isSelected() : boolean;
	release() : void;
	isValid() : boolean;
	isPinned() : boolean;
	setPinned(arg1 : boolean) : void;
	isPinnable() : boolean;
	setPinnable(arg1 : boolean) : void;
	isCloseable() : boolean;
	setCloseable(arg1 : boolean) : void;
	setActions(arg1 : ActionGroup, arg2 : string, arg3 : JComponent) : void;
	setSearchComponent(arg1 : JComponent) : void;
	getActions() : ActionGroup;
	getSearchComponent() : JComponent;
	getPlace() : string;
	getActionsContextComponent() : JComponent;
	setAlertIcon(arg1 : AlertIcon) : void;
	getAlertIcon() : AlertIcon;
	fireAlert() : void;
	getBusyObject() : BusyObject;
	setBusyObject(arg1 : BusyObject) : void;
	getSeparator() : string;
	setSeparator(arg1 : string) : void;
	setPopupIcon(arg1 : Icon) : void;
	getPopupIcon() : Icon;
	setExecutionId(arg1 : number) : void;
	getExecutionId() : number;
}


declare interface Content extends UserDataHolder, ComponentContainer {}
export = Content
