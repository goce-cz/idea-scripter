import Content = require('nashorn/com/intellij/ui/content/Content');
import Object = require('nashorn/java/lang/Object');
import EventObject = require('nashorn/java/util/EventObject');
import Enum = require('nashorn/java/lang/Enum');

declare class ContentManagerEvent {
	content : Content;
	index : number;
	consumed : boolean;
	operation : ContentManagerEvent.ContentOperation;
	constructor(arg1 : Object, arg2 : Content, arg3 : number, arg4 : ContentManagerEvent.ContentOperation);
	constructor(arg1 : Object, arg2 : Content, arg3 : number);
	getContent() : Content;
	getIndex() : number;
	isConsumed() : boolean;
	consume() : void;
	getOperation() : ContentManagerEvent.ContentOperation;
}


declare interface ContentManagerEvent extends EventObject {}

declare module ContentManagerEvent {
	class ContentOperation {
		static add : ContentManagerEvent.ContentOperation;
		static remove : ContentManagerEvent.ContentOperation;
		static undefined : ContentManagerEvent.ContentOperation;
	}


	interface ContentOperation extends Enum<ContentManagerEvent.ContentOperation> {}}

export = ContentManagerEvent
