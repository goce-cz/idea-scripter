import JComponent = require('nashorn/javax/swing/JComponent');
import Content = require('nashorn/com/intellij/ui/content/Content');
import ContentFactory = require('nashorn/com/intellij/ui/content/ContentFactory');
import Object = require('nashorn/java/lang/Object');
import ActionCallback = require('nashorn/com/intellij/openapi/util/ActionCallback');
import ContentManagerListener = require('nashorn/com/intellij/ui/content/ContentManagerListener');
import List = require('nashorn/java/util/List');
import AnAction = require('nashorn/com/intellij/openapi/actionSystem/AnAction');
import DataProvider = require('nashorn/com/intellij/openapi/actionSystem/DataProvider');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import BusyObject = require('nashorn/com/intellij/openapi/util/BusyObject');

declare class ContentManager {
	component : JComponent;
	selectedContent : Content;
	selectedContents : Content[];
	contentCount : number;
	contents : Content[];
	closeActionName : string;
	closeAllButThisActionName : string;
	previousContentActionName : string;
	nextContentActionName : string;
	factory : ContentFactory;
	disposed : boolean;
	singleSelection : boolean;
	canCloseContents() : boolean;
	getComponent() : JComponent;
	addContent(arg1 : Content) : void;
	addContent(arg1 : Content, arg2 : number) : void;
	addContent(arg1 : Content, arg2 : Object) : void;
	removeContent(arg1 : Content, arg2 : boolean) : boolean;
	removeContent(arg1 : Content, arg2 : boolean, arg3 : boolean, arg4 : boolean) : ActionCallback;
	setSelectedContent(arg1 : Content) : void;
	setSelectedContentCB(arg1 : Content) : ActionCallback;
	setSelectedContent(arg1 : Content, arg2 : boolean) : void;
	setSelectedContentCB(arg1 : Content, arg2 : boolean) : ActionCallback;
	setSelectedContent(arg1 : Content, arg2 : boolean, arg3 : boolean) : void;
	setSelectedContentCB(arg1 : Content, arg2 : boolean, arg3 : boolean) : ActionCallback;
	setSelectedContent(arg1 : Content, arg2 : boolean, arg3 : boolean, arg4 : boolean) : ActionCallback;
	addSelectedContent(arg1 : Content) : void;
	getSelectedContent() : Content;
	getSelectedContents() : Content[];
	removeAllContents(arg1 : boolean) : void;
	getContentCount() : number;
	getContents() : Content[];
	findContent(arg1 : string) : Content;
	getContent(arg1 : number) : Content;
	getContent(arg1 : JComponent) : Content;
	getIndexOfContent(arg1 : Content) : number;
	getCloseActionName() : string;
	canCloseAllContents() : boolean;
	selectPreviousContent() : ActionCallback;
	selectNextContent() : ActionCallback;
	addContentManagerListener(arg1 : ContentManagerListener) : void;
	removeContentManagerListener(arg1 : ContentManagerListener) : void;
	getCloseAllButThisActionName() : string;
	getPreviousContentActionName() : string;
	getNextContentActionName() : string;
	getAdditionalPopupActions(arg1 : Content) : List<AnAction>;
	removeFromSelection(arg1 : Content) : void;
	isSelected(arg1 : Content) : boolean;
	requestFocus(arg1 : Content, arg2 : boolean) : ActionCallback;
	addDataProvider(arg1 : DataProvider) : void;
	getFactory() : ContentFactory;
	isDisposed() : boolean;
	isSingleSelection() : boolean;
}


declare interface ContentManager extends Disposable, BusyObject {}
export = ContentManager
