import List = require('nashorn/java/util/List');
import Collection = require('nashorn/java/util/Collection');
import Comparator = require('nashorn/java/util/Comparator');
import AbstractListModel = require('nashorn/javax/swing/AbstractListModel');
import EditableModel = require('nashorn/com/intellij/util/ui/EditableModel');

declare class CollectionListModel<T> {
	size : number;
	items : List<T>;
	constructor(arg1 : Collection<T>);
	constructor(arg1 : List<T>);
	constructor(arg1 : T[]);
	add(arg1 : T) : void;
	add(arg1 : number, arg2 : T) : void;
	add(arg1 : List<T>) : void;
	remove(arg1 : T) : void;
	setElementAt(arg1 : T, arg2 : number) : void;
	remove(arg1 : number) : void;
	removeAll() : void;
	contentsChanged(arg1 : T) : void;
	sort(arg1 : Comparator<T>) : void;
	getItems() : List<T>;
	replaceAll(arg1 : List<T>) : void;
	toList() : List<T>;
	getElementIndex(arg1 : T) : number;
}


declare interface CollectionListModel<T> extends AbstractListModel, EditableModel {}
export = CollectionListModel
