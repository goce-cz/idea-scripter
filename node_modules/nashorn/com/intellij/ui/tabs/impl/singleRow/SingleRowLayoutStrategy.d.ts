import Object = require('nashorn/java/lang/Object');
import SingleRowPassInfo = require('nashorn/com/intellij/ui/tabs/impl/singleRow/SingleRowPassInfo');
import Dimension = require('nashorn/java/awt/Dimension');
import Rectangle = require('nashorn/java/awt/Rectangle');
import ShapeTransform = require('nashorn/com/intellij/ui/tabs/impl/ShapeTransform');
import TabLabel = require('nashorn/com/intellij/ui/tabs/impl/TabLabel');

declare class SingleRowLayoutStrategy extends Object {
	toCenterTextWhenStretched : boolean;
	sideComponentOnTabs : boolean;
	getMoreRectAxisSize() : number;
	getStartPosition(arg1 : SingleRowPassInfo) : number;
	getToFitLength(arg1 : SingleRowPassInfo) : number;
	getLengthIncrement(arg1 : Dimension) : number;
	getMinPosition(arg1 : Rectangle) : number;
	getMaxPosition(arg1 : Rectangle) : number;
	getFixedFitLength(arg1 : SingleRowPassInfo) : number;
	getLayoutRect(arg1 : SingleRowPassInfo, arg2 : number, arg3 : number) : Rectangle;
	getLayoutRec(arg1 : number, arg2 : number, arg3 : number, arg4 : number) : Rectangle;
	getFixedPosition(arg1 : SingleRowPassInfo) : number;
	getMoreRect(arg1 : SingleRowPassInfo) : Rectangle;
	isToCenterTextWhenStretched() : boolean;
	createShapeTransform(arg1 : Rectangle) : ShapeTransform;
	canBeStretched() : boolean;
	layoutComp(arg1 : SingleRowPassInfo) : void;
	isSideComponentOnTabs() : boolean;
	isDragOut(arg1 : TabLabel, arg2 : number, arg3 : number) : boolean;
	drawPartialOverflowTabs() : boolean;
	getScrollUnitIncrement(arg1 : TabLabel) : number;
}


declare module SingleRowLayoutStrategy {
	class Right {
	}


	interface Right extends SingleRowLayoutStrategy.Vertical {}	class Left {
	}


	interface Left extends SingleRowLayoutStrategy.Vertical {}	class Vertical {
		toCenterTextWhenStretched : boolean;
	}


	interface Vertical extends SingleRowLayoutStrategy {}	class Bottom {
	}


	interface Bottom extends SingleRowLayoutStrategy.Horizontal {}	class Top {
		sideComponentOnTabs : boolean;
	}


	interface Top extends SingleRowLayoutStrategy.Horizontal {}	class Horizontal {
		toCenterTextWhenStretched : boolean;
		moreRectAxisSize : number;
	}


	interface Horizontal extends SingleRowLayoutStrategy {}}

export = SingleRowLayoutStrategy
