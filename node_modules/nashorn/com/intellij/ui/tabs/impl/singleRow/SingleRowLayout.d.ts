import SingleRowPassInfo = require('nashorn/com/intellij/ui/tabs/impl/singleRow/SingleRowPassInfo');
import MoreTabsIcon = require('nashorn/com/intellij/ui/tabs/impl/singleRow/MoreTabsIcon');
import JPopupMenu = require('nashorn/javax/swing/JPopupMenu');
import JBTabsImpl = require('nashorn/com/intellij/ui/tabs/impl/JBTabsImpl');
import SingleRowLayoutStrategy = require('nashorn/com/intellij/ui/tabs/impl/singleRow/SingleRowLayoutStrategy');
import List = require('nashorn/java/util/List');
import TabInfo = require('nashorn/com/intellij/ui/tabs/TabInfo');
import LayoutPassInfo = require('nashorn/com/intellij/ui/tabs/impl/LayoutPassInfo');
import TabLabel = require('nashorn/com/intellij/ui/tabs/impl/TabLabel');
import TabLayout = require('nashorn/com/intellij/ui/tabs/impl/TabLayout');
import JLabel = require('nashorn/javax/swing/JLabel');
import Enum = require('nashorn/java/lang/Enum');

declare class SingleRowLayout {
	myLastSingRowLayout : SingleRowPassInfo;
	myMoreIcon : MoreTabsIcon;
	myMorePopup : JPopupMenu;
	myLeftGhost : SingleRowLayout.GhostComponent;
	myRightGhost : SingleRowLayout.GhostComponent;
	sideComponentOnTabs : boolean;
	scrollUnitIncrement : number;
	constructor(arg1 : JBTabsImpl);
	getStrategy() : SingleRowLayoutStrategy;
	checkLayoutLabels(arg1 : SingleRowPassInfo) : boolean;
	getScrollOffset() : number;
	scroll(arg1 : number) : void;
	getScrollUnitIncrement() : number;
	scrollSelectionInView() : void;
	layoutSingleRow(arg1 : List<TabInfo>) : LayoutPassInfo;
	findLastVisibleLabel(arg1 : SingleRowPassInfo) : TabLabel;
	prepareLayoutPassInfo(arg1 : SingleRowPassInfo, arg2 : TabInfo) : void;
	updateMoreIconVisibility(arg1 : SingleRowPassInfo) : void;
	layoutMoreButton(arg1 : SingleRowPassInfo) : void;
	layoutLabelsAndGhosts(arg1 : SingleRowPassInfo) : void;
	applyTabLayout(arg1 : SingleRowPassInfo, arg2 : TabLabel, arg3 : number, arg4 : number) : boolean;
	recomputeToLayout(arg1 : SingleRowPassInfo) : void;
	calculateRequiredLength(arg1 : SingleRowPassInfo) : void;
	getRequiredLength(arg1 : TabInfo) : number;
	isTabHidden(arg1 : TabInfo) : boolean;
	processDrop(arg1 : SingleRowPassInfo, arg2 : TabInfo, arg3 : boolean) : void;
}


declare interface SingleRowLayout extends TabLayout {}

declare module SingleRowLayout {
	class GhostComponent {
		setInfo(arg1 : TabInfo) : void;
		reset() : void;
	}


	interface GhostComponent extends JLabel {}	class RowDropPolicy {
		static first : SingleRowLayout.RowDropPolicy;
		static last : SingleRowLayout.RowDropPolicy;
	}


	interface RowDropPolicy extends Enum<SingleRowLayout.RowDropPolicy> {}}

export = SingleRowLayout
