import Object = require('nashorn/java/lang/Object');
import JBTabs = require('nashorn/com/intellij/ui/tabs/JBTabs');
import JBTabsPosition = require('nashorn/com/intellij/ui/tabs/JBTabsPosition');
import UiDecorator = require('nashorn/com/intellij/ui/tabs/UiDecorator');
import Insets = require('nashorn/java/awt/Insets');
import Color = require('nashorn/java/awt/Color');
import TimedDeadzone = require('nashorn/com/intellij/util/ui/TimedDeadzone');

declare class JBTabsPresentation extends Object {
	hideTabs : boolean;
	singleRow : boolean;
	jBTabs : JBTabs;
	tabsPosition : JBTabsPosition;
	isHideTabs() : boolean;
	setHideTabs(arg1 : boolean) : void;
	setPaintBorder(arg1 : number, arg2 : number, arg3 : number, arg4 : number) : JBTabsPresentation;
	setTabSidePaintBorder(arg1 : number) : JBTabsPresentation;
	setPaintFocus(arg1 : boolean) : JBTabsPresentation;
	setAlwaysPaintSelectedTab(arg1 : boolean) : JBTabsPresentation;
	setStealthTabMode(arg1 : boolean) : JBTabsPresentation;
	setSideComponentVertical(arg1 : boolean) : JBTabsPresentation;
	setSideComponentOnTabs(arg1 : boolean) : JBTabsPresentation;
	setSingleRow(arg1 : boolean) : JBTabsPresentation;
	isSingleRow() : boolean;
	setUiDecorator(arg1 : UiDecorator) : JBTabsPresentation;
	setRequestFocusOnLastFocusedComponent(arg1 : boolean) : JBTabsPresentation;
	setPaintBlocked(arg1 : boolean, arg2 : boolean) : void;
	setInnerInsets(arg1 : Insets) : JBTabsPresentation;
	setGhostsAlwaysVisible(arg1 : boolean) : JBTabsPresentation;
	setFocusCycle(arg1 : boolean) : JBTabsPresentation;
	setToDrawBorderIfTabsHidden(arg1 : boolean) : JBTabsPresentation;
	getJBTabs() : JBTabs;
	setActiveTabFillIn(arg1 : Color) : JBTabsPresentation;
	setTabLabelActionsAutoHide(arg1 : boolean) : JBTabsPresentation;
	setTabLabelActionsMouseDeadzone(arg1 : TimedDeadzone.Length) : JBTabsPresentation;
	setTabsPosition(arg1 : JBTabsPosition) : JBTabsPresentation;
	getTabsPosition() : JBTabsPosition;
	setTabDraggingEnabled(arg1 : boolean) : JBTabsPresentation;
	setProvideSwitchTargets(arg1 : boolean) : JBTabsPresentation;
}

export = JBTabsPresentation
