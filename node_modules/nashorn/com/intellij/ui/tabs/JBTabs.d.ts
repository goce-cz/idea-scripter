import TabInfo = require('nashorn/com/intellij/ui/tabs/TabInfo');
import JBTabsPresentation = require('nashorn/com/intellij/ui/tabs/JBTabsPresentation');
import DataProvider = require('nashorn/com/intellij/openapi/actionSystem/DataProvider');
import JComponent = require('nashorn/javax/swing/JComponent');
import ActionCallback = require('nashorn/com/intellij/openapi/util/ActionCallback');
import ActionGroup = require('nashorn/com/intellij/openapi/actionSystem/ActionGroup');
import MouseListener = require('nashorn/java/awt/event/MouseListener');
import TabsListener = require('nashorn/com/intellij/ui/tabs/TabsListener');
import MouseEvent = require('nashorn/java/awt/event/MouseEvent');
import Object = require('nashorn/java/lang/Object');
import SwitchProvider = require('nashorn/com/intellij/ui/switcher/SwitchProvider');
import RelativePoint = require('nashorn/com/intellij/ui/awt/RelativePoint');
import Image = require('nashorn/java/awt/Image');
import ActiveRunnable = require('nashorn/com/intellij/openapi/util/ActiveRunnable');

declare class JBTabs {
	selectedInfo : TabInfo;
	tabCount : number;
	presentation : JBTabsPresentation;
	dataProvider : DataProvider;
	targetInfo : TabInfo;
	component : JComponent;
	disposed : boolean;
	addTab(arg1 : TabInfo, arg2 : number) : TabInfo;
	addTab(arg1 : TabInfo) : TabInfo;
	removeTab(arg1 : TabInfo) : ActionCallback;
	removeAllTabs() : void;
	setPopupGroup(arg1 : ActionGroup, arg2 : string, arg3 : boolean) : JBTabs;
	select(arg1 : TabInfo, arg2 : boolean) : ActionCallback;
	getSelectedInfo() : TabInfo;
	getTabAt(arg1 : number) : TabInfo;
	getTabCount() : number;
	getPresentation() : JBTabsPresentation;
	getDataProvider() : DataProvider;
	getTargetInfo() : TabInfo;
	addTabMouseListener(arg1 : MouseListener) : JBTabs;
	addListener(arg1 : TabsListener) : JBTabs;
	setSelectionChangeHandler(arg1 : JBTabs.SelectionChangeHandler) : JBTabs;
	findInfo(arg1 : MouseEvent) : TabInfo;
	findInfo(arg1 : Object) : TabInfo;
	getIndexOf(arg1 : TabInfo) : number;
	requestFocus() : void;
	setNavigationActionBinding(arg1 : string, arg2 : string) : JBTabs;
	setNavigationActionsEnabled(arg1 : boolean) : JBTabs;
	isDisposed() : boolean;
	setAdditionalSwitchProviderWhenOriginal(arg1 : SwitchProvider) : JBTabs;
	resetDropOver(arg1 : TabInfo) : void;
	startDropOver(arg1 : TabInfo, arg2 : RelativePoint) : Image;
	processDropOver(arg1 : TabInfo, arg2 : RelativePoint) : void;
}


declare interface JBTabs extends SwitchProvider {}

declare module JBTabs {
	class SelectionChangeHandler extends Object {
		execute(arg1 : TabInfo, arg2 : boolean, arg3 : ActiveRunnable) : ActionCallback;
	}
}

export = JBTabs
