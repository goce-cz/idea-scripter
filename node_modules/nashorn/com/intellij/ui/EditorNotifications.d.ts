import Project = require('nashorn/com/intellij/openapi/project/Project');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import AbstractProjectComponent = require('nashorn/com/intellij/openapi/components/AbstractProjectComponent');
import JComponent = require('nashorn/javax/swing/JComponent');
import Object = require('nashorn/java/lang/Object');
import Key = require('nashorn/com/intellij/openapi/util/Key');
import FileEditor = require('nashorn/com/intellij/openapi/fileEditor/FileEditor');

declare class EditorNotifications {
	constructor(arg1 : Project);
	static getInstance(arg1 : Project) : EditorNotifications;
	updateNotifications(arg1 : VirtualFile) : void;
	updateAllNotifications() : void;
	static updateAll() : void;
}


declare interface EditorNotifications extends AbstractProjectComponent {}

declare module EditorNotifications {
	class Provider<T extends JComponent> extends Object {
		key : Key<T>;
		constructor();
		getKey() : Key<T>;
		createNotificationPanel(arg1 : VirtualFile, arg2 : FileEditor) : T;
	}
}

export = EditorNotifications
