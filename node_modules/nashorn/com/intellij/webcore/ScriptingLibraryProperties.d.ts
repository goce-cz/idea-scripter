import ScriptingFrameworkDescriptor = require('nashorn/com/intellij/webcore/ScriptingFrameworkDescriptor');
import Collection = require('nashorn/java/util/Collection');
import LibraryProperties = require('nashorn/com/intellij/openapi/roots/libraries/LibraryProperties');
import Object = require('nashorn/java/lang/Object');

declare class ScriptingLibraryProperties {
	static SOURCE_FILES_URLS_ELEMENT : string;
	static SOURCE_URL_ELEMENT : string;
	static SOURCE_URL_ATTR : string;
	state : ScriptingLibraryProperties.State;
	frameworkType : ScriptingFrameworkDescriptor;
	sourceFilesUrls : Collection<string>;
	constructor();
	constructor(arg1 : ScriptingFrameworkDescriptor, arg2 : Collection<string>);
	getFrameworkType() : ScriptingFrameworkDescriptor;
	getSourceFilesUrls() : Collection<string>;
	setSourceFilesUrls(arg1 : Collection<string>) : void;
}


declare interface ScriptingLibraryProperties extends LibraryProperties<ScriptingLibraryProperties.State> {}

declare module ScriptingLibraryProperties {
	class State extends Object {
		frameworkName : string;
		frameworkVersion : string;
		sourceFilesUrls : Collection<string>;
		constructor();
	}
}

export = ScriptingLibraryProperties
