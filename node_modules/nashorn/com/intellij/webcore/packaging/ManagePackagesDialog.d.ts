import JComponent = require('nashorn/javax/swing/JComponent');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import PackageManagementService = require('nashorn/com/intellij/webcore/packaging/PackageManagementService');
import InstalledPackage = require('nashorn/com/intellij/webcore/packaging/InstalledPackage');
import DialogWrapper = require('nashorn/com/intellij/openapi/ui/DialogWrapper');
import DefaultListCellRenderer = require('nashorn/javax/swing/DefaultListCellRenderer');
import ListSelectionListener = require('nashorn/javax/swing/event/ListSelectionListener');
import List = require('nashorn/java/util/List');
import RepoPackage = require('nashorn/com/intellij/webcore/packaging/RepoPackage');
import ArrayList = require('nashorn/java/util/ArrayList');
import CollectionListModel = require('nashorn/com/intellij/ui/CollectionListModel');
import FilterComponent = require('nashorn/com/intellij/ui/FilterComponent');

declare class ManagePackagesDialog {
	preferredFocusedComponent : JComponent;
	constructor(arg1 : Project, arg2 : PackageManagementService, arg3 : PackageManagementService.Listener);
	selectPackage(arg1 : InstalledPackage) : void;
	a() : void;
	b() : void;
	a(arg1 : string) : void;
	a(arg1 : string, arg2 : PackageManagementService.ErrorDescription) : void;
	c() : void;
	initModel() : void;
	b(arg1 : string) : void;
	setDownloadStatus(arg1 : boolean) : void;
	d() : void;
	setOptionsText(arg1 : string) : void;
}


declare interface ManagePackagesDialog extends DialogWrapper {}

declare module ManagePackagesDialog {
	class MyTableRenderer {
	}


	interface MyTableRenderer extends DefaultListCellRenderer {}	class MyPackageSelectionListener {
	}


	interface MyPackageSelectionListener extends ListSelectionListener {}	class PackagesModel {
		size : number;
		constructor(arg1 : List<RepoPackage>);
		add(arg1 : string, arg2 : string) : void;
		filter(arg1 : string) : void;
		filter(arg1 : List<RepoPackage>, arg2 : RepoPackage) : void;
		toProcess() : ArrayList<RepoPackage>;
	}


	interface PackagesModel extends CollectionListModel<RepoPackage> {}	class MyPackageFilter {
		constructor();
	}


	interface MyPackageFilter extends FilterComponent {}}

export = ManagePackagesDialog
