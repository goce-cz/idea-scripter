import Collection = require('nashorn/java/util/Collection');
import Processor = require('nashorn/com/intellij/util/Processor');
import AsyncFuture = require('nashorn/com/intellij/concurrency/AsyncFuture');
import Iterable = require('nashorn/java/lang/Iterable');

declare class Query<Result> {
	findAll() : Collection<Result>;
	findFirst() : Result;
	forEach(arg1 : Processor<Result>) : boolean;
	forEachAsync(arg1 : Processor<Result>) : AsyncFuture<boolean>;
	toArray(arg1 : Result[]) : Result[];
}


declare interface Query<Result> extends Iterable<Result> {}
export = Query
