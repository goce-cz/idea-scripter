import Object = require('nashorn/java/lang/Object');
import List = require('nashorn/java/util/List');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import Iterator = require('nashorn/java/util/Iterator');
import File = require('nashorn/java/io/File');
import Collection = require('nashorn/java/util/Collection');

declare class PathsList extends Object {
	pathsString : string;
	pathList : List<string>;
	virtualFiles : List<VirtualFile>;
	rootDirs : List<VirtualFile>;
	constructor();
	add(arg1 : string) : void;
	remove(arg1 : string) : void;
	add(arg1 : VirtualFile) : void;
	addFirst(arg1 : string) : void;
	addTail(arg1 : string) : void;
	chooseFirstTimeItems(arg1 : string) : Iterator<string>;
	addAllLast(arg1 : Iterator<string>, arg2 : List<string>) : void;
	getPathsString() : string;
	getPathList() : List<string>;
	getVirtualFiles() : List<VirtualFile>;
	getRootDirs() : List<VirtualFile>;
	addAll(arg1 : List<string>) : void;
	addAllFiles(arg1 : File[]) : void;
	addAllFiles(arg1 : List<File>) : void;
	add(arg1 : File) : void;
	addVirtualFiles(arg1 : Collection<VirtualFile>) : void;
	addVirtualFiles(arg1 : VirtualFile[]) : void;
}

export = PathsList
