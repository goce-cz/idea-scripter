import File = require('nashorn/java/io/File');
import PagePool = require('nashorn/com/intellij/util/io/PagePool');
import TIntArrayList = require('nashorn/gnu/trove/TIntArrayList');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import Forceable = require('nashorn/com/intellij/openapi/Forceable');

declare class AbstractRecordsTable {
	recordsCount : number;
	version : number;
	dirty : boolean;
	constructor(arg1 : File, arg2 : PagePool);
	getSafelyClosedMagic() : number;
	getHeaderSize() : number;
	getImplVersion() : number;
	getRecordSize() : number;
	getZeros() : number[];
	createNewRecord() : number;
	getRecordsCount() : number;
	ensureFreeRecordsScanned() : void;
	scanForFreeRecords() : TIntArrayList;
	doCleanRecord(arg1 : number) : void;
	getAddress(arg1 : number) : number;
	setAddress(arg1 : number, arg2 : number) : void;
	getSize(arg1 : number) : number;
	setSize(arg1 : number, arg2 : number) : void;
	getCapacity(arg1 : number) : number;
	setCapacity(arg1 : number, arg2 : number) : void;
	getOffset(arg1 : number, arg2 : number) : number;
	deleteRecord(arg1 : number) : void;
	getVersion() : number;
	setVersion(arg1 : number) : void;
	flushSome(arg1 : number) : boolean;
	markDirty() : void;
	markClean() : void;
}


declare interface AbstractRecordsTable extends Disposable, Forceable {}
export = AbstractRecordsTable
