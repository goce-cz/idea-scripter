import InputStream = require('nashorn/java/io/InputStream');
import Charset = require('nashorn/java/nio/charset/Charset');
import BaseDataReader = require('nashorn/com/intellij/util/io/BaseDataReader');
import Reader = require('nashorn/java/io/Reader');
import StringBuilder = require('nashorn/java/lang/StringBuilder');
import Future = require('nashorn/java/util/concurrent/Future');

declare class BaseOutputReader {
	constructor(arg1 : InputStream, arg2 : Charset);
	constructor(arg1 : InputStream, arg2 : Charset, arg3 : BaseDataReader.SleepingPolicy);
	constructor(arg1 : Reader);
	constructor(arg1 : Reader, arg2 : BaseDataReader.SleepingPolicy);
	static createInputStreamReader(arg1 : InputStream, arg2 : Charset) : Reader;
	processLine(arg1 : string[], arg2 : StringBuilder, arg3 : number) : void;
	readAvailableNonBlocking() : boolean;
	readAvailableBlocking() : boolean;
	submitToken() : void;
	getScheduledSubmitter() : Future;
	onTextAvailable(arg1 : string) : void;
}


declare interface BaseOutputReader extends BaseDataReader {}
export = BaseOutputReader
