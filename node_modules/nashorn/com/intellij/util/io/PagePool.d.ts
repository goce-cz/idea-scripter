import Object = require('nashorn/java/lang/Object');
import RandomAccessDataFile = require('nashorn/com/intellij/util/io/RandomAccessDataFile');
import Page = require('nashorn/com/intellij/util/io/Page');
import PoolPageKey = require('nashorn/com/intellij/util/io/PoolPageKey');
import Map = require('nashorn/java/util/Map');
import FinalizationRequest = require('nashorn/com/intellij/util/io/FinalizationRequest');

declare class PagePool extends Object {
	static SHARED : PagePool;
	constructor(arg1 : number, arg2 : number);
	alloc(arg1 : RandomAccessDataFile, arg2 : number) : Page;
	hitQueues(arg1 : RandomAccessDataFile, arg2 : number) : Page;
	static percent(arg1 : number, arg2 : number) : number;
	static printStatistics() : void;
	static keyForPage(arg1 : Page) : PoolPageKey;
	toProtectedQueue(arg1 : Page) : void;
	setupKey(arg1 : RandomAccessDataFile, arg2 : number) : PoolPageKey;
	flushPages(arg1 : RandomAccessDataFile) : void;
	flushPages(arg1 : RandomAccessDataFile, arg2 : number) : boolean;
	flushFinalizationQueue(arg1 : number) : boolean;
	scanQueue(arg1 : RandomAccessDataFile, arg2 : Map<any, Page>) : boolean;
	scheduleFinalization(arg1 : Page) : boolean;
	processFinalizationRequest(arg1 : FinalizationRequest) : void;
	retrieveFinalizationRequest() : FinalizationRequest;
}

export = PagePool
