import Object = require('nashorn/java/lang/Object');
import Processor = require('nashorn/com/intellij/util/Processor');

declare class WalkingState<T> extends Object {
	constructor(arg1 : WalkingState.TreeGuide<T>);
	elementFinished(arg1 : T) : void;
	visit(arg1 : T) : void;
	elementStarted(arg1 : T) : void;
	walkChildren(arg1 : T) : void;
	next(arg1 : T, arg2 : T, arg3 : boolean) : T;
	startedWalking() : void;
	stopWalking() : void;
	static processAll<T>(arg1 : T, arg2 : WalkingState.TreeGuide<T>, arg3 : Processor<T>) : boolean;
}


declare module WalkingState {
	class TreeGuide<T> extends Object {
		getNextSibling(arg1 : T) : T;
		getPrevSibling(arg1 : T) : T;
		getFirstChild(arg1 : T) : T;
		getParent(arg1 : T) : T;
	}
}

export = WalkingState
