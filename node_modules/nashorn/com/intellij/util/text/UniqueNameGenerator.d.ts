import Collection = require('nashorn/java/util/Collection');
import Function = require('nashorn/com/intellij/util/Function');
import Condition = require('nashorn/com/intellij/openapi/util/Condition');

declare class UniqueNameGenerator {
	constructor(arg1 : Collection<T>, arg2 : Function<T, string>);
	constructor();
	isUnique(arg1 : string, arg2 : string, arg3 : string) : boolean;
	static generateUniqueName(arg1 : string, arg2 : Collection<string>) : string;
	static generateUniqueName(arg1 : string, arg2 : string, arg3 : string, arg4 : Collection<string>) : string;
	static generateUniqueName(arg1 : string, arg2 : Condition<string>) : string;
	static generateUniqueName(arg1 : string, arg2 : string, arg3 : string, arg4 : Condition<string>) : string;
	static generateUniqueName(arg1 : string, arg2 : string, arg3 : string, arg4 : string, arg5 : string, arg6 : Condition<string>) : string;
	generateUniqueName(arg1 : string, arg2 : string, arg3 : string) : string;
	generateUniqueName(arg1 : string, arg2 : string, arg3 : string, arg4 : string, arg5 : string) : string;
	addExistingName(arg1 : string) : void;
	generateUniqueName(arg1 : string) : string;
}


declare interface UniqueNameGenerator extends Condition<string> {}
export = UniqueNameGenerator
