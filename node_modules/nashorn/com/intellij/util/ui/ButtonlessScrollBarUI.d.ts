import JBColor = require('nashorn/com/intellij/ui/JBColor');
import Rectangle = require('nashorn/java/awt/Rectangle');
import Color = require('nashorn/java/awt/Color');
import BasicScrollBarUI = require('nashorn/javax/swing/plaf/basic/BasicScrollBarUI');
import Point = require('nashorn/java/awt/Point');
import Graphics = require('nashorn/java/awt/Graphics');
import JComponent = require('nashorn/javax/swing/JComponent');
import Graphics2D = require('nashorn/java/awt/Graphics2D');
import Object = require('nashorn/java/lang/Object');
import Dimension = require('nashorn/java/awt/Dimension');
import JButton = require('nashorn/javax/swing/JButton');

declare class ButtonlessScrollBarUI {
	static DELAY_FRAMES : number;
	static FRAMES_COUNT : number;
	static trackBackgroundDefault : JBColor;
	static trackBorderColorDefault : JBColor;
	static macOverlayScrollbarSupported : boolean;
	decrementButtonHeight : number;
	incrementButtonHeight : number;
	thumbBounds : Rectangle;
	supportsAbsolutePositioning : boolean;
	getGradientLightColor() : JBColor;
	getGradientDarkColor() : JBColor;
	getGradientThumbBorderColor() : JBColor;
	static getTrackBackgroundDefault() : JBColor;
	static getTrackBorderColorDefault() : JBColor;
	getTrackBackground() : JBColor;
	getTrackBorderColor() : JBColor;
	jbColor(arg1 : Color, arg2 : Color) : JBColor;
	getAnimationColorShift() : number;
	isMacOverlayScrollbar() : boolean;
	static isMacOverlayScrollbarSupported() : boolean;
	updateMacScrollbarStyle() : void;
	alwaysShowTrack() : boolean;
	getDecrementButtonHeight() : number;
	getIncrementButtonHeight() : number;
	startRegularThumbAnimator() : void;
	startMacScrollbarExpandAnimator() : void;
	startMacScrollbarFadeout() : void;
	startMacScrollbarFadeout(arg1 : boolean) : void;
	static createNormal() : BasicScrollBarUI;
	static createTransparent() : BasicScrollBarUI;
	updateStyleDefaults() : void;
	restart() : void;
	updateGlobalListeners(arg1 : boolean) : void;
	initRegularThumbAnimator() : void;
	initMacScrollbarAnimators() : void;
	isOverThumb(arg1 : Point) : boolean;
	getThickness() : number;
	doPaintTrack(arg1 : Graphics, arg2 : JComponent, arg3 : Rectangle) : void;
	doPaintThumb(arg1 : Graphics, arg2 : Rectangle) : void;
	paintMacThumb(arg1 : Graphics, arg2 : Rectangle) : void;
	isDark() : boolean;
	alwaysPaintThumb() : boolean;
	getMacScrollBarBounds(arg1 : Rectangle, arg2 : boolean) : Rectangle;
	paintMaxiThumb(arg1 : Graphics2D, arg2 : Rectangle) : void;
	adjustColor(arg1 : Color) : Color;
	isVertical() : boolean;
	isMacScrollbarHiddenAndXcodeLikeScrollbar() : boolean;
	static xcodeLikeScrollbar() : boolean;
	registerRepaintCallback(arg1 : ButtonlessScrollBarUI.ScrollbarRepaintCallback) : void;
}


declare interface ButtonlessScrollBarUI extends BasicScrollBarUI {}

declare module ButtonlessScrollBarUI {
	class ScrollbarRepaintCallback extends Object {
		call(arg1 : Graphics) : void;
	}
	class EmptyButton {
		maximumSize : Dimension;
		preferredSize : Dimension;
		minimumSize : Dimension;
	}


	interface EmptyButton extends JButton {}}

export = ButtonlessScrollBarUI
