import Component = require('nashorn/java/awt/Component');
import RelativePoint = require('nashorn/com/intellij/ui/awt/RelativePoint');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');
import HierarchyBoundsListener = require('nashorn/java/awt/event/HierarchyBoundsListener');
import HierarchyListener = require('nashorn/java/awt/event/HierarchyListener');
import ComponentListener = require('nashorn/java/awt/event/ComponentListener');

declare class PositionTracker<T> {
	component : Component;
	constructor(arg1 : Component);
	init(arg1 : PositionTracker.Client<T>) : void;
	getComponent() : Component;
	revalidate() : void;
	recalculateLocation(arg1 : T) : RelativePoint;
}


declare interface PositionTracker<T> extends Disposable, HierarchyBoundsListener, HierarchyListener, ComponentListener {}

declare module PositionTracker {
	class Client<T> {
		revalidate() : void;
		revalidate(arg1 : PositionTracker<T>) : void;
	}


	interface Client<T> extends Disposable {}	class Static<T> {
		constructor(arg1 : RelativePoint);
	}


	interface Static<T> extends PositionTracker<T> {}}

export = PositionTracker
