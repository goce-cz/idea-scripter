import Object = require('nashorn/java/lang/Object');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import IdFilter = require('nashorn/com/intellij/util/indexing/IdFilter');
import Project = require('nashorn/com/intellij/openapi/project/Project');

declare class FindSymbolParameters extends Object {
	completePattern : string;
	localPatternName : string;
	searchScope : GlobalSearchScope;
	idFilter : IdFilter;
	project : Project;
	searchInLibraries : boolean;
	constructor(arg1 : string, arg2 : string, arg3 : GlobalSearchScope, arg4 : IdFilter);
	getCompletePattern() : string;
	getLocalPatternName() : string;
	getSearchScope() : GlobalSearchScope;
	getIdFilter() : IdFilter;
	static wrap(arg1 : string, arg2 : Project, arg3 : boolean) : FindSymbolParameters;
	static searchScopeFor(arg1 : Project, arg2 : boolean) : GlobalSearchScope;
	getProject() : Project;
	isSearchInLibraries() : boolean;
}

export = FindSymbolParameters
