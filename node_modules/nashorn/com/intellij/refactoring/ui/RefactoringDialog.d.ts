import Action = require('nashorn/javax/swing/Action');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import BaseRefactoringProcessor = require('nashorn/com/intellij/refactoring/BaseRefactoringProcessor');
import DialogWrapper = require('nashorn/com/intellij/openapi/ui/DialogWrapper');
import AbstractAction = require('nashorn/javax/swing/AbstractAction');

declare class RefactoringDialog {
	previewUsages : boolean;
	isPreviewUsages() : boolean;
	setPreviewResults(arg1 : boolean) : void;
	getRefactorAction() : Action;
	getPreviewAction() : Action;
	doAction() : void;
	a() : void;
	doRefactorAction() : void;
	closeOKAction() : void;
	areButtonsValid() : boolean;
	canRun() : void;
	validateButtons() : void;
	hasHelpAction() : boolean;
	hasPreviewButton() : boolean;
	getProject() : Project;
	invokeRefactoring(arg1 : BaseRefactoringProcessor) : void;
}


declare interface RefactoringDialog extends DialogWrapper {}

declare module RefactoringDialog {
	class PreviewAction {
		constructor();
	}


	interface PreviewAction extends AbstractAction {}	class RefactorAction {
		constructor();
	}


	interface RefactorAction extends AbstractAction {}}

export = RefactoringDialog
