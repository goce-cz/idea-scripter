import Key = require('nashorn/com/intellij/openapi/util/Key');
import Collection = require('nashorn/java/util/Collection');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import UsageInfo = require('nashorn/com/intellij/usageView/UsageInfo');
import Function = require('nashorn/com/intellij/util/Function');
import UserDataHolderBase = require('nashorn/com/intellij/openapi/util/UserDataHolderBase');

declare class RefactoringEventData {
	static CONFLICTS_KEY : Key<Collection<string>>;
	static PSI_ELEMENT_KEY : Key<PsiElement>;
	static STRING_PROPERTIES : Key<string[]>;
	static PSI_ELEMENT_ARRAY_KEY : Key<PsiElement[]>;
	static USAGE_INFOS_KEY : Key<Collection<UsageInfo>>;
	constructor();
	addElement(arg1 : PsiElement) : void;
	addMembers<T>(arg1 : T[], arg2 : Function<T, PsiElement>) : void;
	addElements(arg1 : Collection<PsiElement>) : void;
	addElements(arg1 : PsiElement[]) : void;
	addUsages(arg1 : Collection<UsageInfo>) : void;
	addStringProperties(arg1 : string[]) : void;
}


declare interface RefactoringEventData extends UserDataHolderBase {}
export = RefactoringEventData
