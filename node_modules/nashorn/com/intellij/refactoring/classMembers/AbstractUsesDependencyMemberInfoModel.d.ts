import NavigatablePsiElement = require('nashorn/com/intellij/psi/NavigatablePsiElement');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import MemberInfoBase = require('nashorn/com/intellij/refactoring/classMembers/MemberInfoBase');
import DependencyMemberInfoModel = require('nashorn/com/intellij/refactoring/classMembers/DependencyMemberInfoModel');

declare class AbstractUsesDependencyMemberInfoModel<T extends NavigatablePsiElement, C extends PsiElement, M extends MemberInfoBase<T>> {
	constructor(arg1 : C, arg2 : C, arg3 : boolean);
	doCheck(arg1 : M, arg2 : number) : number;
	setSuperClass(arg1 : C) : void;
}


declare interface AbstractUsesDependencyMemberInfoModel<T extends NavigatablePsiElement, C extends PsiElement, M extends MemberInfoBase<T>> extends DependencyMemberInfoModel<T, M> {}
export = AbstractUsesDependencyMemberInfoModel
