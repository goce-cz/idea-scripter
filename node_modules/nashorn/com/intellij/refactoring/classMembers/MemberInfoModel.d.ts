import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import MemberInfoBase = require('nashorn/com/intellij/refactoring/classMembers/MemberInfoBase');
import MemberInfoChangeListener = require('nashorn/com/intellij/refactoring/classMembers/MemberInfoChangeListener');

declare class MemberInfoModel<T extends PsiElement, M extends MemberInfoBase<T>> {
	static OK : number;
	static WARNING : number;
	static ERROR : number;
	isMemberEnabled(arg1 : M) : boolean;
	isCheckedWhenDisabled(arg1 : M) : boolean;
	isAbstractEnabled(arg1 : M) : boolean;
	isAbstractWhenDisabled(arg1 : M) : boolean;
	isFixedAbstract(arg1 : M) : boolean;
	checkForProblems(arg1 : M) : number;
	getTooltipText(arg1 : M) : string;
}


declare interface MemberInfoModel<T extends PsiElement, M extends MemberInfoBase<T>> extends MemberInfoChangeListener<T, M> {}
export = MemberInfoModel
