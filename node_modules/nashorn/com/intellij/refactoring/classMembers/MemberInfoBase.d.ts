import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Object = require('nashorn/java/lang/Object');

declare class MemberInfoBase<T extends PsiElement> extends Object {
	displayName : string;
	checked : boolean;
	overrides : boolean;
	member : T;
	toAbstract : boolean;
	constructor(arg1 : T);
	isStatic() : boolean;
	getDisplayName() : string;
	isChecked() : boolean;
	setChecked(arg1 : boolean) : void;
	getOverrides() : boolean;
	getMember() : T;
	updateMember(arg1 : T) : void;
	isToAbstract() : boolean;
	setToAbstract(arg1 : boolean) : void;
}


declare module MemberInfoBase {
	class EmptyFilter<T extends PsiElement> {
		constructor();
	}


	interface EmptyFilter<T extends PsiElement> extends MemberInfoBase.Filter<T> {}	class Filter<T extends PsiElement> extends Object {
		includeMember(arg1 : T) : boolean;
	}
}

export = MemberInfoBase
