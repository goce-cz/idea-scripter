import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import MemberInfoBase = require('nashorn/com/intellij/refactoring/classMembers/MemberInfoBase');
import JComponent = require('nashorn/javax/swing/JComponent');
import PsiDirectory = require('nashorn/com/intellij/psi/PsiDirectory');
import Collection = require('nashorn/java/util/Collection');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import List = require('nashorn/java/util/List');
import ComponentWithBrowseButton = require('nashorn/com/intellij/openapi/ui/ComponentWithBrowseButton');
import JPanel = require('nashorn/javax/swing/JPanel');
import JTextField = require('nashorn/javax/swing/JTextField');
import BaseRefactoringProcessor = require('nashorn/com/intellij/refactoring/BaseRefactoringProcessor');
import Box = require('nashorn/javax/swing/Box');
import ButtonGroup = require('nashorn/javax/swing/ButtonGroup');
import RefactoringDialog = require('nashorn/com/intellij/refactoring/ui/RefactoringDialog');
import Exception = require('nashorn/java/lang/Exception');

declare class ExtractSuperBaseDialog<ClassType extends PsiElement, MemberInfoType extends MemberInfoBase> {
	preferredFocusedComponent : JComponent;
	extractedSuperName : string;
	targetDirectory : PsiDirectory;
	docCommentPolicy : number;
	extractSuperclass : boolean;
	selectedMemberInfos : Collection<MemberInfoType>;
	constructor(arg1 : Project, arg2 : ClassType, arg3 : List<MemberInfoType>, arg4 : string);
	createPackageNameField() : ComponentWithBrowseButton;
	createDestinationRootPanel() : JPanel;
	createSourceClassField() : JTextField;
	getDocCommentPanelName() : string;
	getExtractedSuperNameNotSpecifiedMessage() : string;
	createProcessor() : BaseRefactoringProcessor;
	getDocCommentPolicySetting() : number;
	setDocCommentPolicySetting(arg1 : number) : void;
	validateName(arg1 : string) : string;
	getTopLabelText() : string;
	getClassNameLabelText() : string;
	getPackageNameLabelText() : string;
	getEntityName() : string;
	preparePackage() : void;
	getDestinationPackageRecentKey() : string;
	createExtractedSuperNameField() : JTextField;
	createActionComponent() : JComponent;
	customizeRadiobuttons(arg1 : Box, arg2 : ButtonGroup) : void;
	updateDialog() : void;
	getExtractedSuperName() : string;
	getTargetPackageName() : string;
	getTargetDirectory() : PsiDirectory;
	getDocCommentPolicy() : number;
	isExtractSuperclass() : boolean;
	executeRefactoring() : void;
	checkConflicts() : boolean;
	getSelectedMemberInfos() : Collection<MemberInfoType>;
}


declare interface ExtractSuperBaseDialog<ClassType extends PsiElement, MemberInfoType extends MemberInfoBase> extends RefactoringDialog {}

declare module ExtractSuperBaseDialog {
	class OperationFailedException {
		constructor(arg1 : string);
	}


	interface OperationFailedException extends Exception {}}

export = ExtractSuperBaseDialog
