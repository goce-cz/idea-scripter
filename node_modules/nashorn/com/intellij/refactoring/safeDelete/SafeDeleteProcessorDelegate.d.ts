import Object = require('nashorn/java/lang/Object');
import ExtensionPointName = require('nashorn/com/intellij/openapi/extensions/ExtensionPointName');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import List = require('nashorn/java/util/List');
import UsageInfo = require('nashorn/com/intellij/usageView/UsageInfo');
import NonCodeUsageSearchInfo = require('nashorn/com/intellij/refactoring/safeDelete/NonCodeUsageSearchInfo');
import Collection = require('nashorn/java/util/Collection');
import Project = require('nashorn/com/intellij/openapi/project/Project');

declare class SafeDeleteProcessorDelegate extends Object {
	static EP_NAME : ExtensionPointName<SafeDeleteProcessorDelegate>;
	handlesElement(arg1 : PsiElement) : boolean;
	findUsages(arg1 : PsiElement, arg2 : PsiElement[], arg3 : List<UsageInfo>) : NonCodeUsageSearchInfo;
	getElementsToSearch(arg1 : PsiElement, arg2 : Collection<PsiElement>) : Collection<PsiElement>;
	getAdditionalElementsToDelete(arg1 : PsiElement, arg2 : Collection<PsiElement>, arg3 : boolean) : Collection<PsiElement>;
	findConflicts(arg1 : PsiElement, arg2 : PsiElement[]) : Collection<string>;
	preprocessUsages(arg1 : Project, arg2 : UsageInfo[]) : UsageInfo[];
	prepareForDeletion(arg1 : PsiElement) : void;
	isToSearchInComments(arg1 : PsiElement) : boolean;
	setToSearchInComments(arg1 : PsiElement, arg2 : boolean) : void;
	isToSearchForTextOccurrences(arg1 : PsiElement) : boolean;
	setToSearchForTextOccurrences(arg1 : PsiElement, arg2 : boolean) : void;
}

export = SafeDeleteProcessorDelegate
