import Object = require('nashorn/java/lang/Object');
import Collection = require('nashorn/java/util/Collection');
import File = require('nashorn/java/io/File');
import ConversionProcessor = require('nashorn/com/intellij/conversion/ConversionProcessor');
import ProjectSettings = require('nashorn/com/intellij/conversion/ProjectSettings');
import ModuleSettings = require('nashorn/com/intellij/conversion/ModuleSettings');
import WorkspaceSettings = require('nashorn/com/intellij/conversion/WorkspaceSettings');
import RunManagerSettings = require('nashorn/com/intellij/conversion/RunManagerSettings');
import ProjectLibrariesSettings = require('nashorn/com/intellij/conversion/ProjectLibrariesSettings');
import ArtifactsSettings = require('nashorn/com/intellij/conversion/ArtifactsSettings');

declare class ProjectConverter extends Object {
	additionalAffectedFiles : Collection<File>;
	createdFiles : Collection<File>;
	conversionNeeded : boolean;
	constructor();
	createProjectFileConverter() : ConversionProcessor<ProjectSettings>;
	createModuleFileConverter() : ConversionProcessor<ModuleSettings>;
	createWorkspaceFileConverter() : ConversionProcessor<WorkspaceSettings>;
	createRunConfigurationsConverter() : ConversionProcessor<RunManagerSettings>;
	createProjectLibrariesConverter() : ConversionProcessor<ProjectLibrariesSettings>;
	createArtifactsConverter() : ConversionProcessor<ArtifactsSettings>;
	getAdditionalAffectedFiles() : Collection<File>;
	getCreatedFiles() : Collection<File>;
	isConversionNeeded() : boolean;
	preProcessingFinished() : void;
	processingFinished() : void;
	postProcessingFinished() : void;
}

export = ProjectConverter
