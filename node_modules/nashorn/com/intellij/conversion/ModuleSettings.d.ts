import File = require('nashorn/java/io/File');
import Collection = require('nashorn/java/util/Collection');
import List = require('nashorn/java/util/List');
import Element = require('nashorn/org/jdom/Element');
import ComponentManagerSettings = require('nashorn/com/intellij/conversion/ComponentManagerSettings');

declare class ModuleSettings {
	static MODULE_ROOT_MANAGER_COMPONENT : string;
	moduleName : string;
	moduleType : string;
	moduleFile : File;
	contentRoots : Collection<File>;
	projectOutputUrl : string;
	allModuleDependencies : Collection<ModuleSettings>;
	orderEntries : List<Element>;
	getModuleName() : string;
	getModuleType() : string;
	getModuleFile() : File;
	getFacetElements(arg1 : string) : Collection<Element>;
	getFacetElement(arg1 : string) : Element;
	setModuleType(arg1 : string) : void;
	expandPath(arg1 : string) : string;
	collapsePath(arg1 : string) : string;
	getSourceRoots(arg1 : boolean) : Collection<File>;
	getContentRoots() : Collection<File>;
	getProjectOutputUrl() : string;
	addExcludedFolder(arg1 : File) : void;
	getModuleLibraryRoots(arg1 : string) : List<File>;
	getAllModuleDependencies() : Collection<ModuleSettings>;
	hasModuleLibrary(arg1 : string) : boolean;
	getOrderEntries() : List<Element>;
	addFacetElement(arg1 : string, arg2 : string, arg3 : Element) : void;
}


declare interface ModuleSettings extends ComponentManagerSettings {}
export = ModuleSettings
