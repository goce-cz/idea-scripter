import Project = require('nashorn/com/intellij/openapi/project/Project');
import ModuleBuilder = require('nashorn/com/intellij/ide/util/projectWizard/ModuleBuilder');
import Facet = require('nashorn/com/intellij/facet/Facet');
import Module = require('nashorn/com/intellij/openapi/module/Module');
import FacetsProvider = require('nashorn/com/intellij/openapi/roots/ui/configuration/FacetsProvider');
import ModulesProvider = require('nashorn/com/intellij/openapi/roots/ui/configuration/ModulesProvider');
import ModifiableRootModel = require('nashorn/com/intellij/openapi/roots/ModifiableRootModel');
import ModuleRootModel = require('nashorn/com/intellij/openapi/roots/ModuleRootModel');
import Library = require('nashorn/com/intellij/openapi/roots/libraries/Library');
import WizardContext = require('nashorn/com/intellij/ide/util/projectWizard/WizardContext');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import OrderRootType = require('nashorn/com/intellij/openapi/roots/OrderRootType');
import UserDataHolder = require('nashorn/com/intellij/openapi/util/UserDataHolder');

declare class FacetEditorContext {
	project : Project;
	moduleBuilder : ModuleBuilder;
	newFacet : boolean;
	facet : Facet;
	module : Module;
	parentFacet : Facet;
	facetsProvider : FacetsProvider;
	modulesProvider : ModulesProvider;
	modifiableRootModel : ModifiableRootModel;
	rootModel : ModuleRootModel;
	libraries : Library[];
	wizardContext : WizardContext;
	facetName : string;
	getProject() : Project;
	findLibrary(arg1 : string) : Library;
	getModuleBuilder() : ModuleBuilder;
	isNewFacet() : boolean;
	getFacet() : Facet;
	getModule() : Module;
	getParentFacet() : Facet;
	getFacetsProvider() : FacetsProvider;
	getModulesProvider() : ModulesProvider;
	getModifiableRootModel() : ModifiableRootModel;
	getRootModel() : ModuleRootModel;
	getLibraries() : Library[];
	getWizardContext() : WizardContext;
	createProjectLibrary(arg1 : string, arg2 : VirtualFile[], arg3 : VirtualFile[]) : Library;
	getLibraryFiles(arg1 : Library, arg2 : OrderRootType) : VirtualFile[];
	getFacetName() : string;
}


declare interface FacetEditorContext extends UserDataHolder {}
export = FacetEditorContext
