import FacetConfiguration = require('nashorn/com/intellij/facet/FacetConfiguration');
import Object = require('nashorn/java/lang/Object');
import DetectedFacetPresentation = require('nashorn/com/intellij/facet/autodetecting/DetectedFacetPresentation');
import FileType = require('nashorn/com/intellij/openapi/fileTypes/FileType');
import VirtualFileFilter = require('nashorn/com/intellij/openapi/vfs/VirtualFileFilter');
import Condition = require('nashorn/com/intellij/openapi/util/Condition');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import FacetDetector = require('nashorn/com/intellij/facet/autodetecting/FacetDetector');
import VirtualFilePattern = require('nashorn/com/intellij/patterns/VirtualFilePattern');
import ElementPattern = require('nashorn/com/intellij/patterns/ElementPattern');
import UnderlyingFacetSelector = require('nashorn/com/intellij/facet/autodetecting/UnderlyingFacetSelector');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');

declare class FacetDetectorRegistry<C extends FacetConfiguration> extends Object {
	customizeDetectedFacetPresentation(arg1 : DetectedFacetPresentation) : void;
	registerOnTheFlyDetector(arg1 : FileType, arg2 : VirtualFileFilter, arg3 : Condition<PsiFile>, arg4 : FacetDetector<PsiFile, C>) : void;
	registerOnTheFlyDetector(arg1 : FileType, arg2 : VirtualFilePattern, arg3 : ElementPattern<PsiFile>, arg4 : FacetDetector<PsiFile, C>) : void;
	registerOnTheFlySubFacetDetector<U extends FacetConfiguration>(arg1 : FileType, arg2 : VirtualFilePattern, arg3 : ElementPattern<PsiFile>, arg4 : FacetDetector<PsiFile, C>, arg5 : UnderlyingFacetSelector<VirtualFile, U>) : void;
	registerDetectorForWizard(arg1 : FileType, arg2 : VirtualFileFilter, arg3 : FacetDetector<VirtualFile, C>) : void;
	registerDetectorForWizard(arg1 : FileType, arg2 : VirtualFilePattern, arg3 : FacetDetector<VirtualFile, C>) : void;
	registerSubFacetDetectorForWizard<U extends FacetConfiguration>(arg1 : FileType, arg2 : VirtualFilePattern, arg3 : FacetDetector<VirtualFile, C>, arg4 : UnderlyingFacetSelector<VirtualFile, U>) : void;
	registerUniversalDetector(arg1 : FileType, arg2 : VirtualFileFilter, arg3 : FacetDetector<VirtualFile, C>) : void;
	registerUniversalDetector(arg1 : FileType, arg2 : VirtualFilePattern, arg3 : FacetDetector<VirtualFile, C>) : void;
	registerUniversalSubFacetDetector<U extends FacetConfiguration>(arg1 : FileType, arg2 : VirtualFilePattern, arg3 : FacetDetector<VirtualFile, C>, arg4 : UnderlyingFacetSelector<VirtualFile, U>) : void;
}

export = FacetDetectorRegistry
