import FacetConfiguration = require('nashorn/com/intellij/facet/FacetConfiguration');
import Object = require('nashorn/java/lang/Object');
import Collection = require('nashorn/java/util/Collection');
import Facet = require('nashorn/com/intellij/facet/Facet');
import FacetModel = require('nashorn/com/intellij/facet/FacetModel');
import ModifiableRootModel = require('nashorn/com/intellij/openapi/roots/ModifiableRootModel');

declare class FacetDetector<T, C extends FacetConfiguration> extends Object {
	id : string;
	getId() : string;
	detectFacet(arg1 : T, arg2 : Collection<C>) : C;
	beforeFacetAdded(arg1 : Facet, arg2 : FacetModel, arg3 : ModifiableRootModel) : void;
	afterFacetAdded(arg1 : Facet) : void;
}

export = FacetDetector
