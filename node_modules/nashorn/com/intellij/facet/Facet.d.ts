import FacetConfiguration = require('nashorn/com/intellij/facet/FacetConfiguration');
import FacetType = require('nashorn/com/intellij/facet/FacetType');
import FacetTypeId = require('nashorn/com/intellij/facet/FacetTypeId');
import Module = require('nashorn/com/intellij/openapi/module/Module');
import UserDataHolderBase = require('nashorn/com/intellij/openapi/util/UserDataHolderBase');
import UserDataHolder = require('nashorn/com/intellij/openapi/util/UserDataHolder');
import Disposable = require('nashorn/com/intellij/openapi/Disposable');

declare class Facet<C extends FacetConfiguration> {
	static EMPTY_ARRAY : Facet[];
	type : FacetType;
	typeId : FacetTypeId;
	underlyingFacet : Facet;
	configuration : C;
	module : Module;
	disposed : boolean;
	name : string;
	constructor(arg1 : FacetType, arg2 : Module, arg3 : string, arg4 : C, arg5 : Facet);
	getType() : FacetType;
	getTypeId() : FacetTypeId;
	getUnderlyingFacet() : Facet;
	getConfiguration() : C;
	getModule() : Module;
	isDisposed() : boolean;
	initFacet() : void;
	disposeFacet() : void;
	getName() : string;
	setName(arg1 : string) : void;
}


declare interface Facet<C extends FacetConfiguration> extends UserDataHolderBase, UserDataHolder, Disposable {}
export = Facet
