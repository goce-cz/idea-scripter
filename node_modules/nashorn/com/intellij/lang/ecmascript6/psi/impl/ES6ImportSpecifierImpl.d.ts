import ES6ImportSpecifierAlias = require('nashorn/com/intellij/lang/ecmascript6/psi/ES6ImportSpecifierAlias');
import Object = require('nashorn/java/lang/Object');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import ES6ImportExportSpecifierBase = require('nashorn/com/intellij/lang/ecmascript6/psi/impl/ES6ImportExportSpecifierBase');
import ES6ImportSpecifier = require('nashorn/com/intellij/lang/ecmascript6/psi/ES6ImportSpecifier');
import BindablePsiReference = require('nashorn/com/intellij/refactoring/rename/BindablePsiReference');

declare class ES6ImportSpecifierImpl {
	alias : ES6ImportSpecifierAlias;
	variants : Object[];
	constructor(arg1 : ASTNode);
}


declare interface ES6ImportSpecifierImpl extends ES6ImportExportSpecifierBase, ES6ImportSpecifier, BindablePsiReference {}
export = ES6ImportSpecifierImpl
