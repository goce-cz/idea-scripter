import Lexer = require('nashorn/com/intellij/lexer/Lexer');
import TokenSet = require('nashorn/com/intellij/psi/tree/TokenSet');
import Processor = require('nashorn/com/intellij/util/Processor');
import WordOccurrence = require('nashorn/com/intellij/lang/cacheBuilder/WordOccurrence');
import CharSequence = require('nashorn/java/lang/CharSequence');
import VersionedWordsScanner = require('nashorn/com/intellij/lang/cacheBuilder/VersionedWordsScanner');

declare class DefaultWordsScanner {
	constructor(arg1 : Lexer, arg2 : TokenSet, arg3 : TokenSet, arg4 : TokenSet);
	constructor(arg1 : Lexer, arg2 : TokenSet, arg3 : TokenSet, arg4 : TokenSet, arg5 : TokenSet);
	static stripWords(arg1 : Processor<WordOccurrence>, arg2 : CharSequence, arg3 : number, arg4 : number, arg5 : WordOccurrence.Kind, arg6 : WordOccurrence, arg7 : boolean) : boolean;
	static isAsciiIdentifierPart(arg1 : string) : boolean;
	setMayHaveFileRefsInLiterals(arg1 : boolean) : void;
}


declare interface DefaultWordsScanner extends VersionedWordsScanner {}
export = DefaultWordsScanner
