import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import JsbtTaskListFetchFail = require('nashorn/com/intellij/lang/javascript/buildTools/base/JsbtTaskListFetchFail');
import List = require('nashorn/java/util/List');
import JsbtInvalidSetting = require('nashorn/com/intellij/lang/javascript/buildTools/base/JsbtInvalidSetting');
import JsbtService = require('nashorn/com/intellij/lang/javascript/buildTools/base/JsbtService');
import Icon = require('nashorn/javax/swing/Icon');
import GeneralCommandLine = require('nashorn/com/intellij/execution/configurations/GeneralCommandLine');
import ExecutionException = require('nashorn/com/intellij/execution/ExecutionException');
import ProcessHandler = require('nashorn/com/intellij/execution/process/ProcessHandler');
import ProcessOutput = require('nashorn/com/intellij/execution/process/ProcessOutput');
import Exception = require('nashorn/java/lang/Exception');

declare class JsbtTaskFetchException {
	buildfile : VirtualFile;
	fetchFail : JsbtTaskListFetchFail;
	description : string;
	getBuildfile() : VirtualFile;
	hasInvalidSettings() : boolean;
	getFetchFail() : JsbtTaskListFetchFail;
	getDescription() : string;
	static newInvalidSettings(arg1 : VirtualFile, arg2 : List<JsbtInvalidSetting>) : JsbtTaskFetchException;
	static newFetchFail(arg1 : VirtualFile, arg2 : JsbtService, arg3 : string, arg4 : Icon, arg5 : string, arg6 : GeneralCommandLine, arg7 : string, arg8 : ExecutionException, arg9 : ProcessHandler, arg10 : ProcessOutput) : JsbtTaskFetchException;
}


declare interface JsbtTaskFetchException extends Exception {}
export = JsbtTaskFetchException
