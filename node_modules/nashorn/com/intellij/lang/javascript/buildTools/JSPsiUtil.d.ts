import Object = require('nashorn/java/lang/Object');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSCallExpression = require('nashorn/com/intellij/lang/javascript/psi/JSCallExpression');
import JSArgumentList = require('nashorn/com/intellij/lang/javascript/psi/JSArgumentList');
import JSLiteralExpression = require('nashorn/com/intellij/lang/javascript/psi/JSLiteralExpression');
import JSObjectLiteralExpression = require('nashorn/com/intellij/lang/javascript/psi/JSObjectLiteralExpression');
import JSExpression = require('nashorn/com/intellij/lang/javascript/psi/JSExpression');
import JSProperty = require('nashorn/com/intellij/lang/javascript/psi/JSProperty');

declare class JSPsiUtil extends Object {
	static getCallExpression(arg1 : PsiElement) : JSCallExpression;
	static getSingleArgumentAsString(arg1 : JSArgumentList) : string;
	static getFirstArgumentAsString(arg1 : JSArgumentList) : string;
	static getFirstArgumentAsStringLiteral(arg1 : JSArgumentList) : JSLiteralExpression;
	static getFirstArgumentAsObjectLiteral(arg1 : JSArgumentList) : JSObjectLiteralExpression;
	static getStringLiteralValue(arg1 : JSExpression) : string;
	static getStringLiteralValue(arg1 : JSLiteralExpression) : string;
	static asStringLiteral(arg1 : JSExpression) : JSLiteralExpression;
	static isRequireCall(arg1 : JSCallExpression) : boolean;
	static getProperties(arg1 : JSObjectLiteralExpression) : JSProperty[];
	static findPropertyByName(arg1 : JSObjectLiteralExpression, arg2 : string) : JSProperty;
}

export = JSPsiUtil
