import Project = require('nashorn/com/intellij/openapi/project/Project');
import RawCommandLineEditor = require('nashorn/com/intellij/ui/RawCommandLineEditor');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import TextFieldWithHistoryWithBrowseButton = require('nashorn/com/intellij/ui/TextFieldWithHistoryWithBrowseButton');
import TextFieldWithHistory = require('nashorn/com/intellij/ui/TextFieldWithHistory');
import List = require('nashorn/java/util/List');
import SettingsEditor = require('nashorn/com/intellij/openapi/options/SettingsEditor');
import GulpRunConfiguration = require('nashorn/com/intellij/lang/javascript/buildTools/gulp/rc/GulpRunConfiguration');
import JComponent = require('nashorn/javax/swing/JComponent');
import ComponentWithBrowseButton = require('nashorn/com/intellij/openapi/ui/ComponentWithBrowseButton');

declare class GulpRunConfigurationEditor {
	constructor(arg1 : Project);
	static createArgumentsEditor() : RawCommandLineEditor;
	static createGulpPackageDirTextFieldWithBrowseButton(arg1 : Project, arg2 : VirtualFile) : TextFieldWithHistoryWithBrowseButton;
	static createNodeOptionsEditor() : RawCommandLineEditor;
	static createGulpfileFieldWithBrowseButton(arg1 : Project) : TextFieldWithHistoryWithBrowseButton;
	createTasksField() : TextFieldWithHistory;
	static encodeNames(arg1 : List<string>) : List<string>;
	updatePreferredWidth() : void;
	static setTextAndAddToHistory(arg1 : TextFieldWithHistory, arg2 : string) : void;
}


declare interface GulpRunConfigurationEditor extends SettingsEditor<GulpRunConfiguration> {}

declare module GulpRunConfigurationEditor {
	class ComponentWithEmptyBrowseButton<C extends JComponent> {
		constructor(arg1 : C);
		static wrap<C extends JComponent>(arg1 : C) : GulpRunConfigurationEditor.ComponentWithEmptyBrowseButton<C>;
	}


	interface ComponentWithEmptyBrowseButton<C extends JComponent> extends ComponentWithBrowseButton<C> {}}

export = GulpRunConfigurationEditor
