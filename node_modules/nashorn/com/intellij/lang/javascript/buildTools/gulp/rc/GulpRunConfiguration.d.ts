import GulpRunSettings = require('nashorn/com/intellij/lang/javascript/buildTools/gulp/rc/GulpRunSettings');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import SettingsEditor = require('nashorn/com/intellij/openapi/options/SettingsEditor');
import RunConfiguration = require('nashorn/com/intellij/execution/configurations/RunConfiguration');
import InetSocketAddress = require('nashorn/java/net/InetSocketAddress');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import ConfigurationFactory = require('nashorn/com/intellij/execution/configurations/ConfigurationFactory');
import LocatableConfigurationBase = require('nashorn/com/intellij/execution/configurations/LocatableConfigurationBase');
import NodeDebugRunConfiguration = require('nashorn/com/intellij/javascript/nodejs/debug/NodeDebugRunConfiguration');

declare class GulpRunConfiguration {
	runSettings : GulpRunSettings;
	gulpfile : VirtualFile;
	configurationEditor : SettingsEditor<RunConfiguration>;
	debugAddress : InetSocketAddress;
	constructor(arg1 : Project, arg2 : ConfigurationFactory, arg3 : string);
	detectDefaults() : void;
	getRunSettings() : GulpRunSettings;
	setRunSettings(arg1 : GulpRunSettings) : void;
	isTemplate() : boolean;
	static getTemplateRunConfiguration(arg1 : Project) : GulpRunConfiguration;
	static getTemplateRunSettings(arg1 : Project) : GulpRunSettings;
	static setTemplateRunSettings(arg1 : Project, arg2 : GulpRunSettings) : void;
	getGulpfile() : VirtualFile;
}


declare interface GulpRunConfiguration extends LocatableConfigurationBase, NodeDebugRunConfiguration {}
export = GulpRunConfiguration
