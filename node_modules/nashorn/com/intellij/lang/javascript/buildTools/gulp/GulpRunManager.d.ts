import Object = require('nashorn/java/lang/Object');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Executor = require('nashorn/com/intellij/execution/Executor');
import List = require('nashorn/java/util/List');
import Pair = require('nashorn/com/intellij/openapi/util/Pair');
import RunnerAndConfigurationSettings = require('nashorn/com/intellij/execution/RunnerAndConfigurationSettings');
import GulpRunSettings = require('nashorn/com/intellij/lang/javascript/buildTools/gulp/rc/GulpRunSettings');
import RunManager = require('nashorn/com/intellij/execution/RunManager');

declare class GulpRunManager extends Object {
	editRunConfigurationDialogShown : boolean;
	constructor(arg1 : Project);
	static getInstance(arg1 : Project) : GulpRunManager;
	canDebug() : boolean;
	canExecute(arg1 : Executor) : boolean;
	run(arg1 : string, arg2 : List<string>) : void;
	debug(arg1 : string, arg2 : List<string>) : void;
	execute(arg1 : Executor, arg2 : string, arg3 : List<string>) : void;
	editConfiguration(arg1 : string, arg2 : List<string>) : void;
	isEditRunConfigurationDialogShown() : boolean;
	findOrBuildSettings(arg1 : string, arg2 : List<string>) : Pair<RunnerAndConfigurationSettings, boolean>;
	findExistingConfiguration(arg1 : GulpRunSettings) : RunnerAndConfigurationSettings;
	static setUniqueName(arg1 : RunManager, arg2 : RunnerAndConfigurationSettings) : void;
}

export = GulpRunManager
