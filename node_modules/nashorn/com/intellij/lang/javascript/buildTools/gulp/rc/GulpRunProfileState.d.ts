import GulpRunSettings = require('nashorn/com/intellij/lang/javascript/buildTools/gulp/rc/GulpRunSettings');
import ExecutionEnvironment = require('nashorn/com/intellij/execution/runners/ExecutionEnvironment');
import GulpNonSharedSettings = require('nashorn/com/intellij/lang/javascript/buildTools/gulp/rc/GulpNonSharedSettings');
import ExecutionResult = require('nashorn/com/intellij/execution/ExecutionResult');
import ConsoleView = require('nashorn/com/intellij/execution/ui/ConsoleView');
import TypeScriptErrorConsoleFilter = require('nashorn/com/intellij/lang/javascript/buildTools/TypeScriptErrorConsoleFilter');
import ProcessHandler = require('nashorn/com/intellij/execution/process/ProcessHandler');
import GeneralCommandLine = require('nashorn/com/intellij/execution/configurations/GeneralCommandLine');
import BaseOSProcessHandler = require('nashorn/com/intellij/execution/process/BaseOSProcessHandler');
import RunProfileState = require('nashorn/com/intellij/execution/configurations/RunProfileState');
import NodeLocalDebugRunProfileState = require('nashorn/com/intellij/javascript/nodejs/debug/NodeLocalDebugRunProfileState');

declare class GulpRunProfileState {
	runSettings : GulpRunSettings;
	constructor(arg1 : ExecutionEnvironment, arg2 : GulpRunSettings, arg3 : GulpNonSharedSettings);
	getRunSettings() : GulpRunSettings;
	execute(arg1 : number) : ExecutionResult;
	createConsole() : ConsoleView;
	createTypeScriptFilter() : TypeScriptErrorConsoleFilter;
	startProcess(arg1 : number) : ProcessHandler;
	createCommandLine(arg1 : number) : GeneralCommandLine;
	static formatGulpMainFilePath(arg1 : string) : string;
	static doFoldCommandLine(arg1 : ConsoleView, arg2 : BaseOSProcessHandler, arg3 : string) : void;
}


declare interface GulpRunProfileState extends RunProfileState, NodeLocalDebugRunProfileState {}
export = GulpRunProfileState
