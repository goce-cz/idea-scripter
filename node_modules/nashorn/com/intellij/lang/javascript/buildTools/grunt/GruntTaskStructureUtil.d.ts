import Object = require('nashorn/java/lang/Object');
import File = require('nashorn/java/io/File');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import GruntfileStructure = require('nashorn/com/intellij/lang/javascript/buildTools/grunt/GruntfileStructure');
import List = require('nashorn/java/util/List');
import JsbtInvalidSetting = require('nashorn/com/intellij/lang/javascript/buildTools/base/JsbtInvalidSetting');
import GeneralCommandLine = require('nashorn/com/intellij/execution/configurations/GeneralCommandLine');
import ExecutionException = require('nashorn/com/intellij/execution/ExecutionException');
import ProcessHandler = require('nashorn/com/intellij/execution/process/ProcessHandler');
import ProcessOutput = require('nashorn/com/intellij/execution/process/ProcessOutput');
import JsbtTaskFetchException = require('nashorn/com/intellij/lang/javascript/buildTools/base/JsbtTaskFetchException');
import JsonObject = require('nashorn/com/google/gson/JsonObject');

declare class GruntTaskStructureUtil extends Object {
	static tasksDir : File;
	static fetchStructure(arg1 : string, arg2 : string, arg3 : string, arg4 : VirtualFile) : GruntfileStructure;
	static checkSettings(arg1 : string, arg2 : string) : List<JsbtInvalidSetting>;
	static newFetchFail(arg1 : VirtualFile, arg2 : string, arg3 : GeneralCommandLine, arg4 : ExecutionException, arg5 : ProcessHandler, arg6 : ProcessOutput) : JsbtTaskFetchException;
	static parseStructure(arg1 : VirtualFile, arg2 : string) : GruntfileStructure;
	static parseStructureFromLine(arg1 : VirtualFile, arg2 : string) : GruntfileStructure;
	static parseStructureFromElement(arg1 : VirtualFile, arg2 : JsonObject) : GruntfileStructure;
	static findGruntJsDir() : File;
	static getTasksDir() : File;
	static createCommandLine(arg1 : string, arg2 : string, arg3 : string, arg4 : VirtualFile) : GeneralCommandLine;
	static getGruntCliMainFilePath(arg1 : string) : string;
}

export = GruntTaskStructureUtil
