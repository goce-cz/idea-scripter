import Object = require('nashorn/java/lang/Object');
import Set = require('nashorn/java/util/Set');
import Map = require('nashorn/java/util/Map');
import JSProperty = require('nashorn/com/intellij/lang/javascript/psi/JSProperty');
import JSCallExpression = require('nashorn/com/intellij/lang/javascript/psi/JSCallExpression');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSFile = require('nashorn/com/intellij/lang/javascript/psi/JSFile');
import List = require('nashorn/java/util/List');
import JSStatement = require('nashorn/com/intellij/lang/javascript/psi/JSStatement');
import JSReferenceExpression = require('nashorn/com/intellij/lang/javascript/psi/JSReferenceExpression');
import JSExpression = require('nashorn/com/intellij/lang/javascript/psi/JSExpression');

declare class GruntfilePsiStructure extends Object {
	configKeys : Set<string>;
	constructor(arg1 : Map<string, JSProperty>, arg2 : Map<string, JSCallExpression>);
	getPsiElementToNavigateTo(arg1 : string, arg2 : string) : PsiElement;
	getConfigKeys() : Set<string>;
	static get(arg1 : JSFile) : GruntfilePsiStructure;
	static build(arg1 : JSFile) : GruntfilePsiStructure;
	static fillOptionsMap(arg1 : Map<string, JSProperty>, arg2 : List<JSStatement>) : void;
	static fillTasks(arg1 : Map<string, JSCallExpression>, arg2 : List<JSStatement>) : void;
	static isRegisterTaskName(arg1 : JSReferenceExpression) : boolean;
	static isModuleExports(arg1 : JSExpression) : boolean;
}

export = GruntfilePsiStructure
