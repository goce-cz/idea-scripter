import Object = require('nashorn/java/lang/Object');
import List = require('nashorn/java/util/List');
import Map = require('nashorn/java/util/Map');
import Element = require('nashorn/org/jdom/Element');

declare class GruntRunSettings extends Object {
	nodeOptions : string;
	gruntfilePath : string;
	tasks : List<string>;
	forceExecution : boolean;
	verboseMode : boolean;
	envVars : Map<string, string>;
	passParentEnvVars : boolean;
	constructor(arg1 : string, arg2 : string, arg3 : List<string>, arg4 : boolean, arg5 : boolean, arg6 : Map<string, string>, arg7 : boolean);
	getNodeOptions() : string;
	getGruntfilePath() : string;
	getTasks() : List<string>;
	isForceExecution() : boolean;
	isVerboseMode() : boolean;
	getEnvVars() : Map<string, string>;
	isPassParentEnvVars() : boolean;
	writeToXml(arg1 : Element) : void;
	writeTasks(arg1 : Element) : void;
	static readFromXml(arg1 : Element) : GruntRunSettings;
	static readBoolean(arg1 : Element, arg2 : string, arg3 : boolean) : boolean;
	static readTasks(arg1 : Element) : List<string>;
}


declare module GruntRunSettings {
	class Builder extends Object {
		constructor();
		constructor(arg1 : GruntRunSettings);
		setNodeOptions(arg1 : string) : GruntRunSettings.Builder;
		setGruntfilePath(arg1 : string) : GruntRunSettings.Builder;
		setTasks(arg1 : List<string>) : GruntRunSettings.Builder;
		setForceExecution(arg1 : boolean) : GruntRunSettings.Builder;
		setVerboseMode(arg1 : boolean) : GruntRunSettings.Builder;
		setEnvVars(arg1 : Map<string, string>) : GruntRunSettings.Builder;
		setPassParentEnvVars(arg1 : boolean) : GruntRunSettings.Builder;
		build() : GruntRunSettings;
	}
}

export = GruntRunSettings
