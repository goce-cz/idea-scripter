import Project = require('nashorn/com/intellij/openapi/project/Project');
import ProcessAdapter = require('nashorn/com/intellij/execution/process/ProcessAdapter');
import Object = require('nashorn/java/lang/Object');
import StringBuilder = require('nashorn/java/lang/StringBuilder');

declare class GruntWatchTaskListener {
	constructor(arg1 : Project, arg2 : string);
	getWholeLine(arg1 : string) : string;
	static isCompletedLine(arg1 : string) : boolean;
}


declare interface GruntWatchTaskListener extends ProcessAdapter {}

declare module GruntWatchTaskListener {
	class GruntWatchTaskVersion061State {
		constructor(arg1 : string);
	}


	interface GruntWatchTaskVersion061State extends GruntWatchTaskListener.GruntWatchTaskState {}	class GruntWatchTaskVersion044State {
	}


	interface GruntWatchTaskVersion044State extends GruntWatchTaskListener.GruntWatchTaskState {}	class GruntWatchTaskState extends Object {
		init() : void;
		onLine(arg1 : string) : boolean;
		onLinePrefix(arg1 : StringBuilder) : boolean;
	}
}

export = GruntWatchTaskListener
