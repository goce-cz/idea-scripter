import Element = require('nashorn/org/jdom/Element');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import GruntAliasTask = require('nashorn/com/intellij/lang/javascript/buildTools/grunt/GruntAliasTask');
import GruntCoreTask = require('nashorn/com/intellij/lang/javascript/buildTools/grunt/GruntCoreTask');
import GruntfileStructure = require('nashorn/com/intellij/lang/javascript/buildTools/grunt/GruntfileStructure');
import JsbtFileManager = require('nashorn/com/intellij/lang/javascript/buildTools/base/JsbtFileManager');
import PersistentStateComponent = require('nashorn/com/intellij/openapi/components/PersistentStateComponent');

declare class GruntfileManager {
	state : Element;
	constructor(arg1 : Project);
	static getInstance(arg1 : Project) : GruntfileManager;
	static aliasTaskToXml(arg1 : GruntAliasTask) : Element;
	static coreTaskToXml(arg1 : GruntCoreTask) : Element;
	static createAliasTask(arg1 : GruntfileStructure, arg2 : Element) : GruntAliasTask;
	static createCoreTask(arg1 : GruntfileStructure, arg2 : Element) : GruntCoreTask;
}


declare interface GruntfileManager extends JsbtFileManager, PersistentStateComponent<Element> {}
export = GruntfileManager
