import JComponent = require('nashorn/javax/swing/JComponent');
import GithubTagInfo = require('nashorn/com/intellij/platform/templates/github/GithubTagInfo');
import AbstractGithubTagDownloadedProjectGenerator = require('nashorn/com/intellij/lang/javascript/boilerplate/AbstractGithubTagDownloadedProjectGenerator');
import ImmutableSet = require('nashorn/com/google/common/collect/ImmutableSet');
import Collection = require('nashorn/java/util/Collection');
import List = require('nashorn/java/util/List');
import WebProjectGenerator = require('nashorn/com/intellij/platform/WebProjectGenerator');

declare class GithubProjectGeneratorPeer {
	component : JComponent;
	settings : GithubTagInfo;
	backgroundJobRunning : boolean;
	constructor(arg1 : AbstractGithubTagDownloadedProjectGenerator);
	a() : void;
	onTagsUpdated(arg1 : ImmutableSet<GithubTagInfo>) : void;
	onTagsUpdateError(arg1 : string) : void;
	static a(arg1 : Collection<GithubTagInfo>) : List<GithubTagInfo>;
	b() : void;
}


declare interface GithubProjectGeneratorPeer extends WebProjectGenerator.GeneratorPeer<GithubTagInfo> {}
export = GithubProjectGeneratorPeer
