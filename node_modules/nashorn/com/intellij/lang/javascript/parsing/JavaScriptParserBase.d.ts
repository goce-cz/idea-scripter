import JavaScriptParser = require('nashorn/com/intellij/lang/javascript/parsing/JavaScriptParser');
import Object = require('nashorn/java/lang/Object');
import Key = require('nashorn/com/intellij/openapi/util/Key');
import JSLanguageDialect = require('nashorn/com/intellij/lang/javascript/JSLanguageDialect');
import PsiBuilder = require('nashorn/com/intellij/lang/PsiBuilder');
import IElementType = require('nashorn/com/intellij/psi/tree/IElementType');
import Enum = require('nashorn/java/lang/Enum');

declare class JavaScriptParserBase<T extends JavaScriptParser> extends Object {
	static JS_DIALECT_KEY : Key<JSLanguageDialect>;
	static FORCE_CONTEXT_KEY : Key<JavaScriptParserBase.ForceContext>;
	static MAX_TREE_DEPTH : number;
	static hasSemanticLinefeedBefore(arg1 : PsiBuilder) : boolean;
	static checkMatches(arg1 : PsiBuilder, arg2 : IElementType, arg3 : string) : boolean;
	isECMAL4() : boolean;
	isGwt() : boolean;
	isECMA6() : boolean;
	isJavaScript() : boolean;
	isIdentifierToken(arg1 : IElementType) : boolean;
}


declare module JavaScriptParserBase {
	class ForceContext {
		static Type : JavaScriptParserBase.ForceContext;
		static Parameter : JavaScriptParserBase.ForceContext;
	}


	interface ForceContext extends Enum<JavaScriptParserBase.ForceContext> {}}

export = JavaScriptParserBase
