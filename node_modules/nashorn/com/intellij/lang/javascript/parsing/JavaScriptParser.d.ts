import ExpressionParser = require('nashorn/com/intellij/lang/javascript/parsing/ExpressionParser');
import StatementParser = require('nashorn/com/intellij/lang/javascript/parsing/StatementParser');
import FunctionParser = require('nashorn/com/intellij/lang/javascript/parsing/FunctionParser');
import Object = require('nashorn/java/lang/Object');
import JSLanguageDialect = require('nashorn/com/intellij/lang/javascript/JSLanguageDialect');
import PsiBuilder = require('nashorn/com/intellij/lang/PsiBuilder');
import IElementType = require('nashorn/com/intellij/psi/tree/IElementType');

declare class JavaScriptParser<E extends ExpressionParser, S extends StatementParser, F extends FunctionParser> extends Object {
	expressionParser : E;
	statementParser : S;
	functionParser : F;
	constructor(arg1 : JSLanguageDialect, arg2 : PsiBuilder);
	parseJS(arg1 : IElementType) : void;
	getExpressionParser() : E;
	getStatementParser() : S;
	getFunctionParser() : F;
	isIdentifierToken(arg1 : IElementType) : boolean;
}

export = JavaScriptParser
