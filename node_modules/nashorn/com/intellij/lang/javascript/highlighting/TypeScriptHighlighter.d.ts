import TextAttributesKey = require('nashorn/com/intellij/openapi/editor/colors/TextAttributesKey');
import IElementType = require('nashorn/com/intellij/psi/tree/IElementType');
import JSHighlighter = require('nashorn/com/intellij/lang/javascript/highlighting/JSHighlighter');

declare class TypeScriptHighlighter {
	static TS_KEYWORD : TextAttributesKey;
	static TS_STRING : TextAttributesKey;
	static TS_NUMBER : TextAttributesKey;
	static TS_REGEXP : TextAttributesKey;
	static TS_LINE_COMMENT : TextAttributesKey;
	static TS_BLOCK_COMMENT : TextAttributesKey;
	static TS_DOC_COMMENT : TextAttributesKey;
	static TS_OPERATION_SIGN : TextAttributesKey;
	static TS_PARENTHS : TextAttributesKey;
	static TS_BRACKETS : TextAttributesKey;
	static TS_BRACES : TextAttributesKey;
	static TS_COMMA : TextAttributesKey;
	static TS_DOT : TextAttributesKey;
	static TS_SEMICOLON : TextAttributesKey;
	static TS_BAD_CHARACTER : TextAttributesKey;
	static TS_DOC_TAG : TextAttributesKey;
	static TS_DOC_MARKUP : TextAttributesKey;
	static TS_VALID_STRING_ESCAPE : TextAttributesKey;
	static TS_INVALID_STRING_ESCAPE : TextAttributesKey;
	static TS_LOCAL_VARIABLE : TextAttributesKey;
	static TS_PARAMETER : TextAttributesKey;
	static TS_TYPE_PARAMETER : TextAttributesKey;
	static TS_INSTANCE_MEMBER_VARIABLE : TextAttributesKey;
	static TS_STATIC_MEMBER_VARIABLE : TextAttributesKey;
	static TS_GLOBAL_VARIABLE : TextAttributesKey;
	static TS_GLOBAL_FUNCTION : TextAttributesKey;
	static TS_STATIC_MEMBER_FUNCTION : TextAttributesKey;
	static TS_INSTANCE_MEMBER_FUNCTION : TextAttributesKey;
	static TS_CLASS : TextAttributesKey;
	static TS_INTERFACE : TextAttributesKey;
	static TS_MODULE_NAME : TextAttributesKey;
	constructor();
	static registerHtmlMarkupForTs(arg1 : IElementType[], arg2 : IElementType[]) : void;
}


declare interface TypeScriptHighlighter extends JSHighlighter {}
export = TypeScriptHighlighter
