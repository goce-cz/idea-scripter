import TextAttributesKey = require('nashorn/com/intellij/openapi/editor/colors/TextAttributesKey');
import Lexer = require('nashorn/com/intellij/lexer/Lexer');
import Map = require('nashorn/java/util/Map');
import IElementType = require('nashorn/com/intellij/psi/tree/IElementType');
import DialectOptionHolder = require('nashorn/com/intellij/lang/javascript/DialectOptionHolder');
import SyntaxHighlighterBase = require('nashorn/com/intellij/openapi/fileTypes/SyntaxHighlighterBase');

declare class JSHighlighter {
	static JS_OPERATION_SIGN : TextAttributesKey;
	static JS_LOCAL_VARIABLE : TextAttributesKey;
	static JS_GLOBAL_VARIABLE : TextAttributesKey;
	highlightingLexer : Lexer;
	keys1 : Map<IElementType, TextAttributesKey>;
	keys2 : Map<IElementType, TextAttributesKey>;
	dialectOptionsHolder : DialectOptionHolder;
	constructor(arg1 : DialectOptionHolder);
	getKeys1() : Map<IElementType, TextAttributesKey>;
	getKeys2() : Map<IElementType, TextAttributesKey>;
	getMappedKey(arg1 : TextAttributesKey) : TextAttributesKey;
	static registerHtmlMarkup(arg1 : IElementType[], arg2 : IElementType[]) : void;
	getDialectOptionsHolder() : DialectOptionHolder;
}


declare interface JSHighlighter extends SyntaxHighlighterBase {}
export = JSHighlighter
