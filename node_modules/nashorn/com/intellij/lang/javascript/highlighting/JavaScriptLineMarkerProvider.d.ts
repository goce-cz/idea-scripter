import Function = require('nashorn/com/intellij/util/Function');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import DaemonCodeAnalyzerSettings = require('nashorn/com/intellij/codeInsight/daemon/DaemonCodeAnalyzerSettings');
import EditorColorsManager = require('nashorn/com/intellij/openapi/editor/colors/EditorColorsManager');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Class = require('nashorn/java/lang/Class');
import LineMarkerInfo = require('nashorn/com/intellij/codeInsight/daemon/LineMarkerInfo');
import JSElement = require('nashorn/com/intellij/lang/javascript/psi/JSElement');
import Map = require('nashorn/java/util/Map');
import Set = require('nashorn/java/util/Set');
import JSPsiElementBase = require('nashorn/com/intellij/lang/javascript/psi/JSPsiElementBase');
import Collection = require('nashorn/java/util/Collection');
import NavigatablePsiElement = require('nashorn/com/intellij/psi/NavigatablePsiElement');
import MouseEvent = require('nashorn/java/awt/event/MouseEvent');
import LineMarkerProvider = require('nashorn/com/intellij/codeInsight/daemon/LineMarkerProvider');
import Query = require('nashorn/com/intellij/util/Query');
import GutterIconNavigationHandler = require('nashorn/com/intellij/codeInsight/daemon/GutterIconNavigationHandler');

declare class JavaScriptLineMarkerProvider {
	static ourClassInheritorsTooltipProvider : Function<JSClass, string>;
	static ourClassInheritorsNavHandler : JavaScriptLineMarkerProvider.BasicGutterIconNavigationHandler<JSClass>;
	static ourInterfaceImplementationsNavHandler : JavaScriptLineMarkerProvider.BasicGutterIconNavigationHandler<JSClass>;
	constructor(arg1 : DaemonCodeAnalyzerSettings, arg2 : EditorColorsManager);
	static findPrev(arg1 : PsiElement, arg2 : Class[]) : PsiElement;
	static createBottomMethodSeparatorLineMarker(arg1 : PsiElement, arg2 : EditorColorsManager) : LineMarkerInfo;
	findElementToStartMethodSeparator(arg1 : PsiElement) : PsiElement;
	static isExtension(arg1 : JSElement) : boolean;
	addJSSymbolToSearch(arg1 : Map<string, Set<JSPsiElementBase>>, arg2 : JSPsiElementBase) : void;
	static doNavigate(arg1 : Collection<NavigatablePsiElement>, arg2 : string, arg3 : MouseEvent) : void;
}


declare interface JavaScriptLineMarkerProvider extends LineMarkerProvider {}

declare module JavaScriptLineMarkerProvider {
	class BasicGutterIconNavigationHandler<T extends PsiElement> {
		constructor();
		getTitle(arg1 : T, arg2 : number) : string;
		search(arg1 : T) : Query<T>;
	}


	interface BasicGutterIconNavigationHandler<T extends PsiElement> extends GutterIconNavigationHandler<T> {}}

export = JavaScriptLineMarkerProvider
