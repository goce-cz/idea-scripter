import Object = require('nashorn/java/lang/Object');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSTextAttributeKeysProvider = require('nashorn/com/intellij/lang/javascript/highlighting/JSTextAttributeKeysProvider');
import JSReferenceExpression = require('nashorn/com/intellij/lang/javascript/psi/JSReferenceExpression');
import JSHighlighter = require('nashorn/com/intellij/lang/javascript/highlighting/JSHighlighter');
import AnnotationHolder = require('nashorn/com/intellij/lang/annotation/AnnotationHolder');
import JSAttribute = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttribute');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import TextAttributesKey = require('nashorn/com/intellij/openapi/editor/colors/TextAttributesKey');
import JSProperty = require('nashorn/com/intellij/lang/javascript/psi/JSProperty');
import JSVariable = require('nashorn/com/intellij/lang/javascript/psi/JSVariable');
import TypeScriptPropertySignature = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptPropertySignature');
import TypeScriptFunctionSignature = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptFunctionSignature');
import TypeScriptTypeParameter = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptTypeParameter');
import TypeScriptIndexSignature = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptIndexSignature');

declare class JSSemanticHighlightingUtil extends Object {
	static INSTANCE_FIELD : string;
	static INSTANCE_METHOD : string;
	static PARAMETER_MESSAGE : string;
	static isClass(arg1 : PsiElement) : boolean;
	static isTypeScriptInterfaceReference(arg1 : PsiElement) : boolean;
	static getTextAttributeKeysProvider(arg1 : PsiElement) : JSTextAttributeKeysProvider;
	static highlight(arg1 : JSReferenceExpression, arg2 : JSHighlighter, arg3 : AnnotationHolder) : void;
	static buildHighlightForClass(arg1 : JSReferenceExpression, arg2 : boolean, arg3 : JSHighlighter, arg4 : AnnotationHolder) : void;
	static buildHighlightForVariable(arg1 : PsiElement, arg2 : PsiElement, arg3 : JSHighlighter, arg4 : AnnotationHolder) : void;
	static highlight(arg1 : JSAttribute, arg2 : AnnotationHolder) : void;
	static highlightKeyword(arg1 : ASTNode, arg2 : AnnotationHolder) : void;
	static lineMarker(arg1 : PsiElement, arg2 : TextAttributesKey, arg3 : string, arg4 : AnnotationHolder) : void;
	static justLineMarker(arg1 : PsiElement, arg2 : TextAttributesKey, arg3 : string, arg4 : AnnotationHolder) : void;
	static highlight(arg1 : JSProperty, arg2 : JSHighlighter, arg3 : AnnotationHolder) : void;
	static highlight(arg1 : JSVariable, arg2 : JSHighlighter, arg3 : AnnotationHolder) : void;
	static highlight(arg1 : TypeScriptPropertySignature, arg2 : JSHighlighter, arg3 : AnnotationHolder) : void;
	static highlight(arg1 : TypeScriptFunctionSignature, arg2 : JSHighlighter, arg3 : AnnotationHolder) : void;
	static highlight(arg1 : TypeScriptTypeParameter, arg2 : JSHighlighter, arg3 : AnnotationHolder) : void;
	static highlight(arg1 : TypeScriptIndexSignature, arg2 : JSHighlighter, arg3 : AnnotationHolder) : void;
}


declare module JSSemanticHighlightingUtil {
	class TextAttributeKeyInfo extends Object {
		type : TextAttributesKey;
		text : string;
		constructor(arg1 : TextAttributesKey, arg2 : string);
		constructor();
		getType() : TextAttributesKey;
		getText() : string;
	}
}

export = JSSemanticHighlightingUtil
