import StructureViewTreeElement = require('nashorn/com/intellij/ide/structureView/StructureViewTreeElement');
import Grouper = require('nashorn/com/intellij/ide/util/treeView/smartTree/Grouper');
import Sorter = require('nashorn/com/intellij/ide/util/treeView/smartTree/Sorter');
import Filter = require('nashorn/com/intellij/ide/util/treeView/smartTree/Filter');
import Object = require('nashorn/java/lang/Object');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import JSStructureViewElement = require('nashorn/com/intellij/lang/javascript/structureView/JSStructureViewElement');
import TextEditorBasedStructureViewModel = require('nashorn/com/intellij/ide/structureView/TextEditorBasedStructureViewModel');
import StructureViewModel = require('nashorn/com/intellij/ide/structureView/StructureViewModel');
import ActionPresentation = require('nashorn/com/intellij/ide/util/treeView/smartTree/ActionPresentation');
import Shortcut = require('nashorn/com/intellij/openapi/actionSystem/Shortcut');
import FileStructureFilter = require('nashorn/com/intellij/ide/util/FileStructureFilter');
import ActionShortcutProvider = require('nashorn/com/intellij/ide/util/ActionShortcutProvider');

declare class JSStructureViewModel {
	root : StructureViewTreeElement;
	groupers : Grouper[];
	sorters : Sorter[];
	filters : Filter[];
	currentEditorElement : Object;
	constructor(arg1 : PsiElement, arg2 : Editor);
	createRoot(arg1 : PsiElement) : JSStructureViewElement;
	setFilters(arg1 : Filter[]) : void;
	setGroupers(arg1 : Grouper[]) : void;
	setSorters(arg1 : Sorter[]) : void;
	static shouldEnterElementStatic(arg1 : Object) : boolean;
}


declare interface JSStructureViewModel extends TextEditorBasedStructureViewModel, StructureViewModel.ElementInfoProvider {}

declare module JSStructureViewModel {
	class MyFileStructureFilter {
		static ID : string;
		presentation : ActionPresentation;
		name : string;
		reverted : boolean;
		checkBoxText : string;
		actionIdForShortcut : string;
		shortcut : Shortcut[];
	}


	interface MyFileStructureFilter extends FileStructureFilter, ActionShortcutProvider {}}

export = JSStructureViewModel
