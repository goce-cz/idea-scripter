import Object = require('nashorn/java/lang/Object');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import DialectOptionHolder = require('nashorn/com/intellij/lang/javascript/DialectOptionHolder');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import Language = require('nashorn/com/intellij/lang/Language');
import JSLanguageDialect = require('nashorn/com/intellij/lang/javascript/JSLanguageDialect');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import Project = require('nashorn/com/intellij/openapi/project/Project');

declare class DialectDetector extends Object {
	constructor();
	static dialectOfElement(arg1 : PsiElement) : DialectOptionHolder;
	static dialectOfFile(arg1 : PsiFile) : DialectOptionHolder;
	static dialectOfFileNoCache(arg1 : PsiFile) : DialectOptionHolder;
	static languageOfElement(arg1 : PsiElement) : Language;
	static languageDialectOfElement(arg1 : PsiElement) : JSLanguageDialect;
	static isTypeScript(arg1 : PsiElement) : boolean;
	static isAtScript(arg1 : PsiElement) : boolean;
	static isTypeScriptDefinitionFile(arg1 : PsiFile) : boolean;
	static isActionScript(arg1 : PsiElement) : boolean;
	static isJavaScript(arg1 : PsiElement) : boolean;
	static isJavaScriptOrES6(arg1 : PsiElement) : boolean;
	static getLanguageDialect(arg1 : VirtualFile, arg2 : Project) : JSLanguageDialect;
	static getLanguageDialect(arg1 : PsiElement) : JSLanguageDialect;
}

export = DialectDetector
