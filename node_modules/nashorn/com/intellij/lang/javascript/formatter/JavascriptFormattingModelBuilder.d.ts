import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import CodeStyleSettings = require('nashorn/com/intellij/psi/codeStyle/CodeStyleSettings');
import Block = require('nashorn/com/intellij/formatting/Block');
import FormattingModel = require('nashorn/com/intellij/formatting/FormattingModel');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import FormattingDocumentModel = require('nashorn/com/intellij/formatting/FormattingDocumentModel');
import XmlFormattingPolicy = require('nashorn/com/intellij/psi/formatter/xml/XmlFormattingPolicy');
import Language = require('nashorn/com/intellij/lang/Language');
import JSCodeStyleSettings = require('nashorn/com/intellij/lang/javascript/formatter/JSCodeStyleSettings');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import Alignment = require('nashorn/com/intellij/formatting/Alignment');
import Indent = require('nashorn/com/intellij/formatting/Indent');
import Wrap = require('nashorn/com/intellij/formatting/Wrap');
import ASTNodeBasedAlignmentFactory = require('nashorn/com/intellij/lang/javascript/formatter/blocks/alignment/ASTNodeBasedAlignmentFactory');
import JSBlock = require('nashorn/com/intellij/lang/javascript/formatter/blocks/JSBlock');
import FormattingModelBuilder = require('nashorn/com/intellij/formatting/FormattingModelBuilder');

declare class JavascriptFormattingModelBuilder {
	constructor();
	static createJSFormattingModel(arg1 : PsiFile, arg2 : CodeStyleSettings, arg3 : Block) : FormattingModel;
	getPolicy(arg1 : PsiElement, arg2 : CodeStyleSettings, arg3 : FormattingDocumentModel) : XmlFormattingPolicy;
	static getCustomSettings(arg1 : CodeStyleSettings, arg2 : Language) : JSCodeStyleSettings;
	createSubBlock(arg1 : ASTNode, arg2 : Alignment, arg3 : Indent, arg4 : Wrap, arg5 : CodeStyleSettings, arg6 : Language, arg7 : ASTNodeBasedAlignmentFactory) : JSBlock;
}


declare interface JavascriptFormattingModelBuilder extends FormattingModelBuilder {}
export = JavascriptFormattingModelBuilder
