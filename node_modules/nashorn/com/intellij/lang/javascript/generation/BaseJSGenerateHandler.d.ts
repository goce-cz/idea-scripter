import Project = require('nashorn/com/intellij/openapi/project/Project');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import Collection = require('nashorn/java/util/Collection');
import JSNamedElementNode = require('nashorn/com/intellij/lang/javascript/generation/JSNamedElementNode');
import BaseCreateMethodsFix = require('nashorn/com/intellij/lang/javascript/validation/fixes/BaseCreateMethodsFix');
import JSNamedElement = require('nashorn/com/intellij/lang/javascript/psi/JSNamedElement');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import MemberChooser = require('nashorn/com/intellij/ide/util/MemberChooser');
import JComponent = require('nashorn/javax/swing/JComponent');
import LanguageCodeInsightActionHandler = require('nashorn/com/intellij/lang/LanguageCodeInsightActionHandler');

declare class BaseJSGenerateHandler {
	constructor();
	setSkipMemberChooserDialog(arg1 : boolean) : void;
	getProductivityFeatureId() : string;
	doInvoke(arg1 : Project, arg2 : Editor, arg3 : PsiFile, arg4 : Collection<JSNamedElementNode>, arg5 : BaseCreateMethodsFix<JSNamedElement>) : void;
	createMemberChooserDialog(arg1 : Project, arg2 : JSClass, arg3 : Collection<JSNamedElementNode>, arg4 : boolean, arg5 : boolean, arg6 : string) : MemberChooser<JSNamedElementNode>;
	getOptionsComponent(arg1 : JSClass, arg2 : Collection<JSNamedElementNode>) : JComponent;
	canHaveEmptySelectedElements() : boolean;
	static findClass(arg1 : PsiFile, arg2 : Editor) : JSClass;
	getTitleKey() : string;
	getNoCandidatesMessage() : string;
	createFix(arg1 : JSClass) : BaseCreateMethodsFix;
	collectCandidatesAndShowDialog() : boolean;
	collectCandidates(arg1 : JSClass, arg2 : Collection<JSNamedElementNode>) : void;
	static collectJSVariables(arg1 : JSClass, arg2 : Collection<JSNamedElementNode>, arg3 : boolean, arg4 : boolean, arg5 : boolean) : void;
}


declare interface BaseJSGenerateHandler extends LanguageCodeInsightActionHandler {}
export = BaseJSGenerateHandler
