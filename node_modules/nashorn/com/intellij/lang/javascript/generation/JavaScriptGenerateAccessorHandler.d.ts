import BaseJSGenerateHandler = require('nashorn/com/intellij/lang/javascript/generation/BaseJSGenerateHandler');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import EventBinder = require('nashorn/com/intellij/lang/javascript/generation/EventBinder');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Collection = require('nashorn/java/util/Collection');
import JSVariable = require('nashorn/com/intellij/lang/javascript/psi/JSVariable');
import BaseCreateMethodsFix = require('nashorn/com/intellij/lang/javascript/validation/fixes/BaseCreateMethodsFix');
import Enum = require('nashorn/java/lang/Enum');

declare class JavaScriptGenerateAccessorHandler {
	static FLASH_EVENT_FQN : string;
	constructor(arg1 : JavaScriptGenerateAccessorHandler.GenerationMode);
}


declare interface JavaScriptGenerateAccessorHandler extends BaseJSGenerateHandler {}

declare module JavaScriptGenerateAccessorHandler {
	class MyBaseCreateMethodsFix {
		constructor(arg1 : JavaScriptGenerateAccessorHandler.GenerationMode, arg2 : JSClass, arg3 : EventBinder, arg4 : boolean, arg5 : string);
		createEventConstantAndImportEventIfNeeded(arg1 : Project, arg2 : Editor, arg3 : PsiElement, arg4 : Collection<JSVariable>) : void;
		createEventConstant(arg1 : Project, arg2 : Editor, arg3 : Collection<JSVariable>) : void;
		static findEventConstantIdentifier(arg1 : PsiElement, arg2 : string) : PsiElement;
	}


	interface MyBaseCreateMethodsFix extends BaseCreateMethodsFix<JSVariable> {}	class GenerationMode {
		static Getter : JavaScriptGenerateAccessorHandler.GenerationMode;
		static Setter : JavaScriptGenerateAccessorHandler.GenerationMode;
		static GetterAndSetter : JavaScriptGenerateAccessorHandler.GenerationMode;
	}


	interface GenerationMode extends Enum<JavaScriptGenerateAccessorHandler.GenerationMode> {}}

export = JavaScriptGenerateAccessorHandler
