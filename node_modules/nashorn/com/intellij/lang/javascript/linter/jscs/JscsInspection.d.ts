import HighlightDisplayKey = require('nashorn/com/intellij/codeInsight/daemon/HighlightDisplayKey');
import JSLinterInspection = require('nashorn/com/intellij/lang/javascript/linter/JSLinterInspection');
import JscsState = require('nashorn/com/intellij/lang/javascript/linter/jscs/JscsState');
import Class = require('nashorn/java/lang/Class');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import SuppressByCommentFix = require('nashorn/com/intellij/codeInsight/daemon/impl/actions/SuppressByCommentFix');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Document = require('nashorn/com/intellij/openapi/editor/Document');

declare class JscsInspection {
	static highlightDisplayKey : HighlightDisplayKey;
	displayName : string;
	constructor();
	static getHighlightDisplayKey() : HighlightDisplayKey;
}


declare interface JscsInspection extends JSLinterInspection<JscsState> {}

declare module JscsInspection {
	class JscsSuppressForFileByCommentFix {
		text : string;
		constructor(arg1 : HighlightDisplayKey, arg2 : Class<PsiElement>);
	}


	interface JscsSuppressForFileByCommentFix extends SuppressByCommentFix {}	class JscsSuppressForLineByCommentFix {
		text : string;
		constructor(arg1 : HighlightDisplayKey, arg2 : Class<PsiElement>);
		static suppressRuleForLine(arg1 : Project, arg2 : Document, arg3 : number, arg4 : string) : void;
	}


	interface JscsSuppressForLineByCommentFix extends SuppressByCommentFix {}}

export = JscsInspection
