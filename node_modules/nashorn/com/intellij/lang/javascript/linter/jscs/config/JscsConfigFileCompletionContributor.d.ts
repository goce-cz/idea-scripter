import CompletionResultSet = require('nashorn/com/intellij/codeInsight/completion/CompletionResultSet');
import JscsOption = require('nashorn/com/intellij/lang/javascript/linter/jscs/config/JscsOption');
import Convertor = require('nashorn/com/intellij/util/containers/Convertor');
import CompletionParameters = require('nashorn/com/intellij/codeInsight/completion/CompletionParameters');
import JsonProperty = require('nashorn/com/intellij/json/psi/JsonProperty');
import CompletionContributor = require('nashorn/com/intellij/codeInsight/completion/CompletionContributor');

declare class JscsConfigFileCompletionContributor {
	constructor();
	static completeInnerPropertyNames(arg1 : CompletionResultSet, arg2 : JscsOption, arg3 : Convertor<string, string>) : void;
	static fillVariantsForAllowedInnerObject(arg1 : CompletionParameters, arg2 : CompletionResultSet, arg3 : JscsOption, arg4 : string) : void;
	static fillVariantsInsideHighLevelValue(arg1 : CompletionParameters, arg2 : CompletionResultSet, arg3 : Convertor<string, string>, arg4 : JscsOption) : void;
	static getParentOptionForObjectValues(arg1 : JsonProperty) : JscsOption;
	static isHighLevelProperty(arg1 : JsonProperty) : boolean;
	static completePropertyNames(arg1 : CompletionResultSet, arg2 : Convertor<string, string>) : void;
	static addPropertyNameCompletionVariant(arg1 : CompletionResultSet, arg2 : Convertor<string, string>, arg3 : string, arg4 : string) : void;
}


declare interface JscsConfigFileCompletionContributor extends CompletionContributor {}
export = JscsConfigFileCompletionContributor
