import Object = require('nashorn/java/lang/Object');
import JSLinterInput = require('nashorn/com/intellij/lang/javascript/linter/JSLinterInput');
import JscsState = require('nashorn/com/intellij/lang/javascript/linter/jscs/JscsState');
import FilesMirror = require('nashorn/com/intellij/lang/javascript/linter/FilesMirror');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Getter = require('nashorn/com/intellij/openapi/util/Getter');
import File = require('nashorn/java/io/File');
import JSLinterAnnotationResult = require('nashorn/com/intellij/lang/javascript/linter/JSLinterAnnotationResult');
import Producer = require('nashorn/com/intellij/util/Producer');
import GeneralCommandLine = require('nashorn/com/intellij/execution/configurations/GeneralCommandLine');

declare class JscsExternalRunner extends Object {
	constructor(arg1 : JSLinterInput<JscsState>, arg2 : FilesMirror, arg3 : FilesMirror, arg4 : Project, arg5 : Getter<File>);
	execute() : JSLinterAnnotationResult<JscsState>;
	runExternalProcess() : Producer<JSLinterAnnotationResult<JscsState>>;
	createError(arg1 : string) : JSLinterAnnotationResult<JscsState>;
	createCommandLine(arg1 : File) : GeneralCommandLine;
	checkExePath() : Producer<JSLinterAnnotationResult<JscsState>>;
	checkConfigPath() : Producer<JSLinterAnnotationResult<JscsState>>;
	configIgnoresFile() : boolean;
	checkTargetVirtualFile() : Producer<JSLinterAnnotationResult<JscsState>>;
	checkIfTargetFileChanged() : Producer<JSLinterAnnotationResult<JscsState>>;
}

export = JscsExternalRunner
