import List = require('nashorn/java/util/List');
import IntentionAction = require('nashorn/com/intellij/codeInsight/intention/IntentionAction');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import JSLinterExternalAnnotator = require('nashorn/com/intellij/lang/javascript/linter/JSLinterExternalAnnotator');
import JscsState = require('nashorn/com/intellij/lang/javascript/linter/jscs/JscsState');
import BaseIntentionAction = require('nashorn/com/intellij/codeInsight/intention/impl/BaseIntentionAction');

declare class JscsExternalAnnotator {
	static instance : JscsExternalAnnotator;
	constructor();
	static getInstance() : JscsExternalAnnotator;
	tryCreateEmptyConfig() : void;
	static addExcludeFileInConfigFix(arg1 : List<IntentionAction>, arg2 : VirtualFile, arg3 : PsiFile) : void;
	static correctRelativePathForJscs(arg1 : string) : string;
}


declare interface JscsExternalAnnotator extends JSLinterExternalAnnotator<JscsState> {}

declare module JscsExternalAnnotator {
	class JscsSuppressRuleForFileFix {
		familyName : string;
		text : string;
		constructor(arg1 : string);
	}


	interface JscsSuppressRuleForFileFix extends BaseIntentionAction {}	class JscsSuppressRuleFix {
		familyName : string;
		text : string;
		constructor(arg1 : number, arg2 : string);
	}


	interface JscsSuppressRuleFix extends BaseIntentionAction {}}

export = JscsExternalAnnotator
