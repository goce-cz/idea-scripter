import JSLinterState = require('nashorn/com/intellij/lang/javascript/linter/JSLinterState');
import Object = require('nashorn/java/lang/Object');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import EditorColorsScheme = require('nashorn/com/intellij/openapi/editor/colors/EditorColorsScheme');
import IntentionAction = require('nashorn/com/intellij/codeInsight/intention/IntentionAction');
import JSLinterAnnotationResult = require('nashorn/com/intellij/lang/javascript/linter/JSLinterAnnotationResult');
import HighlightSeverity = require('nashorn/com/intellij/lang/annotation/HighlightSeverity');
import JSLinterExternalAnnotator = require('nashorn/com/intellij/lang/javascript/linter/JSLinterExternalAnnotator');

declare class JSLinterInput<T extends JSLinterState> extends Object {
	project : Project;
	psiFile : PsiFile;
	fileContent : string;
	state : T;
	colorsScheme : EditorColorsScheme;
	getProject() : Project;
	getPsiFile() : PsiFile;
	getFileContent() : string;
	getState() : T;
	getColorsScheme() : EditorColorsScheme;
	createFileLevelWarningResult(arg1 : string, arg2 : IntentionAction[]) : JSLinterAnnotationResult<T>;
	createFileLevelAnnotationResult(arg1 : string, arg2 : HighlightSeverity, arg3 : IntentionAction[]) : JSLinterAnnotationResult<T>;
	static create<T extends JSLinterState>(arg1 : Project, arg2 : PsiFile, arg3 : string, arg4 : T, arg5 : EditorColorsScheme, arg6 : JSLinterExternalAnnotator<T>) : JSLinterInput<T>;
}

export = JSLinterInput
