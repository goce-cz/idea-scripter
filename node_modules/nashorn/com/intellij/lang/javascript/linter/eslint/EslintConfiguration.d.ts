import NodePathSettings = require('nashorn/com/intellij/javascript/nodejs/NodePathSettings');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import EslintState = require('nashorn/com/intellij/lang/javascript/linter/eslint/EslintState');
import JSLinterConfiguration = require('nashorn/com/intellij/lang/javascript/linter/JSLinterConfiguration');

declare class EslintConfiguration {
	nodeSettings : NodePathSettings;
	constructor(arg1 : Project);
	static getInstance(arg1 : Project) : EslintConfiguration;
	doSavePrivateSettings(arg1 : EslintState) : void;
	doLoadPrivateSettings(arg1 : EslintState.Builder) : void;
	getNodeInterpreter() : string;
	detectEslintPackagePath(arg1 : string) : string;
	getNodeSettings() : NodePathSettings;
}


declare interface EslintConfiguration extends JSLinterConfiguration<EslintState> {}
export = EslintConfiguration
