import Object = require('nashorn/java/lang/Object');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import EslintUserFiles = require('nashorn/com/intellij/lang/javascript/linter/eslint/EslintUserFiles');
import File = require('nashorn/java/io/File');
import List = require('nashorn/java/util/List');

declare class EslintProjectTreeMirror extends Object {
	constructor(arg1 : Project);
	mirrorIfNeeded(arg1 : VirtualFile, arg2 : VirtualFile) : EslintUserFiles;
	mirrorFileSequence(arg1 : VirtualFile, arg2 : VirtualFile, arg3 : string) : void;
	mirror(arg1 : VirtualFile, arg2 : VirtualFile) : File;
	static isModified(arg1 : List<VirtualFile>) : boolean;
	static isModified(arg1 : VirtualFile) : boolean;
	static listFiles(arg1 : VirtualFile, arg2 : VirtualFile, arg3 : string) : List<VirtualFile>;
	static findRootDir(arg1 : VirtualFile) : VirtualFile;
	static getInstance(arg1 : Project) : EslintProjectTreeMirror;
}

export = EslintProjectTreeMirror
