import Enum = require('nashorn/java/lang/Enum');
import Object = require('nashorn/java/lang/Object');

declare class JSLintOption {
	static ASS : JSLintOption;
	static BITWISE : JSLintOption;
	static BROWSER : JSLintOption;
	static CLOSURE : JSLintOption;
	static CONTINUE : JSLintOption;
	static COUCH : JSLintOption;
	static DEBUG : JSLintOption;
	static DEVEL : JSLintOption;
	static EQEQ : JSLintOption;
	static EVIL : JSLintOption;
	static FORIN : JSLintOption;
	static INDENT : JSLintOption;
	static MAXERR : JSLintOption;
	static MAXLEN : JSLintOption;
	static NEWCAP : JSLintOption;
	static NODE : JSLintOption;
	static NOMEN : JSLintOption;
	static PASSFAIL : JSLintOption;
	static PLUSPLUS : JSLintOption;
	static PREDEF : JSLintOption;
	static REGEXP : JSLintOption;
	static RHINO : JSLintOption;
	static SLOPPY : JSLintOption;
	static STUPID : JSLintOption;
	static SUB : JSLintOption;
	static TODO : JSLintOption;
	static UNPARAM : JSLintOption;
	static VARS : JSLintOption;
	static WHITE : JSLintOption;
	type : JSLintOption.Type;
	optionName : string;
	description : string;
	meaning : string;
	getType() : JSLintOption.Type;
	getOptionName() : string;
	getDescription() : string;
	getMeaning() : string;
	static findByName(arg1 : string) : JSLintOption;
}


declare interface JSLintOption extends Enum<JSLintOption> {}

declare module JSLintOption {
	class Type {
		static BOOLEAN : JSLintOption.Type;
		static STRING : JSLintOption.Type;
		static INTEGER : JSLintOption.Type;
		createObject(arg1 : string) : Object;
		isDefault(arg1 : Object) : boolean;
		isProperValue(arg1 : Object) : boolean;
	}


	interface Type extends Enum<JSLintOption.Type> {}}

export = JSLintOption
