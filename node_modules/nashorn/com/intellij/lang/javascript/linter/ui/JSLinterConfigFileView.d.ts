import Object = require('nashorn/java/lang/Object');
import JPanel = require('nashorn/javax/swing/JPanel');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import JSLinterConfigFileTexts = require('nashorn/com/intellij/lang/javascript/linter/ui/JSLinterConfigFileTexts');
import FileType = require('nashorn/com/intellij/openapi/fileTypes/FileType');
import JRadioButton = require('nashorn/javax/swing/JRadioButton');
import List = require('nashorn/java/util/List');
import Pair = require('nashorn/com/intellij/openapi/util/Pair');
import JComponent = require('nashorn/javax/swing/JComponent');
import TextFieldWithHistoryWithBrowseButton = require('nashorn/com/intellij/ui/TextFieldWithHistoryWithBrowseButton');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');

declare class JSLinterConfigFileView extends Object {
	component : JPanel;
	customConfigFileUsed : boolean;
	customConfigFilePath : string;
	constructor(arg1 : Project, arg2 : JSLinterConfigFileTexts, arg3 : FileType);
	getComponent() : JPanel;
	onEnabledStateChanged(arg1 : boolean) : void;
	selectOption(arg1 : JRadioButton, arg2 : boolean) : void;
	isCustomConfigFileUsed() : boolean;
	getCustomConfigFilePath() : string;
	setCustomConfigFileUsed(arg1 : boolean) : void;
	setCustomConfigFilePath(arg1 : string) : void;
	updateCustomErrorMessage() : void;
	static formatErrorMessage(arg1 : string) : string;
	createResultPanel(arg1 : List<Pair<JRadioButton, JComponent>>, arg2 : string) : JPanel;
	createCustomConfigField(arg1 : Project, arg2 : string) : TextFieldWithHistoryWithBrowseButton;
	listConfigFilesInContentScope(arg1 : Project) : List<VirtualFile>;
	setPreferredWidthToComponents() : void;
}

export = JSLinterConfigFileView
