import JSLinterState = require('nashorn/com/intellij/lang/javascript/linter/JSLinterState');
import Icon = require('nashorn/javax/swing/Icon');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import JSLinterConfigurable = require('nashorn/com/intellij/lang/javascript/linter/JSLinterConfigurable');
import Class = require('nashorn/java/lang/Class');
import JSLinterConfiguration = require('nashorn/com/intellij/lang/javascript/linter/JSLinterConfiguration');
import JSLinterInspection = require('nashorn/com/intellij/lang/javascript/linter/JSLinterInspection');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import JSLinterInput = require('nashorn/com/intellij/lang/javascript/linter/JSLinterInput');
import AnnotationHolder = require('nashorn/com/intellij/lang/annotation/AnnotationHolder');
import Document = require('nashorn/com/intellij/openapi/editor/Document');
import JSLinterError = require('nashorn/com/intellij/lang/javascript/linter/JSLinterError');
import HighlightSeverity = require('nashorn/com/intellij/lang/annotation/HighlightSeverity');
import TextAttributes = require('nashorn/com/intellij/openapi/editor/markup/TextAttributes');
import HighlightDisplayKey = require('nashorn/com/intellij/codeInsight/daemon/HighlightDisplayKey');
import Annotation = require('nashorn/com/intellij/lang/annotation/Annotation');
import Function = require('nashorn/com/intellij/util/Function');
import ExternalAnnotator = require('nashorn/com/intellij/lang/annotation/ExternalAnnotator');
import JSLinterAnnotationResult = require('nashorn/com/intellij/lang/javascript/linter/JSLinterAnnotationResult');
import Enum = require('nashorn/java/lang/Enum');

declare class JSLinterExternalAnnotator<T extends JSLinterState> {
	fileLevelAnnotationDefaultIcon : Icon;
	constructor();
	createSettingsConfigurable(arg1 : Project) : JSLinterConfigurable<T>;
	getConfigurationClass() : Class<JSLinterConfiguration<T>>;
	getInspectionClass() : Class<JSLinterInspection>;
	acceptPsiFile(arg1 : PsiFile) : boolean;
	acceptState(arg1 : T) : boolean;
	getFileLevelAnnotationDefaultIcon() : Icon;
	collectInformation(arg1 : PsiFile, arg2 : Editor) : JSLinterInput<T>;
	static createAnnotation(arg1 : AnnotationHolder, arg2 : PsiFile, arg3 : Document, arg4 : JSLinterError, arg5 : string, arg6 : number, arg7 : HighlightSeverity, arg8 : TextAttributes, arg9 : HighlightDisplayKey, arg10 : JSLinterExternalAnnotator.HighlightingGranularity) : Annotation;
	static createAnnotation(arg1 : AnnotationHolder, arg2 : PsiFile, arg3 : Document, arg4 : JSLinterError, arg5 : string, arg6 : number, arg7 : HighlightSeverity, arg8 : TextAttributes, arg9 : Function<HighlightSeverity, TextAttributes>, arg10 : HighlightDisplayKey, arg11 : JSLinterExternalAnnotator.HighlightingGranularity) : Annotation;
	static calcErrorStartOffsetInDocument(arg1 : Document, arg2 : number, arg3 : number, arg4 : number, arg5 : number) : number;
}


declare interface JSLinterExternalAnnotator<T extends JSLinterState> extends ExternalAnnotator<JSLinterInput<T>, JSLinterAnnotationResult<T>> {}

declare module JSLinterExternalAnnotator {
	class HighlightingGranularity {
		static none : JSLinterExternalAnnotator.HighlightingGranularity;
		static line : JSLinterExternalAnnotator.HighlightingGranularity;
		static element : JSLinterExternalAnnotator.HighlightingGranularity;
	}


	interface HighlightingGranularity extends Enum<JSLinterExternalAnnotator.HighlightingGranularity> {}}

export = JSLinterExternalAnnotator
