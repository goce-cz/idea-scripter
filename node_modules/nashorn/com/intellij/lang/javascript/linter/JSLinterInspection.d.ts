import JSLinterState = require('nashorn/com/intellij/lang/javascript/linter/JSLinterState');
import JSLinterExternalAnnotator = require('nashorn/com/intellij/lang/javascript/linter/JSLinterExternalAnnotator');
import HyperlinkLabel = require('nashorn/com/intellij/ui/HyperlinkLabel');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Class = require('nashorn/java/lang/Class');
import InspectionProfileImpl = require('nashorn/com/intellij/codeInspection/ex/InspectionProfileImpl');
import HighlightDisplayKey = require('nashorn/com/intellij/codeInsight/daemon/HighlightDisplayKey');
import List = require('nashorn/java/util/List');
import ScopeToolState = require('nashorn/com/intellij/codeInspection/ex/ScopeToolState');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import InspectionProfile = require('nashorn/com/intellij/codeInspection/InspectionProfile');
import JSInspection = require('nashorn/com/intellij/lang/javascript/inspections/JSInspection');
import UnfairLocalInspectionTool = require('nashorn/com/intellij/codeInspection/ex/UnfairLocalInspectionTool');

declare class JSLinterInspection<T extends JSLinterState> {
	groupDisplayName : string;
	constructor();
	getExternalAnnotator() : JSLinterExternalAnnotator<T>;
	createHyperLink() : HyperlinkLabel;
	static isToolEnabled(arg1 : Project, arg2 : Class<JSLinterInspection>) : boolean;
	static getNonDefaultTools(arg1 : Project, arg2 : InspectionProfileImpl, arg3 : HighlightDisplayKey) : List<ScopeToolState>;
	static isToolEnabled(arg1 : Project, arg2 : Class<JSLinterInspection>, arg3 : PsiFile) : boolean;
	static setToolEnabled(arg1 : Project, arg2 : Class<JSLinterInspection>, arg3 : boolean) : void;
	static getInspectionProfileImpl(arg1 : InspectionProfile) : InspectionProfileImpl;
	static getHighlightDisplayKeyByClass(arg1 : Class<JSLinterInspection>) : HighlightDisplayKey;
}


declare interface JSLinterInspection<T extends JSLinterState> extends JSInspection, UnfairLocalInspectionTool {}
export = JSLinterInspection
