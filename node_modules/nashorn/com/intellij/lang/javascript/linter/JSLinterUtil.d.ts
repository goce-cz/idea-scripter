import Object = require('nashorn/java/lang/Object');
import NativeObject = require('nashorn/org/mozilla/javascript/NativeObject');
import Map = require('nashorn/java/util/Map');
import AnnotationHolder = require('nashorn/com/intellij/lang/annotation/AnnotationHolder');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');
import Annotation = require('nashorn/com/intellij/lang/annotation/Annotation');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import HighlightSeverity = require('nashorn/com/intellij/lang/annotation/HighlightSeverity');
import TextAttributes = require('nashorn/com/intellij/openapi/editor/markup/TextAttributes');
import InspectionProjectProfileManager = require('nashorn/com/intellij/profile/codeInspection/InspectionProjectProfileManager');
import HighlightDisplayKey = require('nashorn/com/intellij/codeInsight/daemon/HighlightDisplayKey');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import EditorColorsScheme = require('nashorn/com/intellij/openapi/editor/colors/EditorColorsScheme');
import SeverityRegistrar = require('nashorn/com/intellij/codeInsight/daemon/impl/SeverityRegistrar');
import List = require('nashorn/java/util/List');
import JSLinterError = require('nashorn/com/intellij/lang/javascript/linter/JSLinterError');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import TextFieldWithBrowseButton = require('nashorn/com/intellij/openapi/ui/TextFieldWithBrowseButton');
import JEditorPane = require('nashorn/javax/swing/JEditorPane');
import Font = require('nashorn/java/awt/Font');

declare class JSLinterUtil extends Object {
	static radioIconWidth : number;
	static convertPredefToRhinoMap(arg1 : Object) : NativeObject;
	static convertPredefStrToNativeObj(arg1 : string) : NativeObject;
	static convertPredefStrToMap(arg1 : string) : Map<string, boolean>;
	static createWarningAnnotation(arg1 : AnnotationHolder, arg2 : TextRange, arg3 : string) : Annotation;
	static createWarningAnnotation(arg1 : AnnotationHolder, arg2 : PsiElement, arg3 : string) : Annotation;
	static createErrorAnnotation(arg1 : AnnotationHolder, arg2 : PsiElement, arg3 : string) : Annotation;
	static createAnnotation(arg1 : AnnotationHolder, arg2 : HighlightSeverity, arg3 : TextAttributes, arg4 : TextRange, arg5 : string) : Annotation;
	static getSeverity(arg1 : InspectionProjectProfileManager, arg2 : HighlightDisplayKey, arg3 : PsiFile) : HighlightSeverity;
	static getTextAttributes(arg1 : EditorColorsScheme, arg2 : SeverityRegistrar, arg3 : HighlightSeverity) : TextAttributes;
	static getColorsScheme(arg1 : EditorColorsScheme) : EditorColorsScheme;
	static limitErrorsAtTheSamePosition(arg1 : List<JSLinterError>, arg2 : number) : List<JSLinterError>;
	static createTextFieldWithBrowseButton(arg1 : Project, arg2 : string) : TextFieldWithBrowseButton;
	static createDefaultContent(arg1 : string) : JEditorPane;
	static createHtmlViewer(arg1 : string, arg2 : Font) : JEditorPane;
	static getRadioIconWidth() : number;
}

export = JSLinterUtil
