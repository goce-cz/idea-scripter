import Object = require('nashorn/java/lang/Object');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import File = require('nashorn/java/io/File');
import Convertor = require('nashorn/com/intellij/util/containers/Convertor');
import ThreadLocal = require('nashorn/java/lang/ThreadLocal');

declare class FilesMirror extends Object {
	constructor(arg1 : string);
	getOrCreateExactlyNamed(arg1 : VirtualFile, arg2 : string) : File;
	getOrCreateFileWithActualContent(arg1 : VirtualFile, arg2 : string) : File;
	getOrCreate(arg1 : VirtualFile, arg2 : string, arg3 : Convertor<VirtualFile, FilesMirror.ThreadLocalFile>) : File;
}


declare module FilesMirror {
	class ThreadLocalTempFilePath {
		file : File;
		static getDir() : File;
		createFile() : File;
	}


	interface ThreadLocalTempFilePath extends FilesMirror.ThreadLocalFile {}	class ThreadLocalCertainFileInTmpDir {
		file : File;
		constructor(arg1 : string, arg2 : string);
		getDir() : File;
		createFile() : File;
	}


	interface ThreadLocalCertainFileInTmpDir extends FilesMirror.ThreadLocalFile {}	class ThreadLocalFile {
		file : File;
		constructor();
		getFile() : File;
	}


	interface ThreadLocalFile extends ThreadLocal<string> {}}

export = FilesMirror
