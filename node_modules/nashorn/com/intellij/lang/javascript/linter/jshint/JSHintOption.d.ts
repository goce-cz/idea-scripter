import OptionType = require('nashorn/com/intellij/lang/javascript/linter/option/OptionType');
import Object = require('nashorn/java/lang/Object');
import List = require('nashorn/java/util/List');
import Enum = require('nashorn/java/lang/Enum');
import Option = require('nashorn/com/intellij/lang/javascript/linter/option/Option');

declare class JSHintOption {
	static BITWISE : JSHintOption;
	static CAMELCASE : JSHintOption;
	static CURLY : JSHintOption;
	static EQEQEQ : JSHintOption;
	static ES3 : JSHintOption;
	static FORIN : JSHintOption;
	static FREEZE : JSHintOption;
	static IMMED : JSHintOption;
	static NEWCAP : JSHintOption;
	static NOARG : JSHintOption;
	static NOEMPTY : JSHintOption;
	static NONBSP : JSHintOption;
	static NONEW : JSHintOption;
	static PLUSPLUS : JSHintOption;
	static UNDEF : JSHintOption;
	static STRICT : JSHintOption;
	static TRAILING : JSHintOption;
	static LATEDEF : JSHintOption;
	static UNUSED : JSHintOption;
	static INDENT : JSHintOption;
	static QUOTMARK : JSHintOption;
	static MAXPARAMS : JSHintOption;
	static MAXDEPTH : JSHintOption;
	static MAXSTATEMENTS : JSHintOption;
	static MAXCOMPLEXITY : JSHintOption;
	static MAXLEN : JSHintOption;
	static ASI : JSHintOption;
	static BOSS : JSHintOption;
	static DEBUG : JSHintOption;
	static EQNULL : JSHintOption;
	static ESNEXT : JSHintOption;
	static EVIL : JSHintOption;
	static EXPR : JSHintOption;
	static FUNCSCOPE : JSHintOption;
	static GCL : JSHintOption;
	static GLOBALSTRICT : JSHintOption;
	static ITERATOR : JSHintOption;
	static LASTSEMIC : JSHintOption;
	static LAXBREAK : JSHintOption;
	static LAXCOMMA : JSHintOption;
	static LOOPFUNC : JSHintOption;
	static MOZ : JSHintOption;
	static MULTISTR : JSHintOption;
	static NOTYPEOF : JSHintOption;
	static PROTO : JSHintOption;
	static SCRIPTURL : JSHintOption;
	static SMARTTABS : JSHintOption;
	static SHADOW : JSHintOption;
	static SUB : JSHintOption;
	static SUPERNEW : JSHintOption;
	static VALIDTHIS : JSHintOption;
	static NOYIELD : JSHintOption;
	static BROWSER : JSHintOption;
	static COUCH : JSHintOption;
	static DEVEL : JSHintOption;
	static DOJO : JSHintOption;
	static JQUERY : JSHintOption;
	static MOOTOOLS : JSHintOption;
	static NODE : JSHintOption;
	static NONSTANDARD : JSHintOption;
	static PHANTOM : JSHintOption;
	static PROTOTYPEJS : JSHintOption;
	static RHINO : JSHintOption;
	static WORKER : JSHintOption;
	static WSH : JSHintOption;
	static YUI : JSHintOption;
	static NOMEN : JSHintOption;
	static ONEVAR : JSHintOption;
	static PASSFAIL : JSHintOption;
	static WHITE : JSHintOption;
	static MAXERR : JSHintOption;
	static PREDEF : JSHintOption;
	key : string;
	type : OptionType<Object>;
	shortDescription : string;
	keyAlias : string;
	shortDescriptionFragments : List<JSHintOption.Fragment>;
	defaultValue : Object;
	getShortDescription() : string;
	getKeyAlias() : string;
	getShortDescriptionFragments() : List<JSHintOption.Fragment>;
	static findByName(arg1 : string) : JSHintOption;
	getDefaultValue() : Object;
	static parseTextFragments(arg1 : string) : List<JSHintOption.Fragment>;
	static join(arg1 : List<JSHintOption.Fragment>) : string;
}


declare interface JSHintOption extends Enum<JSHintOption>, Option {}

declare module JSHintOption {
	class Fragment extends Object {
		text : string;
		code : boolean;
		getText() : string;
		isCode() : boolean;
	}
}

export = JSHintOption
