import JSLiteralExpression = require('nashorn/com/intellij/lang/javascript/psi/JSLiteralExpression');
import PsiReferenceProvider = require('nashorn/com/intellij/psi/PsiReferenceProvider');
import PsiReference = require('nashorn/com/intellij/psi/PsiReference');
import PsiReferenceContributor = require('nashorn/com/intellij/psi/PsiReferenceContributor');
import Collection = require('nashorn/java/util/Collection');
import PsiFileSystemItem = require('nashorn/com/intellij/psi/PsiFileSystemItem');
import FileReferenceSet = require('nashorn/com/intellij/psi/impl/source/resolve/reference/impl/providers/FileReferenceSet');

declare class JSHintConfigReferenceContributor {
	constructor();
	static getReferencesByLiteralExpression(arg1 : JSLiteralExpression, arg2 : PsiReferenceProvider) : PsiReference[];
}


declare interface JSHintConfigReferenceContributor extends PsiReferenceContributor {}

declare module JSHintConfigReferenceContributor {
	class ExtendsFileReferenceSet {
		constructor(arg1 : string, arg2 : JSLiteralExpression, arg3 : PsiReferenceProvider);
		findParentPsiDirectory() : Collection<PsiFileSystemItem>;
	}


	interface ExtendsFileReferenceSet extends FileReferenceSet {}}

export = JSHintConfigReferenceContributor
