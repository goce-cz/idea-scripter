import Object = require('nashorn/java/lang/Object');
import Component = require('nashorn/java/awt/Component');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import JRadioButton = require('nashorn/javax/swing/JRadioButton');
import List = require('nashorn/java/util/List');
import Pair = require('nashorn/com/intellij/openapi/util/Pair');
import JComponent = require('nashorn/javax/swing/JComponent');
import JPanel = require('nashorn/javax/swing/JPanel');
import TextFieldWithHistoryWithBrowseButton = require('nashorn/com/intellij/ui/TextFieldWithHistoryWithBrowseButton');
import JLabel = require('nashorn/javax/swing/JLabel');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');

declare class JSHintConfigFileView extends Object {
	component : Component;
	customConfigFileUsed : boolean;
	customConfigFilePath : string;
	constructor(arg1 : Project);
	selectOption(arg1 : JRadioButton, arg2 : boolean) : void;
	updateCustomErrorMessage() : void;
	static formatErrorMessage(arg1 : string) : string;
	createResultPanel(arg1 : List<Pair<JRadioButton, JComponent>>) : JPanel;
	static createCustomContent(arg1 : TextFieldWithHistoryWithBrowseButton, arg2 : JLabel) : JPanel;
	static createCustomConfigField(arg1 : Project) : TextFieldWithHistoryWithBrowseButton;
	static listConfigFilesInContentScope(arg1 : Project) : List<VirtualFile>;
	getComponent() : Component;
	onEnabledStateChange(arg1 : boolean) : void;
	isCustomConfigFileUsed() : boolean;
	getCustomConfigFilePath() : string;
	setCustomConfigFileUsed(arg1 : boolean) : void;
	setCustomConfigFilePath(arg1 : string) : void;
}

export = JSHintConfigFileView
