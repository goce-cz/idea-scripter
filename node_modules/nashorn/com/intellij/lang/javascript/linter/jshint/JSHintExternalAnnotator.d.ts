import Project = require('nashorn/com/intellij/openapi/project/Project');
import RhinoFunctionManager = require('nashorn/com/intellij/lang/javascript/linter/rhino/RhinoFunctionManager');
import Pair = require('nashorn/com/intellij/openapi/util/Pair');
import Context = require('nashorn/org/mozilla/javascript/Context');
import JSHintOptionsState = require('nashorn/com/intellij/lang/javascript/linter/jshint/JSHintOptionsState');
import List = require('nashorn/java/util/List');
import JSLinterError = require('nashorn/com/intellij/lang/javascript/linter/JSLinterError');
import NativeArray = require('nashorn/org/mozilla/javascript/NativeArray');
import NativeObject = require('nashorn/org/mozilla/javascript/NativeObject');
import Object = require('nashorn/java/lang/Object');
import JSLinterExternalAnnotator = require('nashorn/com/intellij/lang/javascript/linter/JSLinterExternalAnnotator');
import JSHintState = require('nashorn/com/intellij/lang/javascript/linter/jshint/JSHintState');

declare class JSHintExternalAnnotator {
	static instance : JSHintExternalAnnotator;
	constructor();
	static getInstance() : JSHintExternalAnnotator;
	getFunctionManager(arg1 : Project, arg2 : string) : RhinoFunctionManager;
	getCachedByVersion(arg1 : string) : Pair<string, RhinoFunctionManager>;
	static createRhinoFunctionManager(arg1 : Project, arg2 : string) : RhinoFunctionManager;
	static fetchSourceSync(arg1 : Project, arg2 : string) : void;
	static doLint(arg1 : Context, arg2 : RhinoFunctionManager, arg3 : JSHintOptionsState, arg4 : string) : List<JSLinterError>;
	static convertErrors(arg1 : NativeArray) : List<JSLinterError>;
	static toLinterError(arg1 : NativeObject) : JSLinterError;
	static toInt(arg1 : Object) : number;
	static convertOptionsToRhinoObject(arg1 : JSHintOptionsState) : NativeObject;
}


declare interface JSHintExternalAnnotator extends JSLinterExternalAnnotator<JSHintState> {}
export = JSHintExternalAnnotator
