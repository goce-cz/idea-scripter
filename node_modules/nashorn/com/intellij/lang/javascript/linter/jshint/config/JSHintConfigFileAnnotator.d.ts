import JsonFile = require('nashorn/com/intellij/json/psi/JsonFile');
import AnnotationHolder = require('nashorn/com/intellij/lang/annotation/AnnotationHolder');
import JsonObject = require('nashorn/com/intellij/json/psi/JsonObject');
import JsonProperty = require('nashorn/com/intellij/json/psi/JsonProperty');
import Map = require('nashorn/java/util/Map');
import JSHintOption = require('nashorn/com/intellij/lang/javascript/linter/jshint/JSHintOption');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Annotator = require('nashorn/com/intellij/lang/annotation/Annotator');

declare class JSHintConfigFileAnnotator {
	constructor();
	static annotateFile(arg1 : JsonFile, arg2 : AnnotationHolder) : void;
	static annotateObjectLiteralExpression(arg1 : JsonObject, arg2 : AnnotationHolder) : void;
	static annotateJSProperty(arg1 : JsonProperty, arg2 : AnnotationHolder, arg3 : Map<JSHintOption, PsiElement>) : void;
	static annotateJSPropertyKeyAsUnknown(arg1 : PsiElement, arg2 : AnnotationHolder) : void;
	static annotateJSPropertyKeyAsDuplicated(arg1 : PsiElement, arg2 : PsiElement, arg3 : AnnotationHolder) : void;
	static annotateKeyElement(arg1 : PsiElement, arg2 : AnnotationHolder, arg3 : string) : void;
	static annotateJSPropertyValue(arg1 : JsonProperty, arg2 : JSHintOption, arg3 : AnnotationHolder) : void;
	static formatErrorMessageFor(arg1 : JSHintOption) : string;
}


declare interface JSHintConfigFileAnnotator extends Annotator {}
export = JSHintConfigFileAnnotator
