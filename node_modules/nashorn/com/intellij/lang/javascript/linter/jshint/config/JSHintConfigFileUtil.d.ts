import Object = require('nashorn/java/lang/Object');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import JSHintIgnoreInfo = require('nashorn/com/intellij/lang/javascript/linter/jshint/JSHintIgnoreInfo');
import JSHintConfigLookupResult = require('nashorn/com/intellij/lang/javascript/linter/jshint/config/JSHintConfigLookupResult');
import JSHintOptionsState = require('nashorn/com/intellij/lang/javascript/linter/jshint/JSHintOptionsState');
import JsonReader = require('nashorn/com/google/gson/stream/JsonReader');

declare class JSHintConfigFileUtil extends Object {
	static EXTENDS_KEY : string;
	static isJSHintConfigFile(arg1 : PsiElement) : boolean;
	static isJSHintConfigFile(arg1 : PsiFile) : boolean;
	static isWarningKey(arg1 : string) : boolean;
	static isIgnored(arg1 : Project, arg2 : VirtualFile) : boolean;
	static parseIgnores(arg1 : VirtualFile) : JSHintIgnoreInfo;
	static lookupConfig(arg1 : Project, arg2 : VirtualFile) : JSHintConfigLookupResult;
	static loadConfigByPath(arg1 : string) : JSHintConfigLookupResult;
	static parsePackageJson(arg1 : VirtualFile) : JSHintOptionsState;
	static isExtendsKey(arg1 : PsiElement) : boolean;
	static parseOptionsState(arg1 : JsonReader) : JSHintOptionsState;
}

export = JSHintConfigFileUtil
