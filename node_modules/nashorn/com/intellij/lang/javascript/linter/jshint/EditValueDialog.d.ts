import JComponent = require('nashorn/javax/swing/JComponent');
import Object = require('nashorn/java/lang/Object');
import Component = require('nashorn/java/awt/Component');
import JSHintOption = require('nashorn/com/intellij/lang/javascript/linter/jshint/JSHintOption');
import JPanel = require('nashorn/javax/swing/JPanel');
import DialogWrapper = require('nashorn/com/intellij/openapi/ui/DialogWrapper');
import JRadioButton = require('nashorn/javax/swing/JRadioButton');
import OptionEnumVariant = require('nashorn/com/intellij/lang/javascript/linter/option/OptionEnumVariant');
import ValidationInfo = require('nashorn/com/intellij/openapi/ui/ValidationInfo');

declare class EditValueDialog {
	preferredFocusedComponent : JComponent;
	value : Object;
	constructor(arg1 : Component, arg2 : string, arg3 : JSHintOption, arg4 : Object);
	static createTypePeer(arg1 : JSHintOption) : EditValueDialog.TypePeer<any>;
	static createComponent<T>(arg1 : string, arg2 : EditValueDialog.TypePeer<T>) : JPanel;
	getValue() : Object;
}


declare interface EditValueDialog extends DialogWrapper {}

declare module EditValueDialog {
	class EnumTypePeer {
		horizontallyStacked : boolean;
		value : Object;
		component : JComponent;
		static createDescriptionPanel(arg1 : JRadioButton, arg2 : OptionEnumVariant) : JPanel;
		static getRadioIconWidth() : number;
	}


	interface EnumTypePeer extends EditValueDialog.TypePeer<Object> {}	class StringTypePeer {
		horizontallyStacked : boolean;
		value : string;
		component : JComponent;
		getText() : string;
	}


	interface StringTypePeer extends EditValueDialog.TypePeer<string> {}	class IntegerTypePeer {
		horizontallyStacked : boolean;
		value : number;
		component : JComponent;
		static toInteger(arg1 : string) : number;
		getText() : string;
	}


	interface IntegerTypePeer extends EditValueDialog.TypePeer<number> {}	class TypePeer<T> extends Object {
		horizontallyStacked : boolean;
		value : T;
		component : JComponent;
		isHorizontallyStacked() : boolean;
		getValue() : T;
		setValue(arg1 : T) : void;
		doValidate() : ValidationInfo;
		getComponent() : JComponent;
	}
}

export = EditValueDialog
