import Object = require('nashorn/java/lang/Object');
import JComponent = require('nashorn/javax/swing/JComponent');
import BowerSettings = require('nashorn/com/intellij/lang/javascript/bower/BowerSettings');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import JPanel = require('nashorn/javax/swing/JPanel');
import TextFieldWithHistoryWithBrowseButton = require('nashorn/com/intellij/ui/TextFieldWithHistoryWithBrowseButton');
import JTextComponent = require('nashorn/javax/swing/text/JTextComponent');
import List = require('nashorn/java/util/List');
import BowerValidationInfo = require('nashorn/com/intellij/lang/javascript/bower/BowerValidationInfo');
import JTextField = require('nashorn/javax/swing/JTextField');
import TextFieldWithBrowseButton = require('nashorn/com/intellij/openapi/ui/TextFieldWithBrowseButton');
import TextFieldWithHistory = require('nashorn/com/intellij/ui/TextFieldWithHistory');

declare class BowerView extends Object {
	component : JComponent;
	settings : BowerSettings;
	constructor(arg1 : Project);
	static createResult(arg1 : JComponent, arg2 : JComponent) : JPanel;
	listenForChanges(arg1 : TextFieldWithHistoryWithBrowseButton) : void;
	listenForChanges(arg1 : JTextComponent) : void;
	updateLaterInEDT() : void;
	update() : void;
	validate() : List<BowerValidationInfo>;
	static validateFilePathField(arg1 : JTextField, arg2 : string) : BowerValidationInfo;
	static createBowerExecutable(arg1 : Project) : TextFieldWithHistoryWithBrowseButton;
	static calcPossibleBowerExecutableFiles(arg1 : Project) : List<string>;
	static createBowerJsonCombobox(arg1 : Project) : TextFieldWithBrowseButton;
	getComponent() : JComponent;
	getSettings() : BowerSettings;
	setSettings(arg1 : BowerSettings) : void;
	static setTextAndAddToHistory(arg1 : TextFieldWithHistory, arg2 : string) : void;
}

export = BowerView
