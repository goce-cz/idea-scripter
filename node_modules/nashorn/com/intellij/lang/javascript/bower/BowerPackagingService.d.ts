import BowerSettings = require('nashorn/com/intellij/lang/javascript/bower/BowerSettings');
import List = require('nashorn/java/util/List');
import RepoPackage = require('nashorn/com/intellij/webcore/packaging/RepoPackage');
import Collection = require('nashorn/java/util/Collection');
import InstalledPackage = require('nashorn/com/intellij/webcore/packaging/InstalledPackage');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import PackageManagementService = require('nashorn/com/intellij/webcore/packaging/PackageManagementService');
import BowerInstalledPackage = require('nashorn/com/intellij/lang/javascript/bower/BowerInstalledPackage');
import ProcessOutput = require('nashorn/com/intellij/execution/process/ProcessOutput');
import PackageManagementServiceEx = require('nashorn/com/intellij/webcore/packaging/PackageManagementServiceEx');

declare class BowerPackagingService {
	settings : BowerSettings;
	allPackages : List<RepoPackage>;
	installedPackages : Collection<InstalledPackage>;
	constructor(arg1 : Project, arg2 : BowerSettings);
	getSettings() : BowerSettings;
	doGetPackages(arg1 : boolean) : List<RepoPackage>;
	doInstallPackage(arg1 : string, arg2 : string, arg3 : string, arg4 : PackageManagementService.Listener) : void;
	refreshBowerComponents() : void;
	uninstallBowerPackages(arg1 : List<BowerInstalledPackage>, arg2 : PackageManagementService.Listener) : void;
	doUninstallPackage(arg1 : BowerInstalledPackage, arg2 : PackageManagementService.Listener, arg3 : boolean) : void;
	runCommand(arg1 : string[]) : ProcessOutput;
}


declare interface BowerPackagingService extends PackageManagementServiceEx {}
export = BowerPackagingService
