import Document = require('nashorn/org/w3c/dom/Document');
import Pair = require('nashorn/com/intellij/openapi/util/Pair');
import XPath = require('nashorn/javax/xml/xpath/XPath');
import NodeList = require('nashorn/org/w3c/dom/NodeList');
import Node = require('nashorn/org/w3c/dom/Node');
import StringBuilder = require('nashorn/java/lang/StringBuilder');
import JSExternalDocumentationProvider = require('nashorn/com/intellij/lang/javascript/library/JSExternalDocumentationProvider');

declare class JQueryExtDocProvider {
	constructor(arg1 : string);
	static selectNodes(arg1 : Document, arg2 : string) : Pair<XPath, NodeList>;
	parseDocument() : Document;
	static generateDoc(arg1 : XPath, arg2 : Node, arg3 : StringBuilder) : void;
	static processSignature(arg1 : XPath, arg2 : Node, arg3 : Node, arg4 : StringBuilder) : void;
	static processParameters(arg1 : XPath, arg2 : Node, arg3 : StringBuilder) : void;
	static addParameter(arg1 : string, arg2 : string, arg3 : string, arg4 : StringBuilder) : void;
	static processAsHtml(arg1 : Node, arg2 : StringBuilder) : void;
}


declare interface JQueryExtDocProvider extends JSExternalDocumentationProvider {}
export = JQueryExtDocProvider
