import IElementType = require('nashorn/com/intellij/psi/tree/IElementType');
import TokenSet = require('nashorn/com/intellij/psi/tree/TokenSet');
import JSStubElementTypes = require('nashorn/com/intellij/lang/javascript/JSStubElementTypes');
import JSLanguageDialect = require('nashorn/com/intellij/lang/javascript/JSLanguageDialect');
import ILazyParseableElementType = require('nashorn/com/intellij/psi/tree/ILazyParseableElementType');
import ILightLazyParseableElementType = require('nashorn/com/intellij/psi/tree/ILightLazyParseableElementType');
import EmbeddingElementType = require('nashorn/com/intellij/embedding/EmbeddingElementType');

declare class JSElementTypes {
	static EMBEDDED_CONTENT : IElementType;
	static JSX_EMBEDDED_CONTENT : IElementType;
	static EMBEDDED_EXPRESSION : IElementType;
	static ARGUMENT_LIST : IElementType;
	static E4X_FILTER_QUERY_ARGUMENT_LIST : IElementType;
	static E4X_NAMESPACE_REFERENCE : IElementType;
	static SUPER_EXPRESSION : IElementType;
	static GENERIC_SIGNATURE : IElementType;
	static CONDITIONAL_COMPILE_VARIABLE_REFERENCE : IElementType;
	static BLOCK_STATEMENT : IElementType;
	static LABELED_STATEMENT : IElementType;
	static EXPRESSION_STATEMENT : IElementType;
	static LET_STATEMENT : IElementType;
	static EMPTY_STATEMENT : IElementType;
	static IF_STATEMENT : IElementType;
	static CONTINUE_STATEMENT : IElementType;
	static BREAK_STATEMENT : IElementType;
	static WITH_STATEMENT : IElementType;
	static THROW_STATEMENT : IElementType;
	static TRY_STATEMENT : IElementType;
	static CATCH_BLOCK : IElementType;
	static CASE_CLAUSE : IElementType;
	static SWITCH_STATEMENT : IElementType;
	static FOR_STATEMENT : IElementType;
	static FOR_IN_STATEMENT : IElementType;
	static WHILE_STATEMENT : IElementType;
	static DOWHILE_STATEMENT : IElementType;
	static REQUIRES_STATEMENT : IElementType;
	static MIXIN_STATEMENT : IElementType;
	static STATEMENTS : TokenSet;
	static THIS_EXPRESSION : IElementType;
	static REFERENCE_EXPRESSION : IElementType;
	static LOCAL_VARIABLE : IElementType;
	static GWT_REFERENCE_EXPRESSION : IElementType;
	static XML_LITERAL_EXPRESSION : IElementType;
	static PARENTHESIZED_EXPRESSION : IElementType;
	static ARRAY_LITERAL_EXPRESSION : IElementType;
	static YIELD_EXPRESSION : IElementType;
	static CONDITIONAL_EXPRESSION : IElementType;
	static ARRAY_COMPREHENSION : IElementType;
	static BINARY_EXPRESSION : IElementType;
	static PREFIX_EXPRESSION : IElementType;
	static POSTFIX_EXPRESSION : IElementType;
	static COMMA_EXPRESSION : IElementType;
	static NEW_EXPRESSION : IElementType;
	static TYPESCRIPT_NEW_EXPRESSION : IElementType;
	static NEW_EXPRESSIONS : TokenSet;
	static INDEXED_PROPERTY_ACCESS_EXPRESSION : IElementType;
	static LET_EXPRESSION : IElementType;
	static SPREAD_EXPRESSION : IElementType;
	static GENERATOR_EXPRESSION : IElementType;
	static ARRAY_TYPE : IElementType;
	static STRING_LITERAL_TYPE : IElementType;
	static TYPEOF_TYPE : IElementType;
	static TYPE_ASSERTION : IElementType;
	static TYPESCRIPT_TYPES : TokenSet;
	static DESTRUCTURING_CONTAINERS : TokenSet;
	static BODY_VARIABLES : TokenSet;
	static FUNCTION_DECLARATIONS : TokenSet;
	static FUNCTION_EXPRESSIONS : TokenSet;
	static EXPRESSIONS : TokenSet;
}


declare interface JSElementTypes extends JSStubElementTypes {}

declare module JSElementTypes {
	class EmbeddedContentElementType {
		constructor(arg1 : JSLanguageDialect);
	}


	interface EmbeddedContentElementType extends ILazyParseableElementType, ILightLazyParseableElementType, EmbeddingElementType {}}

export = JSElementTypes
