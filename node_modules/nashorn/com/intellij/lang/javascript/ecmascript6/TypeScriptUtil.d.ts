import Object = require('nashorn/java/lang/Object');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import ResolveResult = require('nashorn/com/intellij/psi/ResolveResult');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Set = require('nashorn/java/util/Set');
import Iterable = require('nashorn/java/lang/Iterable');
import JSNamedElement = require('nashorn/com/intellij/lang/javascript/psi/JSNamedElement');

declare class TypeScriptUtil extends Object {
	static TYPESCRIPT_FILE_EXTENSION : string;
	static TYPESCRIPT_DECLARATIONS_FILE_EXTENSION : string;
	constructor();
	static resolveConstructorMatchingArguments(arg1 : JSClass, arg2 : PsiElement) : ResolveResult;
	static findFileByReferencePath(arg1 : VirtualFile, arg2 : string, arg3 : Project) : VirtualFile;
	static findExternalModule(arg1 : VirtualFile, arg2 : string, arg3 : Project) : PsiElement;
	static unifyModuleName(arg1 : string) : string;
	static getNonStrictParents(arg1 : JSClass, arg2 : boolean) : Set<JSClass>;
	static getClassMembers(arg1 : JSClass) : Iterable<JSNamedElement>;
}

export = TypeScriptUtil
