import IElementType = require('nashorn/com/intellij/psi/tree/IElementType');
import PsiBuilder = require('nashorn/com/intellij/lang/PsiBuilder');
import StatementParser = require('nashorn/com/intellij/lang/javascript/parsing/StatementParser');
import TypeScriptParser = require('nashorn/com/intellij/lang/javascript/ecmascript6/parsing/TypeScriptParser');

declare class TypeScriptStatementParser {
	variableElementType : IElementType;
	parseTypeAlias(arg1 : PsiBuilder.Marker) : void;
	parseModuleNoMarker(arg1 : PsiBuilder.Marker) : void;
	parseImportStatementNoMarker(arg1 : PsiBuilder.Marker) : void;
	static isConstEnum(arg1 : PsiBuilder) : boolean;
	parseEnumNoMarker(arg1 : PsiBuilder.Marker) : void;
	parseExportAssignment() : void;
	parseMemberVariable() : void;
	parsePropertyName() : void;
	parseMemberFunction(arg1 : PsiBuilder.Marker) : void;
	static isPropertyNameStart(arg1 : IElementType) : boolean;
}


declare interface TypeScriptStatementParser extends StatementParser<TypeScriptParser> {}
export = TypeScriptStatementParser
