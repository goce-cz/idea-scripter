import PsiBuilder = require('nashorn/com/intellij/lang/PsiBuilder');
import IElementType = require('nashorn/com/intellij/psi/tree/IElementType');
import ExpressionParser = require('nashorn/com/intellij/lang/javascript/parsing/ExpressionParser');
import TypeScriptParser = require('nashorn/com/intellij/lang/javascript/ecmascript6/parsing/TypeScriptParser');

declare class TypeScriptExpressionParser {
	parseDistinctType() : boolean;
	isFunctionTypeExpected() : boolean;
	parseFunctionType() : boolean;
	parseTupleType() : boolean;
	parseObjectType() : boolean;
	parseTypeMember() : boolean;
	parseFunctionHeaderNoMarker(arg1 : PsiBuilder.Marker, arg2 : IElementType) : boolean;
	parseIndexSignatureNoMarker(arg1 : PsiBuilder.Marker) : boolean;
}


declare interface TypeScriptExpressionParser extends ExpressionParser<TypeScriptParser> {}
export = TypeScriptExpressionParser
