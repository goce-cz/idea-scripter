import ResultSink = require('nashorn/com/intellij/lang/javascript/psi/resolve/ResultSink');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import ResolveProcessor = require('nashorn/com/intellij/lang/javascript/psi/resolve/ResolveProcessor');
import ResolveState = require('nashorn/com/intellij/psi/ResolveState');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSQualifiedNamedElement = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSQualifiedNamedElement');
import QualifiedItemProcessor = require('nashorn/com/intellij/lang/javascript/psi/resolve/QualifiedItemProcessor');

declare class TypeScriptQualifiedItemProcessor<T extends ResultSink> {
	constructor(arg1 : T, arg2 : PsiFile);
	static processNamespaceChildren(arg1 : ResolveProcessor, arg2 : ResolveState, arg3 : PsiElement, arg4 : PsiElement, arg5 : JSQualifiedNamedElement) : boolean;
}


declare interface TypeScriptQualifiedItemProcessor<T extends ResultSink> extends QualifiedItemProcessor<T> {}
export = TypeScriptQualifiedItemProcessor
