import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import Set = require('nashorn/java/util/Set');
import JSTypeResolveResult = require('nashorn/com/intellij/lang/javascript/psi/resolve/JSTypeResolveResult');
import JSQualifiedName = require('nashorn/com/intellij/lang/javascript/psi/JSQualifiedName');
import Pair = require('nashorn/com/intellij/openapi/util/Pair');
import SinkResolveProcessor = require('nashorn/com/intellij/lang/javascript/psi/resolve/SinkResolveProcessor');
import Collection = require('nashorn/java/util/Collection');
import JSImportHandler = require('nashorn/com/intellij/lang/javascript/psi/resolve/JSImportHandler');
import Object = require('nashorn/java/lang/Object');

declare class TypeScriptImportHandler {
	static instance : TypeScriptImportHandler;
	static getInstance() : TypeScriptImportHandler;
	static resolveTypeName(arg1 : string, arg2 : PsiElement, arg3 : PsiFile, arg4 : Set<PsiFile>) : JSTypeResolveResult;
	static resolveTypeElements(arg1 : JSQualifiedName, arg2 : PsiElement, arg3 : Set<Pair<JSQualifiedName, PsiElement>>) : Set<PsiElement>;
	static findReferencedElements(arg1 : string, arg2 : PsiElement, arg3 : boolean, arg4 : Set<Pair<JSQualifiedName, PsiElement>>, arg5 : TypeScriptImportHandler.TypeScriptElementVisitor) : boolean;
	static getLocalResults(arg1 : string, arg2 : PsiElement, arg3 : boolean, arg4 : SinkResolveProcessor<any>) : Collection<PsiElement>;
	static resolveClassNameInParentModules(arg1 : string, arg2 : PsiElement) : string;
}


declare interface TypeScriptImportHandler extends JSImportHandler {}

declare module TypeScriptImportHandler {
	class SubTypeVisitor {
		done : boolean;
		createSimpleExpressionVisitor() : TypeScriptImportHandler.TypeScriptElementVisitor;
		createSubVisitor() : TypeScriptImportHandler.SubTypeVisitor;
		processQualifier(arg1 : JSQualifiedName) : void;
	}


	interface SubTypeVisitor extends TypeScriptImportHandler.TypeScriptHierarchyVisitor {}	class TypeScriptHierarchyVisitor extends Object {
		done : boolean;
		accept(arg1 : PsiElement) : boolean;
		isDone() : boolean;
	}
	class TypeScriptElementVisitor extends Object {
		accept(arg1 : PsiElement) : boolean;
	}
}

export = TypeScriptImportHandler
