import Object = require('nashorn/java/lang/Object');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import JavaScriptIndex = require('nashorn/com/intellij/lang/javascript/index/JavaScriptIndex');
import DialectOptionHolder = require('nashorn/com/intellij/lang/javascript/DialectOptionHolder');
import List = require('nashorn/java/util/List');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import Processor = require('nashorn/com/intellij/util/Processor');
import Collection = require('nashorn/java/util/Collection');
import JSQualifiedNamedElement = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSQualifiedNamedElement');
import JSPsiElementBase = require('nashorn/com/intellij/lang/javascript/psi/JSPsiElementBase');
import JSElement = require('nashorn/com/intellij/lang/javascript/psi/JSElement');

declare class JSClassResolver extends Object {
	static instance : JSClassResolver;
	static getInstance() : JSClassResolver;
	static findClassFromNamespace(arg1 : string, arg2 : PsiElement) : PsiElement;
	static findClassFromNamespace(arg1 : string, arg2 : PsiElement, arg3 : GlobalSearchScope) : PsiElement;
	static getResolveResultTimestamp(arg1 : PsiElement) : number;
	findClassByQName(arg1 : string, arg2 : PsiElement) : PsiElement;
	findClassByQName(arg1 : string, arg2 : GlobalSearchScope) : PsiElement;
	findClassByQName(arg1 : string, arg2 : JavaScriptIndex, arg3 : GlobalSearchScope, arg4 : DialectOptionHolder) : PsiElement;
	doFindClassByQName(arg1 : string, arg2 : JavaScriptIndex, arg3 : GlobalSearchScope, arg4 : boolean, arg5 : DialectOptionHolder) : PsiElement;
	findClassesByQName(arg1 : string, arg2 : GlobalSearchScope) : List<JSClass>;
	processElementByQName(arg1 : string, arg2 : GlobalSearchScope, arg3 : Processor<any>) : boolean;
	findElementsByQName(arg1 : string, arg2 : GlobalSearchScope) : Collection<JSQualifiedNamedElement>;
	findNamespaceMembers(arg1 : string, arg2 : GlobalSearchScope) : Collection<JSPsiElementBase>;
	findElementsByQNameIncludingImplicit(arg1 : string, arg2 : GlobalSearchScope) : Collection<JSPsiElementBase>;
	findElementsByNameIncludingImplicit(arg1 : string, arg2 : GlobalSearchScope) : Collection<JSPsiElementBase>;
	static findElementsByNameIncludingImplicit(arg1 : string, arg2 : GlobalSearchScope, arg3 : boolean) : Collection<JSPsiElementBase>;
	static addMatchingImplicitElements(arg1 : JSElement, arg2 : string, arg3 : Collection<JSPsiElementBase>) : void;
}

export = JSClassResolver
