import Object = require('nashorn/java/lang/Object');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSTypeEvaluationResult = require('nashorn/com/intellij/lang/javascript/psi/JSTypeEvaluationResult');
import JSReferenceExpression = require('nashorn/com/intellij/lang/javascript/psi/JSReferenceExpression');
import JSType = require('nashorn/com/intellij/lang/javascript/psi/JSType');
import JSElement = require('nashorn/com/intellij/lang/javascript/psi/JSElement');
import JSThisExpression = require('nashorn/com/intellij/lang/javascript/psi/JSThisExpression');

declare class JSContextResolver extends Object {
	static resolveContext(arg1 : PsiElement) : JSTypeEvaluationResult;
	_resolveContext(arg1 : PsiElement) : void;
	processRefExpr(arg1 : JSReferenceExpression) : boolean;
	proceedFromProperty(arg1 : PsiElement) : void;
	getQualifierAsJSType(arg1 : PsiElement) : JSType;
	getQualifierAsString() : string;
	static getQualifierOfExprAsString(arg1 : JSElement) : string;
	static findContextElement(arg1 : JSThisExpression) : PsiElement;
}

export = JSContextResolver
