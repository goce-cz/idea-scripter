import Object = require('nashorn/java/lang/Object');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSTypeResolveResult = require('nashorn/com/intellij/lang/javascript/psi/resolve/JSTypeResolveResult');
import JSReferenceExpression = require('nashorn/com/intellij/lang/javascript/psi/JSReferenceExpression');
import JSImportedElementResolveResult = require('nashorn/com/intellij/lang/javascript/psi/resolve/JSImportedElementResolveResult');
import PsiScopeProcessor = require('nashorn/com/intellij/psi/scope/PsiScopeProcessor');
import PsiNamedElement = require('nashorn/com/intellij/psi/PsiNamedElement');

declare class JSImportHandler extends Object {
	static instance : JSImportHandler;
	static getInstance() : JSImportHandler;
	getQualifiedNameResolvedType(arg1 : string, arg2 : PsiElement) : string;
	resolveTypeName(arg1 : string, arg2 : PsiElement) : JSTypeResolveResult;
	resolveTypeNameUsingImports(arg1 : JSReferenceExpression) : JSImportedElementResolveResult;
	importClass(arg1 : PsiScopeProcessor, arg2 : PsiNamedElement) : boolean;
}

export = JSImportHandler
