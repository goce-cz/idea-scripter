import JSExpression = require('nashorn/com/intellij/lang/javascript/psi/JSExpression');
import JSType = require('nashorn/com/intellij/lang/javascript/psi/JSType');
import JSFunctionExpression = require('nashorn/com/intellij/lang/javascript/psi/JSFunctionExpression');
import JSQualifiedNamedElement = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSQualifiedNamedElement');
import JSImplicitElementProvider = require('nashorn/com/intellij/lang/javascript/psi/JSImplicitElementProvider');
import StubBasedPsiElement = require('nashorn/com/intellij/psi/StubBasedPsiElement');
import JSDefinitionExpressionStub = require('nashorn/com/intellij/lang/javascript/psi/stubs/JSDefinitionExpressionStub');

declare class JSDefinitionExpression {
	expression : JSExpression;
	initializerOrStub : JSExpression;
	initializerReference : string;
	type : JSType;
	declaration : boolean;
	getExpression() : JSExpression;
	tryGetFunctionExpressionInitializer() : JSFunctionExpression;
	getInitializerOrStub() : JSExpression;
	getInitializerReference() : string;
	getType() : JSType;
	isDeclaration() : boolean;
}


declare interface JSDefinitionExpression extends JSExpression, JSQualifiedNamedElement, JSImplicitElementProvider, StubBasedPsiElement<JSDefinitionExpressionStub> {}
export = JSDefinitionExpression
