import Object = require('nashorn/java/lang/Object');
import Set = require('nashorn/java/util/Set');
import Map = require('nashorn/java/util/Map');
import JSType = require('nashorn/com/intellij/lang/javascript/psi/JSType');
import StubOutputStream = require('nashorn/com/intellij/psi/stubs/StubOutputStream');
import StubInputStream = require('nashorn/com/intellij/psi/stubs/StubInputStream');

declare class JSFileCachedData extends Object {
	commonJSModule : boolean;
	testFile : boolean;
	referencedPaths : Set<string>;
	importReferences : Map<string, string>;
	exportsInnerAlias : JSType;
	constructor();
	setIsCommonJSModule() : void;
	setIsTestFile() : void;
	setReferencedPaths(arg1 : Set<string>) : void;
	setImportReferences(arg1 : Map<string, string>) : void;
	isCommonJSModule() : boolean;
	isTestFile() : boolean;
	getReferencedPaths() : Set<string>;
	addReferencedPath(arg1 : string) : void;
	getImportReferences() : Map<string, string>;
	addImportReference(arg1 : string, arg2 : string) : void;
	getExportsInnerAlias() : JSType;
	setExportsInnerAlias(arg1 : JSType) : void;
	serialize(arg1 : StubOutputStream) : void;
	static deserialize(arg1 : StubInputStream) : JSFileCachedData;
}

export = JSFileCachedData
