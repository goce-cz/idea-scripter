import JSFunction = require('nashorn/com/intellij/lang/javascript/psi/JSFunction');
import StubInputStream = require('nashorn/com/intellij/psi/stubs/StubInputStream');
import StubElement = require('nashorn/com/intellij/psi/stubs/StubElement');
import JSStubElementType = require('nashorn/com/intellij/lang/javascript/psi/JSStubElementType');
import JSQualifiedObjectStubBase = require('nashorn/com/intellij/lang/javascript/psi/stubs/impl/JSQualifiedObjectStubBase');
import JSFunctionStubBase = require('nashorn/com/intellij/lang/javascript/psi/stubs/JSFunctionStubBase');

declare class JSFunctionStubBaseImpl<T extends JSFunction> {
	getProperty : boolean;
	setProperty : boolean;
	override : boolean;
	referencesArguments : boolean;
	referencesThis : boolean;
	returnTypeString : string;
	returnTypeExplicitlyDeclared : boolean;
	anonymousFunCall : boolean;
	constructor(arg1 : StubInputStream, arg2 : StubElement, arg3 : JSStubElementType);
	constructor(arg1 : string, arg2 : JSFunction.FunctionKind, arg3 : string, arg4 : string, arg5 : StubElement, arg6 : JSStubElementType);
}


declare interface JSFunctionStubBaseImpl<T extends JSFunction> extends JSQualifiedObjectStubBase<T>, JSFunctionStubBase<T> {}
export = JSFunctionStubBaseImpl
