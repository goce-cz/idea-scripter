import JSFunction = require('nashorn/com/intellij/lang/javascript/psi/JSFunction');
import JSStubElement = require('nashorn/com/intellij/lang/javascript/psi/stubs/JSStubElement');
import JSQualifiedStub = require('nashorn/com/intellij/lang/javascript/psi/stubs/JSQualifiedStub');

declare class JSFunctionStubBase<T extends JSFunction> {
	returnTypeString : string;
	returnTypeExplicitlyDeclared : boolean;
	getProperty : boolean;
	setProperty : boolean;
	override : boolean;
	referencesArguments : boolean;
	referencesThis : boolean;
	anonymousFunCall : boolean;
	getReturnTypeString() : string;
	isReturnTypeExplicitlyDeclared() : boolean;
	isGetProperty() : boolean;
	isSetProperty() : boolean;
	isConstructor() : boolean;
	isOverride() : boolean;
	isReferencesArguments() : boolean;
	isReferencesThis() : boolean;
	constructorCanBeInvokedWithoutNew() : boolean;
	isAnonymousFunCall() : boolean;
}


declare interface JSFunctionStubBase<T extends JSFunction> extends JSStubElement<T>, JSQualifiedStub<T> {}
export = JSFunctionStubBase
