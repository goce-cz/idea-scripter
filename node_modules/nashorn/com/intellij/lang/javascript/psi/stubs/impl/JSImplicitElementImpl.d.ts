import JSQualifiedName = require('nashorn/com/intellij/lang/javascript/psi/JSQualifiedName');
import JSImplicitElement = require('nashorn/com/intellij/lang/javascript/psi/stubs/JSImplicitElement');
import JSContext = require('nashorn/com/intellij/lang/javascript/psi/types/JSContext');
import JSAttributeList = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttributeList');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Language = require('nashorn/com/intellij/lang/Language');
import DataInput = require('nashorn/java/io/DataInput');
import FakePsiElement = require('nashorn/com/intellij/psi/impl/FakePsiElement');
import Object = require('nashorn/java/lang/Object');
import EnumSet = require('nashorn/java/util/EnumSet');

declare class JSImplicitElementImpl {
	name : string;
	namespace : JSQualifiedName;
	qualifiedName : string;
	namespaceExplicitlyDeclared : boolean;
	type : JSImplicitElement.Type;
	jSContext : JSContext;
	accessType : JSAttributeList.AccessType;
	deprecated : boolean;
	typeString : string;
	parent : PsiElement;
	language : Language;
	navigationElement : PsiElement;
	constructor(arg1 : string, arg2 : PsiElement);
	constructor(arg1 : string, arg2 : JSQualifiedName, arg3 : PsiElement);
	constructor(arg1 : JSImplicitElementImpl.Builder);
	static deserialize(arg1 : DataInput) : JSImplicitElementImpl.Builder;
	static fromQualifiedName(arg1 : string, arg2 : PsiElement) : JSImplicitElement;
	toBuilder() : JSImplicitElementImpl.Builder;
	fillBuilder(arg1 : JSImplicitElementImpl.Builder) : void;
	structureEquals(arg1 : JSImplicitElementImpl) : boolean;
}


declare interface JSImplicitElementImpl extends FakePsiElement, JSImplicitElement {}

declare module JSImplicitElementImpl {
	class Builder extends Object {
		constructor(arg1 : JSQualifiedName, arg2 : PsiElement);
		constructor(arg1 : string, arg2 : PsiElement);
		setName(arg1 : string) : JSImplicitElementImpl.Builder;
		setNamespace(arg1 : JSQualifiedName) : JSImplicitElementImpl.Builder;
		setNamespaceExplicitlyDeclared(arg1 : boolean) : JSImplicitElementImpl.Builder;
		setProperties(arg1 : JSImplicitElement.Property[]) : JSImplicitElementImpl.Builder;
		setProperties(arg1 : EnumSet<JSImplicitElement.Property>) : JSImplicitElementImpl.Builder;
		setType(arg1 : JSImplicitElement.Type) : JSImplicitElementImpl.Builder;
		setContext(arg1 : JSContext) : JSImplicitElementImpl.Builder;
		setAccessType(arg1 : JSAttributeList.AccessType) : JSImplicitElementImpl.Builder;
		setTypeString(arg1 : string) : JSImplicitElementImpl.Builder;
		setDeprecated(arg1 : boolean) : JSImplicitElementImpl.Builder;
		setProvider(arg1 : PsiElement) : JSImplicitElementImpl.Builder;
		toImplicitElement() : JSImplicitElementImpl;
	}
}

export = JSImplicitElementImpl
