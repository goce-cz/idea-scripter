import ArrayFactory = require('nashorn/com/intellij/util/ArrayFactory');
import JSParameterList = require('nashorn/com/intellij/lang/javascript/psi/JSParameterList');
import JSSourceElement = require('nashorn/com/intellij/lang/javascript/psi/JSSourceElement');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSParameter = require('nashorn/com/intellij/lang/javascript/psi/JSParameter');
import JSType = require('nashorn/com/intellij/lang/javascript/psi/JSType');
import JSQualifiedNamedElement = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSQualifiedNamedElement');
import JSAttributeListOwner = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttributeListOwner');
import StubBasedPsiElement = require('nashorn/com/intellij/psi/StubBasedPsiElement');
import JSFunctionStubBase = require('nashorn/com/intellij/lang/javascript/psi/stubs/JSFunctionStubBase');
import JSExecutionScope = require('nashorn/com/intellij/lang/javascript/psi/JSExecutionScope');
import JSFunctionItem = require('nashorn/com/intellij/lang/javascript/psi/JSFunctionItem');
import Enum = require('nashorn/java/lang/Enum');

declare class JSFunction {
	static EMPTY_ARRAY : JSFunction[];
	static ARRAY_FACTORY : ArrayFactory<JSFunction>;
	static ARGUMENTS_VAR_NAME : string;
	parameterList : JSParameterList;
	body : JSSourceElement[];
	getProperty : boolean;
	setProperty : boolean;
	override : boolean;
	returnTypeString : string;
	returnTypeElement : PsiElement;
	referencesThis : boolean;
	parameters : JSParameter[];
	kind : JSFunction.FunctionKind;
	referencesArguments : boolean;
	returnType : JSType;
	anonymousFunctionCall : boolean;
	getParameterList() : JSParameterList;
	getBody() : JSSourceElement[];
	isConstructor() : boolean;
	isOverride() : boolean;
	getReturnTypeString() : string;
	getReturnTypeElement() : PsiElement;
	isReferencesThis() : boolean;
	getKind() : JSFunction.FunctionKind;
	constructorCanBeInvokedWithoutNew() : boolean;
	isAnonymousFunctionCall() : boolean;
}


declare interface JSFunction extends JSQualifiedNamedElement, JSSourceElement, JSAttributeListOwner, StubBasedPsiElement<JSFunctionStubBase<JSFunction>>, JSExecutionScope, JSFunctionItem {}

declare module JSFunction {
	class FunctionKind {
		static GETTER : JSFunction.FunctionKind;
		static SETTER : JSFunction.FunctionKind;
		static CONSTRUCTOR : JSFunction.FunctionKind;
		static SIMPLE : JSFunction.FunctionKind;
	}


	interface FunctionKind extends Enum<JSFunction.FunctionKind> {}}

export = JSFunction
