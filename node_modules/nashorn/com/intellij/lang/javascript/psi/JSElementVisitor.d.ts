import JSCallExpression = require('nashorn/com/intellij/lang/javascript/psi/JSCallExpression');
import JSIndexedPropertyAccessExpression = require('nashorn/com/intellij/lang/javascript/psi/JSIndexedPropertyAccessExpression');
import JSNewExpression = require('nashorn/com/intellij/lang/javascript/psi/JSNewExpression');
import JSFunctionExpression = require('nashorn/com/intellij/lang/javascript/psi/JSFunctionExpression');
import JSPrefixExpression = require('nashorn/com/intellij/lang/javascript/psi/JSPrefixExpression');
import JSPostfixExpression = require('nashorn/com/intellij/lang/javascript/psi/JSPostfixExpression');
import JSConditionalExpression = require('nashorn/com/intellij/lang/javascript/psi/JSConditionalExpression');
import JSCommaExpression = require('nashorn/com/intellij/lang/javascript/psi/JSCommaExpression');
import JSAssignmentExpression = require('nashorn/com/intellij/lang/javascript/psi/JSAssignmentExpression');
import JSBinaryExpression = require('nashorn/com/intellij/lang/javascript/psi/JSBinaryExpression');
import JSProperty = require('nashorn/com/intellij/lang/javascript/psi/JSProperty');
import JSObjectLiteralExpression = require('nashorn/com/intellij/lang/javascript/psi/JSObjectLiteralExpression');
import JSArrayLiteralExpression = require('nashorn/com/intellij/lang/javascript/psi/JSArrayLiteralExpression');
import JSParenthesizedExpression = require('nashorn/com/intellij/lang/javascript/psi/JSParenthesizedExpression');
import JSReferenceExpression = require('nashorn/com/intellij/lang/javascript/psi/JSReferenceExpression');
import JSDefinitionExpression = require('nashorn/com/intellij/lang/javascript/psi/JSDefinitionExpression');
import JSLiteralExpression = require('nashorn/com/intellij/lang/javascript/psi/JSLiteralExpression');
import JSThisExpression = require('nashorn/com/intellij/lang/javascript/psi/JSThisExpression');
import JSLoopStatement = require('nashorn/com/intellij/lang/javascript/psi/JSLoopStatement');
import JSForInStatement = require('nashorn/com/intellij/lang/javascript/psi/JSForInStatement');
import JSForStatement = require('nashorn/com/intellij/lang/javascript/psi/JSForStatement');
import JSDoWhileStatement = require('nashorn/com/intellij/lang/javascript/psi/JSDoWhileStatement');
import JSWhileStatement = require('nashorn/com/intellij/lang/javascript/psi/JSWhileStatement');
import JSCaseClause = require('nashorn/com/intellij/lang/javascript/psi/JSCaseClause');
import JSSwitchStatement = require('nashorn/com/intellij/lang/javascript/psi/JSSwitchStatement');
import JSCatchBlock = require('nashorn/com/intellij/lang/javascript/psi/JSCatchBlock');
import JSTryStatement = require('nashorn/com/intellij/lang/javascript/psi/JSTryStatement');
import JSThrowStatement = require('nashorn/com/intellij/lang/javascript/psi/JSThrowStatement');
import JSReturnStatement = require('nashorn/com/intellij/lang/javascript/psi/JSReturnStatement');
import JSWithStatement = require('nashorn/com/intellij/lang/javascript/psi/JSWithStatement');
import JSBreakStatement = require('nashorn/com/intellij/lang/javascript/psi/JSBreakStatement');
import JSContinueStatement = require('nashorn/com/intellij/lang/javascript/psi/JSContinueStatement');
import JSIfStatement = require('nashorn/com/intellij/lang/javascript/psi/JSIfStatement');
import JSEmptyStatement = require('nashorn/com/intellij/lang/javascript/psi/JSEmptyStatement');
import JSVarStatement = require('nashorn/com/intellij/lang/javascript/psi/JSVarStatement');
import JSExpressionStatement = require('nashorn/com/intellij/lang/javascript/psi/JSExpressionStatement');
import JSLabeledStatement = require('nashorn/com/intellij/lang/javascript/psi/JSLabeledStatement');
import JSBlockStatement = require('nashorn/com/intellij/lang/javascript/psi/JSBlockStatement');
import JSArgumentList = require('nashorn/com/intellij/lang/javascript/psi/JSArgumentList');
import JSParameter = require('nashorn/com/intellij/lang/javascript/psi/JSParameter');
import JSVariable = require('nashorn/com/intellij/lang/javascript/psi/JSVariable');
import JSParameterList = require('nashorn/com/intellij/lang/javascript/psi/JSParameterList');
import JSElement = require('nashorn/com/intellij/lang/javascript/psi/JSElement');
import JSFunction = require('nashorn/com/intellij/lang/javascript/psi/JSFunction');
import JSStatement = require('nashorn/com/intellij/lang/javascript/psi/JSStatement');
import JSExpression = require('nashorn/com/intellij/lang/javascript/psi/JSExpression');
import JSAttributeList = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttributeList');
import JSPackageStatement = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSPackageStatement');
import JSImportStatement = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSImportStatement');
import JSUseNamespaceDirective = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSUseNamespaceDirective');
import JSNamespaceDeclaration = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSNamespaceDeclaration');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import JSReferenceList = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSReferenceList');
import JSSuperExpression = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSSuperExpression');
import JSIncludeDirective = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSIncludeDirective');
import JSAttribute = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttribute');
import JSAttributeNameValuePair = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttributeNameValuePair');
import JSYieldExpression = require('nashorn/com/intellij/lang/javascript/psi/JSYieldExpression');
import JSEmbeddedContent = require('nashorn/com/intellij/lang/javascript/psi/JSEmbeddedContent');
import JSLetStatement = require('nashorn/com/intellij/lang/javascript/psi/JSLetStatement');
import JSLetExpression = require('nashorn/com/intellij/lang/javascript/psi/JSLetExpression');
import JSGenericSignature = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSGenericSignature');
import JSDocTagValue = require('nashorn/com/intellij/lang/javascript/psi/jsdoc/JSDocTagValue');
import JSDocTag = require('nashorn/com/intellij/lang/javascript/psi/jsdoc/JSDocTag');
import JSDocComment = require('nashorn/com/intellij/lang/javascript/psi/jsdoc/JSDocComment');
import JSFile = require('nashorn/com/intellij/lang/javascript/psi/JSFile');
import JSLocalVariable = require('nashorn/com/intellij/lang/javascript/psi/JSLocalVariable');
import JSDestructuringContainer = require('nashorn/com/intellij/lang/javascript/psi/JSDestructuringContainer');
import JSDestructuringObject = require('nashorn/com/intellij/lang/javascript/psi/JSDestructuringObject');
import JSDestructuringArray = require('nashorn/com/intellij/lang/javascript/psi/JSDestructuringArray');
import JSDestructuringElement = require('nashorn/com/intellij/lang/javascript/psi/JSDestructuringElement');
import JSDestructuringProperty = require('nashorn/com/intellij/lang/javascript/psi/JSDestructuringProperty');
import JSArrayComprehension = require('nashorn/com/intellij/lang/javascript/psi/JSArrayComprehension');
import JSGeneratorExpression = require('nashorn/com/intellij/lang/javascript/psi/JSGeneratorExpression');
import TypeScriptInterface = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptInterface');
import TypeScriptType = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptType');
import TypeScriptObjectType = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptObjectType');
import TypeScriptSingleType = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptSingleType');
import TypeScriptTypeMember = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptTypeMember');
import TypeScriptPropertySignature = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptPropertySignature');
import TypeScriptFunctionSignature = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptFunctionSignature');
import TypeScriptIndexSignature = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptIndexSignature');
import TypeScriptCallSignature = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptCallSignature');
import TypeScriptEnum = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptEnum');
import TypeScriptModule = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptModule');
import TypeScriptImplicitModule = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptImplicitModule');
import TypeScriptImportStatement = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptImportStatement');
import TypeScriptExportAssignment = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptExportAssignment');
import ES6FromClause = require('nashorn/com/intellij/lang/ecmascript6/psi/ES6FromClause');
import ES6ImportDeclaration = require('nashorn/com/intellij/lang/ecmascript6/psi/ES6ImportDeclaration');
import ES6ExportDeclaration = require('nashorn/com/intellij/lang/ecmascript6/psi/ES6ExportDeclaration');
import ES6Type = require('nashorn/com/intellij/lang/ecmascript6/psi/ES6Type');
import ES6SingleType = require('nashorn/com/intellij/lang/ecmascript6/psi/ES6SingleType');
import ES6ObjectType = require('nashorn/com/intellij/lang/ecmascript6/psi/ES6ObjectType');
import TypeScriptTypeParameter = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptTypeParameter');
import PsiElementVisitor = require('nashorn/com/intellij/psi/PsiElementVisitor');

declare class JSElementVisitor {
	static NOP_ELEMENT_VISITOR : JSElementVisitor;
	constructor();
	visitJSCallExpression(arg1 : JSCallExpression) : void;
	visitJSIndexedPropertyAccessExpression(arg1 : JSIndexedPropertyAccessExpression) : void;
	visitJSNewExpression(arg1 : JSNewExpression) : void;
	visitJSFunctionExpression(arg1 : JSFunctionExpression) : void;
	visitJSPrefixExpression(arg1 : JSPrefixExpression) : void;
	visitJSPostfixExpression(arg1 : JSPostfixExpression) : void;
	visitJSConditionalExpression(arg1 : JSConditionalExpression) : void;
	visitJSCommaExpression(arg1 : JSCommaExpression) : void;
	visitJSAssignmentExpression(arg1 : JSAssignmentExpression) : void;
	visitJSBinaryExpression(arg1 : JSBinaryExpression) : void;
	visitJSProperty(arg1 : JSProperty) : void;
	visitJSObjectLiteralExpression(arg1 : JSObjectLiteralExpression) : void;
	visitJSArrayLiteralExpression(arg1 : JSArrayLiteralExpression) : void;
	visitJSParenthesizedExpression(arg1 : JSParenthesizedExpression) : void;
	visitJSReferenceExpression(arg1 : JSReferenceExpression) : void;
	visitJSDefinitionExpression(arg1 : JSDefinitionExpression) : void;
	visitJSLiteralExpression(arg1 : JSLiteralExpression) : void;
	visitJSThisExpression(arg1 : JSThisExpression) : void;
	visitJSLoopStatement(arg1 : JSLoopStatement) : void;
	visitJSForInStatement(arg1 : JSForInStatement) : void;
	visitJSForStatement(arg1 : JSForStatement) : void;
	visitJSDoWhileStatement(arg1 : JSDoWhileStatement) : void;
	visitJSWhileStatement(arg1 : JSWhileStatement) : void;
	visitJSCaseClause(arg1 : JSCaseClause) : void;
	visitJSSwitchStatement(arg1 : JSSwitchStatement) : void;
	visitJSCatchBlock(arg1 : JSCatchBlock) : void;
	visitJSTryStatement(arg1 : JSTryStatement) : void;
	visitJSThrowStatement(arg1 : JSThrowStatement) : void;
	visitJSReturnStatement(arg1 : JSReturnStatement) : void;
	visitJSWithStatement(arg1 : JSWithStatement) : void;
	visitJSBreakStatement(arg1 : JSBreakStatement) : void;
	visitJSContinueStatement(arg1 : JSContinueStatement) : void;
	visitJSIfStatement(arg1 : JSIfStatement) : void;
	visitJSEmptyStatement(arg1 : JSEmptyStatement) : void;
	visitJSVarStatement(arg1 : JSVarStatement) : void;
	visitJSExpressionStatement(arg1 : JSExpressionStatement) : void;
	visitJSLabeledStatement(arg1 : JSLabeledStatement) : void;
	visitJSBlock(arg1 : JSBlockStatement) : void;
	visitJSArgumentList(arg1 : JSArgumentList) : void;
	visitJSParameter(arg1 : JSParameter) : void;
	visitJSVariable(arg1 : JSVariable) : void;
	visitJSParameterList(arg1 : JSParameterList) : void;
	visitJSElement(arg1 : JSElement) : void;
	visitJSSourceElement(arg1 : JSElement) : void;
	visitJSFunctionDeclaration(arg1 : JSFunction) : void;
	visitJSStatement(arg1 : JSStatement) : void;
	visitJSExpression(arg1 : JSExpression) : void;
	visitJSAttributeList(arg1 : JSAttributeList) : void;
	visitJSPackageStatement(arg1 : JSPackageStatement) : void;
	visitJSImportStatement(arg1 : JSImportStatement) : void;
	visitJSUseNamespaceDirective(arg1 : JSUseNamespaceDirective) : void;
	visitJSNamespaceDeclaration(arg1 : JSNamespaceDeclaration) : void;
	visitJSClass(arg1 : JSClass) : void;
	visitJSReferenceList(arg1 : JSReferenceList) : void;
	visitJSSuperExpression(arg1 : JSSuperExpression) : void;
	visitJSIncludeDirective(arg1 : JSIncludeDirective) : void;
	visitJSAttribute(arg1 : JSAttribute) : void;
	visitJSAttributeNameValuePair(arg1 : JSAttributeNameValuePair) : void;
	visitJSYieldStatement(arg1 : JSYieldExpression) : void;
	visitJSEmbeddedContent(arg1 : JSEmbeddedContent) : void;
	visitJSLetStatement(arg1 : JSLetStatement) : void;
	visitJSLetExpression(arg1 : JSLetExpression) : void;
	visitJSGenericSignature(arg1 : JSGenericSignature) : void;
	visitJSDocTagValue(arg1 : JSDocTagValue) : void;
	visitJSDocTag(arg1 : JSDocTag) : void;
	visitJSDocComment(arg1 : JSDocComment) : void;
	visitJSFile(arg1 : JSFile) : void;
	visitJSLocalVariable(arg1 : JSLocalVariable) : void;
	visitJSDestructuringContainer(arg1 : JSDestructuringContainer) : void;
	visitJSDestructuringObject(arg1 : JSDestructuringObject) : void;
	visitJSDestructuringArray(arg1 : JSDestructuringArray) : void;
	visitJSDestructuringAssignment(arg1 : JSDestructuringElement) : void;
	visitJSDestructuringProperty(arg1 : JSDestructuringProperty) : void;
	visitJSArrayComprehension(arg1 : JSArrayComprehension) : void;
	visitJSGeneratorExpression(arg1 : JSGeneratorExpression) : void;
	visitTypeScriptInterface(arg1 : TypeScriptInterface) : void;
	visitTypeScriptType(arg1 : TypeScriptType) : void;
	visitTypeScriptObjectType(arg1 : TypeScriptObjectType) : void;
	visitTypeScriptSingleType(arg1 : TypeScriptSingleType) : void;
	visitTypeScriptTypeMember(arg1 : TypeScriptTypeMember) : void;
	visitTypeScriptPropertySignature(arg1 : TypeScriptPropertySignature) : void;
	visitTypeScriptFunctionSignature(arg1 : TypeScriptFunctionSignature) : void;
	visitTypeScriptIndexSignature(arg1 : TypeScriptIndexSignature) : void;
	visitTypeScriptCallSignature(arg1 : TypeScriptCallSignature) : void;
	visitTypeScriptEnum(arg1 : TypeScriptEnum) : void;
	visitTypeScriptModule(arg1 : TypeScriptModule) : void;
	visitTypeScriptImplicitModule(arg1 : TypeScriptImplicitModule) : void;
	visitTypeScriptImportStatement(arg1 : TypeScriptImportStatement) : void;
	visitTypeScriptExportAssignment(arg1 : TypeScriptExportAssignment) : void;
	visitES6FromClause(arg1 : ES6FromClause) : void;
	visitES6ImportDeclaration(arg1 : ES6ImportDeclaration) : void;
	visitES6ExportDeclaration(arg1 : ES6ExportDeclaration) : void;
	visitES6Type(arg1 : ES6Type) : void;
	visitES6SingleType(arg1 : ES6SingleType) : void;
	visitES6ObjectType(arg1 : ES6ObjectType) : void;
	visitTypeScriptTypeParameter(arg1 : TypeScriptTypeParameter) : void;
}


declare interface JSElementVisitor extends PsiElementVisitor {}
export = JSElementVisitor
