import JSFunction = require('nashorn/com/intellij/lang/javascript/psi/JSFunction');
import JSParameterTypeDecorator = require('nashorn/com/intellij/lang/javascript/psi/JSParameterTypeDecorator');
import JSAttributeList = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttributeList');
import JSType = require('nashorn/com/intellij/lang/javascript/psi/JSType');
import SearchScope = require('nashorn/com/intellij/psi/search/SearchScope');
import JSElementIndexingData = require('nashorn/com/intellij/lang/javascript/psi/stubs/JSElementIndexingData');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import JSParameterStub = require('nashorn/com/intellij/lang/javascript/psi/stubs/JSParameterStub');
import JSStubElementType = require('nashorn/com/intellij/lang/javascript/psi/JSStubElementType');
import JSParameter = require('nashorn/com/intellij/lang/javascript/psi/JSParameter');
import JSElement = require('nashorn/com/intellij/lang/javascript/psi/JSElement');
import JSRecordTypeImpl = require('nashorn/com/intellij/lang/javascript/psi/types/JSRecordTypeImpl');
import JSQualifiedName = require('nashorn/com/intellij/lang/javascript/psi/JSQualifiedName');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Collection = require('nashorn/java/util/Collection');
import JSImplicitElement = require('nashorn/com/intellij/lang/javascript/psi/stubs/JSImplicitElement');
import JSVariableBaseImpl = require('nashorn/com/intellij/lang/javascript/psi/impl/JSVariableBaseImpl');
import StubBasedPsiElement = require('nashorn/com/intellij/psi/StubBasedPsiElement');
import JSVariableStubBase = require('nashorn/com/intellij/lang/javascript/psi/stubs/JSVariableStubBase');

declare class JSParameterImpl {
	declaringFunction : JSFunction;
	rest : boolean;
	optional : boolean;
	typeDecorator : JSParameterTypeDecorator;
	attributeList : JSAttributeList;
	typeIncludingOverridden : JSType;
	useScope : SearchScope;
	indexingData : JSElementIndexingData;
	constructor(arg1 : ASTNode);
	constructor(arg1 : JSParameterStub);
	constructor(arg1 : JSParameterStub, arg2 : JSStubElementType<JSParameterStub, JSParameter>);
	isTypeExplicitlyDeclared() : boolean;
	static findParameterNameIdentifier(arg1 : ASTNode) : ASTNode;
	getOwner() : JSElement;
	static getImplicitMembersFromRecordType(arg1 : JSRecordTypeImpl, arg2 : JSQualifiedName, arg3 : PsiElement) : Collection<JSImplicitElement>;
}


declare interface JSParameterImpl extends JSVariableBaseImpl<JSParameterStub, JSParameter>, JSParameter, StubBasedPsiElement<JSVariableStubBase> {}
export = JSParameterImpl
