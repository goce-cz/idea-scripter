import JSExpression = require('nashorn/com/intellij/lang/javascript/psi/JSExpression');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import JSReturnStatementStub = require('nashorn/com/intellij/lang/javascript/psi/stubs/JSReturnStatementStub');
import JSStubbedStatementImpl = require('nashorn/com/intellij/lang/javascript/psi/impl/JSStubbedStatementImpl');
import JSReturnStatement = require('nashorn/com/intellij/lang/javascript/psi/JSReturnStatement');

declare class JSReturnStatementImpl {
	expression : JSExpression;
	constructor(arg1 : ASTNode);
	constructor(arg1 : JSReturnStatementStub);
	static getExpressionNode(arg1 : ASTNode) : ASTNode;
}


declare interface JSReturnStatementImpl extends JSStubbedStatementImpl<JSReturnStatementStub>, JSReturnStatement {}
export = JSReturnStatementImpl
