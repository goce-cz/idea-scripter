import JSStubElement = require('nashorn/com/intellij/lang/javascript/psi/stubs/JSStubElement');
import Language = require('nashorn/com/intellij/lang/Language');
import SearchScope = require('nashorn/com/intellij/psi/search/SearchScope');
import ItemPresentation = require('nashorn/com/intellij/navigation/ItemPresentation');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import IStubElementType = require('nashorn/com/intellij/psi/stubs/IStubElementType');
import Icon = require('nashorn/javax/swing/Icon');
import JSAttributeList = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttributeList');
import StubBasedPsiElementBase = require('nashorn/com/intellij/extapi/psi/StubBasedPsiElementBase');
import JSElement = require('nashorn/com/intellij/lang/javascript/psi/JSElement');

declare class JSStubElementImpl<T extends JSStubElement> {
	language : Language;
	defaultUseScope : SearchScope;
	presentation : ItemPresentation;
	parent : PsiElement;
	resolveScope : GlobalSearchScope;
	constructor(arg1 : ASTNode);
	constructor(arg1 : T, arg2 : IStubElementType);
	getDefaultUseScope() : SearchScope;
	static blendModifierFlags(arg1 : Icon, arg2 : JSAttributeList, arg3 : boolean) : Icon;
	static blendFlags(arg1 : Icon, arg2 : boolean, arg3 : boolean) : Icon;
	clearCaches() : void;
}


declare interface JSStubElementImpl<T extends JSStubElement> extends StubBasedPsiElementBase<T>, JSElement {}
export = JSStubElementImpl
