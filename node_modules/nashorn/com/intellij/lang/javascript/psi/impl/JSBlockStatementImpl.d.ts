import JSStatement = require('nashorn/com/intellij/lang/javascript/psi/JSStatement');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import JSLabeledStatement = require('nashorn/com/intellij/lang/javascript/psi/JSLabeledStatement');
import JSStatementImpl = require('nashorn/com/intellij/lang/javascript/psi/impl/JSStatementImpl');
import JSBlockStatement = require('nashorn/com/intellij/lang/javascript/psi/JSBlockStatement');

declare class JSBlockStatementImpl {
	statements : JSStatement[];
	conditionalCompileBlock : boolean;
	constructor(arg1 : ASTNode);
	setLabel(arg1 : string) : JSLabeledStatement;
}


declare interface JSBlockStatementImpl extends JSStatementImpl, JSBlockStatement {}
export = JSBlockStatementImpl
