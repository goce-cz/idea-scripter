import PsiReference = require('nashorn/com/intellij/psi/PsiReference');
import JSStatementImpl = require('nashorn/com/intellij/lang/javascript/psi/impl/JSStatementImpl');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');
import Object = require('nashorn/java/lang/Object');
import PsiElementProcessor = require('nashorn/com/intellij/psi/search/PsiElementProcessor');
import JSLabeledStatement = require('nashorn/com/intellij/lang/javascript/psi/JSLabeledStatement');

declare class JSStatementWithLabelReferenceImpl {
	label : string;
	references : PsiReference[];
	getLabel() : string;
}


declare interface JSStatementWithLabelReferenceImpl extends JSStatementImpl {}

declare module JSStatementWithLabelReferenceImpl {
	class LabelReference {
		element : PsiElement;
		rangeInElement : TextRange;
		canonicalText : string;
		variants : Object[];
		soft : boolean;
		processElements(arg1 : PsiElementProcessor<JSLabeledStatement>) : void;
	}


	interface LabelReference extends PsiReference {}}

export = JSStatementWithLabelReferenceImpl
