import Project = require('nashorn/com/intellij/openapi/project/Project');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import Condition = require('nashorn/com/intellij/openapi/util/Condition');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');

declare class PublicInheritorFilter {
	superClassName : string;
	constructor(arg1 : Project, arg2 : string, arg3 : GlobalSearchScope, arg4 : boolean);
	constructor(arg1 : Project, arg2 : string, arg3 : GlobalSearchScope, arg4 : boolean, arg5 : boolean);
	getCondition() : Condition<JSClass>;
	setScope(arg1 : GlobalSearchScope) : void;
	getSuperClassName() : string;
}


declare interface PublicInheritorFilter extends Condition<JSClass> {}
export = PublicInheritorFilter
