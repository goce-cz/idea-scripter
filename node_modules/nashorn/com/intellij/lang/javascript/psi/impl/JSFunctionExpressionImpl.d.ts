import JSFunctionStubBase = require('nashorn/com/intellij/lang/javascript/psi/stubs/JSFunctionStubBase');
import JSQualifiedNamedElement = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSQualifiedNamedElement');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import IStubElementType = require('nashorn/com/intellij/psi/stubs/IStubElementType');
import JSFunctionBaseImpl = require('nashorn/com/intellij/lang/javascript/psi/impl/JSFunctionBaseImpl');
import JSFunctionExpression = require('nashorn/com/intellij/lang/javascript/psi/JSFunctionExpression');

declare class JSFunctionExpressionImpl<StubT extends JSFunctionStubBase> {
	textOffset : number;
	getProperty : boolean;
	setProperty : boolean;
	qualifiedName : string;
	anonymousFunctionCall : boolean;
	elementAssignedTo : JSQualifiedNamedElement;
	namespaceExplicitlyDeclared : boolean;
	constructor(arg1 : ASTNode);
	constructor(arg1 : StubT, arg2 : IStubElementType);
}


declare interface JSFunctionExpressionImpl<StubT extends JSFunctionStubBase> extends JSFunctionBaseImpl<JSFunctionStubBase>, JSFunctionExpression {}
export = JSFunctionExpressionImpl
