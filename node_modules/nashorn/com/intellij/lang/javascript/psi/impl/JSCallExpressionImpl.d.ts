import JSExpression = require('nashorn/com/intellij/lang/javascript/psi/JSExpression');
import JSArgumentList = require('nashorn/com/intellij/lang/javascript/psi/JSArgumentList');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import JSCallExpressionStub = require('nashorn/com/intellij/lang/javascript/psi/stubs/JSCallExpressionStub');
import JSCallExpression = require('nashorn/com/intellij/lang/javascript/psi/JSCallExpression');
import JSImplicitElementProviderImpl = require('nashorn/com/intellij/lang/javascript/psi/impl/JSImplicitElementProviderImpl');
import StubBasedPsiElement = require('nashorn/com/intellij/psi/StubBasedPsiElement');

declare class JSCallExpressionImpl {
	methodExpression : JSExpression;
	argumentList : JSArgumentList;
	arguments : JSExpression[];
	constructor(arg1 : ASTNode);
	constructor(arg1 : JSCallExpressionStub);
	static getMethodExpression(arg1 : ASTNode) : ASTNode;
	static notNullArguments(arg1 : JSCallExpression) : JSExpression[];
	static shouldCreateStub(arg1 : ASTNode) : boolean;
}


declare interface JSCallExpressionImpl extends JSImplicitElementProviderImpl<JSCallExpressionStub>, JSCallExpression, StubBasedPsiElement<JSCallExpressionStub> {}
export = JSCallExpressionImpl
