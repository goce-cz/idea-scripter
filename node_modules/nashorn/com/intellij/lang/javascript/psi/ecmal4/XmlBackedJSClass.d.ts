import Key = require('nashorn/com/intellij/openapi/util/Key');
import PsiScopeProcessor = require('nashorn/com/intellij/psi/scope/PsiScopeProcessor');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import JSClassStub = require('nashorn/com/intellij/lang/javascript/psi/stubs/JSClassStub');
import Object = require('nashorn/java/lang/Object');
import XmlTag = require('nashorn/com/intellij/psi/xml/XmlTag');
import JSFile = require('nashorn/com/intellij/lang/javascript/psi/JSFile');

declare class XmlBackedJSClass {
	static PROCESS_XML_BACKED_CLASS_MEMBERS_HINT : Key<boolean>;
	processOuterDeclarations(arg1 : PsiScopeProcessor) : boolean;
	visitInjectedFiles(arg1 : XmlBackedJSClass.InjectedFileVisitor) : void;
}


declare interface XmlBackedJSClass extends JSClass<JSClassStub> {}

declare module XmlBackedJSClass {
	class InjectedFileVisitor extends Object {
		visit(arg1 : XmlTag, arg2 : JSFile) : void;
	}
}

export = XmlBackedJSClass
