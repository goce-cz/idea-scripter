import JSSourceElement = require('nashorn/com/intellij/lang/javascript/psi/JSSourceElement');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSQualifiedName = require('nashorn/com/intellij/lang/javascript/psi/JSQualifiedName');
import JSAttributeList = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttributeList');
import JSContext = require('nashorn/com/intellij/lang/javascript/psi/types/JSContext');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import JSPackageStatementStub = require('nashorn/com/intellij/lang/javascript/psi/stubs/JSPackageStatementStub');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import JSPackageStatement = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSPackageStatement');
import JSStubbedStatementImpl = require('nashorn/com/intellij/lang/javascript/psi/impl/JSStubbedStatementImpl');

declare class JSPackageStatementImpl {
	name : string;
	qualifiedName : string;
	statements : JSSourceElement[];
	nameIdentifier : PsiElement;
	namespace : JSQualifiedName;
	namespaceExplicitlyDeclared : boolean;
	accessType : JSAttributeList.AccessType;
	deprecated : boolean;
	jSContext : JSContext;
	constructor(arg1 : ASTNode);
	constructor(arg1 : JSPackageStatementStub);
	static doChangeName(arg1 : Project, arg2 : JSPackageStatement, arg3 : string) : void;
}


declare interface JSPackageStatementImpl extends JSStubbedStatementImpl<JSPackageStatementStub>, JSPackageStatement {}
export = JSPackageStatementImpl
