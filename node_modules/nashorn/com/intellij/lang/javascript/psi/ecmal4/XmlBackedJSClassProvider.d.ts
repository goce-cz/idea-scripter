import Object = require('nashorn/java/lang/Object');
import ExtensionPointName = require('nashorn/com/intellij/openapi/extensions/ExtensionPointName');
import XmlFile = require('nashorn/com/intellij/psi/xml/XmlFile');
import XmlTag = require('nashorn/com/intellij/psi/xml/XmlTag');
import XmlBackedJSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/XmlBackedJSClass');
import Collection = require('nashorn/java/util/Collection');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');

declare class XmlBackedJSClassProvider extends Object {
	static EP_NAME : ExtensionPointName<XmlBackedJSClassProvider>;
	constructor();
	static forFile(arg1 : XmlFile) : XmlBackedJSClassProvider;
	hasJSClass(arg1 : XmlFile) : boolean;
	isScriptTag(arg1 : XmlTag) : boolean;
	canCreateClassFromTag(arg1 : XmlTag) : boolean;
	getClassOwnerTag(arg1 : XmlTag) : XmlTag;
	createClassFromTag(arg1 : XmlTag) : XmlBackedJSClass;
	processAllTags() : boolean;
	getChildClasses(arg1 : XmlFile) : Collection<JSClass>;
}

export = XmlBackedJSClassProvider
