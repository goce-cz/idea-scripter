import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSAttributeNameValuePair = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttributeNameValuePair');
import PsiReference = require('nashorn/com/intellij/psi/PsiReference');
import XmlElementDescriptor = require('nashorn/com/intellij/xml/XmlElementDescriptor');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import JSAttributeStub = require('nashorn/com/intellij/lang/javascript/psi/stubs/JSAttributeStub');
import JSStubElementType = require('nashorn/com/intellij/lang/javascript/psi/JSStubElementType');
import JSAttribute = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttribute');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');
import JSStubElementImpl = require('nashorn/com/intellij/lang/javascript/psi/impl/JSStubElementImpl');
import Object = require('nashorn/java/lang/Object');
import XmlNSDescriptorImpl = require('nashorn/com/intellij/xml/impl/dtd/XmlNSDescriptorImpl');
import EmptyResolveMessageProvider = require('nashorn/com/intellij/codeInsight/daemon/EmptyResolveMessageProvider');
import JSResolveUtil = require('nashorn/com/intellij/lang/javascript/psi/resolve/JSResolveUtil');

declare class JSAttributeImpl {
	static URN_FLEX_META : string;
	nameIdentifier : PsiElement;
	navigationElement : PsiElement;
	name : string;
	values : JSAttributeNameValuePair[];
	reference : PsiReference;
	references : PsiReference[];
	backedDescriptor : XmlElementDescriptor;
	constructor(arg1 : ASTNode);
	constructor(arg1 : JSAttributeStub);
	constructor(arg1 : JSAttributeStub, arg2 : JSStubElementType<JSAttributeStub, JSAttribute>);
	createReference(arg1 : TextRange) : PsiReference;
	getBackedDescriptor() : XmlElementDescriptor;
}


declare interface JSAttributeImpl extends JSStubElementImpl<JSAttributeStub>, JSAttribute {}

declare module JSAttributeImpl {
	class AttrNameReference {
		element : PsiElement;
		rangeInElement : TextRange;
		canonicalText : string;
		variants : Object[];
		soft : boolean;
		unresolvedMessagePattern : string;
		constructor(arg1 : JSAttribute, arg2 : TextRange);
		getElementDescriptor() : XmlElementDescriptor;
		getNsDescriptor() : XmlNSDescriptorImpl;
	}


	interface AttrNameReference extends PsiReference, EmptyResolveMessageProvider {}	class MyProcessor {
	}


	interface MyProcessor extends JSResolveUtil.MetaDataProcessor {}}

export = JSAttributeImpl
