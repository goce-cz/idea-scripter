import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSType = require('nashorn/com/intellij/lang/javascript/psi/JSType');
import ProcessingContext = require('nashorn/com/intellij/util/ProcessingContext');
import JSNamedType = require('nashorn/com/intellij/lang/javascript/psi/types/JSNamedType');

declare class JSTypeImpl {
	resolvedTypeText : string;
	typeText : string;
	resolveType() : void;
	static isSourceElementNotValid(arg1 : PsiElement) : boolean;
	static fromElement(arg1 : PsiElement, arg2 : PsiElement) : JSType;
	addToContextQualifierName(arg1 : ProcessingContext) : string;
	getTypedef(arg1 : string, arg2 : ProcessingContext) : JSType;
	inheritsFunction() : boolean;
}


declare interface JSTypeImpl extends JSNamedType, JSType {}
export = JSTypeImpl
