import JSContext = require('nashorn/com/intellij/lang/javascript/psi/types/JSContext');
import JSTypeContext = require('nashorn/com/intellij/lang/javascript/psi/types/JSTypeContext');
import JSTypeSource = require('nashorn/com/intellij/lang/javascript/psi/types/JSTypeSource');
import JSType = require('nashorn/com/intellij/lang/javascript/psi/JSType');
import JSTypeBaseImpl = require('nashorn/com/intellij/lang/javascript/psi/types/JSTypeBaseImpl');

declare class JSNamedType {
	static QUOTE_ESCAPE_MARK : string;
	static QUOTE_ESCAPE : string;
	staticOrInstance : JSContext;
	typeContext : JSTypeContext;
	static createType(arg1 : string, arg2 : JSTypeSource, arg3 : JSContext) : JSType;
	static createType(arg1 : string, arg2 : JSTypeSource, arg3 : JSTypeContext) : JSType;
	static copyWithNewContext(arg1 : JSNamedType, arg2 : JSTypeContext) : JSType;
	isStaticOrInstance() : JSContext;
	getTypeContext() : JSTypeContext;
	static appendStaticSuffix(arg1 : string) : string;
}


declare interface JSNamedType extends JSTypeBaseImpl {}
export = JSNamedType
