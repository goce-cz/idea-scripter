import Set = require('nashorn/java/util/Set');
import JSType = require('nashorn/com/intellij/lang/javascript/psi/JSType');
import JSTypeSource = require('nashorn/com/intellij/lang/javascript/psi/types/JSTypeSource');
import JSTypeBaseImpl = require('nashorn/com/intellij/lang/javascript/psi/types/JSTypeBaseImpl');
import Enum = require('nashorn/java/lang/Enum');

declare class JSDecoratedTypeImpl {
	decorations : Set<JSDecoratedTypeImpl.TypeDecoration>;
	type : JSType;
	constructor(arg1 : JSTypeSource, arg2 : JSType, arg3 : Set<JSDecoratedTypeImpl.TypeDecoration>);
	getDecorations() : Set<JSDecoratedTypeImpl.TypeDecoration>;
	getType() : JSType;
}


declare interface JSDecoratedTypeImpl extends JSTypeBaseImpl, JSType {}

declare module JSDecoratedTypeImpl {
	class TypeDecoration {
		static NULLABLE : JSDecoratedTypeImpl.TypeDecoration;
		static NOTNULL : JSDecoratedTypeImpl.TypeDecoration;
	}


	interface TypeDecoration extends Enum<JSDecoratedTypeImpl.TypeDecoration> {}}

export = JSDecoratedTypeImpl
