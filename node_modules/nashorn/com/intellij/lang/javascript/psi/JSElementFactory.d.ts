import Object = require('nashorn/java/lang/Object');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import CharSequence = require('nashorn/java/lang/CharSequence');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSExpressionCodeFragment = require('nashorn/com/intellij/lang/javascript/psi/JSExpressionCodeFragment');
import JSLanguageDialect = require('nashorn/com/intellij/lang/javascript/JSLanguageDialect');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import JavaScriptParserBase = require('nashorn/com/intellij/lang/javascript/parsing/JavaScriptParserBase');
import Enum = require('nashorn/java/lang/Enum');

declare class JSElementFactory extends Object {
	static createExpressionCodeFragment(arg1 : Project, arg2 : CharSequence, arg3 : PsiElement) : JSExpressionCodeFragment;
	static createExpressionCodeFragment(arg1 : Project, arg2 : CharSequence, arg3 : PsiElement, arg4 : JSLanguageDialect, arg5 : GlobalSearchScope, arg6 : JSElementFactory.TopLevelCompletion, arg7 : JavaScriptParserBase.ForceContext) : JSExpressionCodeFragment;
	static createExpressionCodeFragment(arg1 : Project, arg2 : CharSequence, arg3 : PsiElement, arg4 : boolean, arg5 : JSLanguageDialect, arg6 : GlobalSearchScope, arg7 : JSElementFactory.TopLevelCompletion, arg8 : JavaScriptParserBase.ForceContext) : JSExpressionCodeFragment;
}


declare module JSElementFactory {
	class TopLevelCompletion {
		static YES : JSElementFactory.TopLevelCompletion;
		static NO : JSElementFactory.TopLevelCompletion;
		static LITERAL_VALUES : JSElementFactory.TopLevelCompletion;
	}


	interface TopLevelCompletion extends Enum<JSElementFactory.TopLevelCompletion> {}}

export = JSElementFactory
