import JSAttributeList = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttributeList');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import TypeScriptFunctionStub = require('nashorn/com/intellij/lang/javascript/psi/stubs/TypeScriptFunctionStub');
import IStubElementType = require('nashorn/com/intellij/psi/stubs/IStubElementType');
import TypeScriptFunctionBaseImpl = require('nashorn/com/intellij/lang/javascript/psi/ecma6/impl/TypeScriptFunctionBaseImpl');
import TypeScriptFunction = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptFunction');

declare class TypeScriptFunctionImpl {
	overloadDeclaration : boolean;
	qualifiedName : string;
	namespaceExplicitlyDeclared : boolean;
	name : string;
	accessType : JSAttributeList.AccessType;
	constructor(arg1 : ASTNode);
	constructor(arg1 : TypeScriptFunctionStub, arg2 : IStubElementType);
	static isOverloadDeclaration(arg1 : ASTNode) : boolean;
}


declare interface TypeScriptFunctionImpl extends TypeScriptFunctionBaseImpl<TypeScriptFunctionStub, TypeScriptFunction>, TypeScriptFunction {}
export = TypeScriptFunctionImpl
