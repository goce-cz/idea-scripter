import TypeScriptType = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptType');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import TypeScriptTypeParameterStub = require('nashorn/com/intellij/lang/javascript/psi/stubs/TypeScriptTypeParameterStub');
import IStubElementType = require('nashorn/com/intellij/psi/stubs/IStubElementType');
import JSStubElementImpl = require('nashorn/com/intellij/lang/javascript/psi/impl/JSStubElementImpl');
import TypeScriptTypeParameter = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptTypeParameter');

declare class TypeScriptTypeParameterImpl {
	name : string;
	typeConstraint : TypeScriptType;
	nameIdentifier : PsiElement;
	constructor(arg1 : ASTNode);
	constructor(arg1 : TypeScriptTypeParameterStub, arg2 : IStubElementType);
}


declare interface TypeScriptTypeParameterImpl extends JSStubElementImpl<TypeScriptTypeParameterStub>, TypeScriptTypeParameter {}
export = TypeScriptTypeParameterImpl
