import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import TypeScriptObjectType = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptObjectType');
import JSReferenceList = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSReferenceList');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import JSFunction = require('nashorn/com/intellij/lang/javascript/psi/JSFunction');
import JSVariable = require('nashorn/com/intellij/lang/javascript/psi/JSVariable');
import JSAttributeList = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttributeList');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import TypeScriptInterfaceStub = require('nashorn/com/intellij/lang/javascript/psi/stubs/TypeScriptInterfaceStub');
import TypeScriptClassBase = require('nashorn/com/intellij/lang/javascript/psi/ecma6/impl/TypeScriptClassBase');
import TypeScriptInterface = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptInterface');

declare class TypeScriptInterfaceImpl {
	name : string;
	textOffset : number;
	qualifiedName : string;
	nameIdentifier : PsiElement;
	body : TypeScriptObjectType;
	extendsList : JSReferenceList;
	implementsList : JSReferenceList;
	interface : boolean;
	supers : JSClass[];
	functions : JSFunction[];
	fields : JSVariable[];
	implementedInterfaces : JSClass[];
	deprecated : boolean;
	attributeList : JSAttributeList;
	constructor(arg1 : ASTNode);
	constructor(arg1 : TypeScriptInterfaceStub);
}


declare interface TypeScriptInterfaceImpl extends TypeScriptClassBase<TypeScriptInterfaceStub>, TypeScriptInterface {}
export = TypeScriptInterfaceImpl
