import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSAttributeList = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttributeList');
import JSQualifiedName = require('nashorn/com/intellij/lang/javascript/psi/JSQualifiedName');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import TypeScriptFunctionSignatureStub = require('nashorn/com/intellij/lang/javascript/psi/stubs/TypeScriptFunctionSignatureStub');
import IStubElementType = require('nashorn/com/intellij/psi/stubs/IStubElementType');
import TypeScriptFunctionBaseImpl = require('nashorn/com/intellij/lang/javascript/psi/ecma6/impl/TypeScriptFunctionBaseImpl');
import TypeScriptFunctionSignature = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptFunctionSignature');

declare class TypeScriptFunctionSignatureImpl {
	nameIdentifier : PsiElement;
	name : string;
	attributeList : JSAttributeList;
	namespace : JSQualifiedName;
	qualifiedName : string;
	optional : boolean;
	namespaceExplicitlyDeclared : boolean;
	constructor(arg1 : ASTNode);
	constructor(arg1 : TypeScriptFunctionSignatureStub, arg2 : IStubElementType);
}


declare interface TypeScriptFunctionSignatureImpl extends TypeScriptFunctionBaseImpl<TypeScriptFunctionSignatureStub, TypeScriptFunctionSignature>, TypeScriptFunctionSignature {}
export = TypeScriptFunctionSignatureImpl
