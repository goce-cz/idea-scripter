import TypeScriptTypeArgumentList = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptTypeArgumentList');
import JSReferenceExpression = require('nashorn/com/intellij/lang/javascript/psi/JSReferenceExpression');
import StubBasedPsiElement = require('nashorn/com/intellij/psi/StubBasedPsiElement');
import TypeScriptSingleTypeStub = require('nashorn/com/intellij/lang/javascript/psi/stubs/TypeScriptSingleTypeStub');
import TypeScriptType = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptType');

declare class TypeScriptSingleType {
	qualifiedTypeName : string;
	typeArguments : TypeScriptTypeArgumentList;
	referenceExpression : JSReferenceExpression;
	getQualifiedTypeName() : string;
	getTypeArguments() : TypeScriptTypeArgumentList;
	getReferenceExpression() : JSReferenceExpression;
}


declare interface TypeScriptSingleType extends StubBasedPsiElement<TypeScriptSingleTypeStub>, TypeScriptType {}
export = TypeScriptSingleType
