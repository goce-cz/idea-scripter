import JSTypeDeclaration = require('nashorn/com/intellij/lang/javascript/psi/ecma6/JSTypeDeclaration');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSQualifiedName = require('nashorn/com/intellij/lang/javascript/psi/JSQualifiedName');
import JSAttributeList = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttributeList');
import JSContext = require('nashorn/com/intellij/lang/javascript/psi/types/JSContext');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import TypeScriptPropertySignatureStub = require('nashorn/com/intellij/lang/javascript/psi/stubs/TypeScriptPropertySignatureStub');
import IStubElementType = require('nashorn/com/intellij/psi/stubs/IStubElementType');
import JSStubElementImpl = require('nashorn/com/intellij/lang/javascript/psi/impl/JSStubElementImpl');
import TypeScriptPropertySignature = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptPropertySignature');

declare class TypeScriptPropertySignatureImpl {
	optional : boolean;
	type : JSTypeDeclaration;
	nameIdentifier : PsiElement;
	name : string;
	namespace : JSQualifiedName;
	qualifiedName : string;
	namespaceExplicitlyDeclared : boolean;
	accessType : JSAttributeList.AccessType;
	deprecated : boolean;
	jSContext : JSContext;
	constructor(arg1 : ASTNode);
	constructor(arg1 : TypeScriptPropertySignatureStub, arg2 : IStubElementType);
}


declare interface TypeScriptPropertySignatureImpl extends JSStubElementImpl<TypeScriptPropertySignatureStub>, TypeScriptPropertySignature {}
export = TypeScriptPropertySignatureImpl
