import TypeScriptTypeParameterList = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptTypeParameterList');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import TypeScriptFunctionExpressionStub = require('nashorn/com/intellij/lang/javascript/psi/stubs/TypeScriptFunctionExpressionStub');
import IStubElementType = require('nashorn/com/intellij/psi/stubs/IStubElementType');
import JSFunctionExpressionImpl = require('nashorn/com/intellij/lang/javascript/psi/impl/JSFunctionExpressionImpl');
import TypeScriptFunctionExpression = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptFunctionExpression');

declare class TypeScriptFunctionExpressionImpl {
	typeParameterList : TypeScriptTypeParameterList;
	overloadDeclaration : boolean;
	constructor(arg1 : ASTNode);
	constructor(arg1 : TypeScriptFunctionExpressionStub, arg2 : IStubElementType);
}


declare interface TypeScriptFunctionExpressionImpl extends JSFunctionExpressionImpl<TypeScriptFunctionExpressionStub>, TypeScriptFunctionExpression {}
export = TypeScriptFunctionExpressionImpl
