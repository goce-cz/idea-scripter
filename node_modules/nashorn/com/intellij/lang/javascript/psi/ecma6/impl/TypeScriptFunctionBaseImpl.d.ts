import JSFunctionStubBase = require('nashorn/com/intellij/lang/javascript/psi/stubs/JSFunctionStubBase');
import JSFunction = require('nashorn/com/intellij/lang/javascript/psi/JSFunction');
import TypeScriptTypeParameterList = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptTypeParameterList');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import IStubElementType = require('nashorn/com/intellij/psi/stubs/IStubElementType');
import JSFunctionBaseImpl = require('nashorn/com/intellij/lang/javascript/psi/impl/JSFunctionBaseImpl');
import TypeScriptTypeParameterListOwner = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptTypeParameterListOwner');

declare class TypeScriptFunctionBaseImpl<StubT extends JSFunctionStubBase<PsiT>, PsiT extends JSFunction> {
	typeParameterList : TypeScriptTypeParameterList;
	overloadDeclaration : boolean;
	constructor(arg1 : ASTNode);
	constructor(arg1 : StubT, arg2 : IStubElementType);
	isOverloadDeclaration() : boolean;
}


declare interface TypeScriptFunctionBaseImpl<StubT extends JSFunctionStubBase<PsiT>, PsiT extends JSFunction> extends JSFunctionBaseImpl<StubT>, TypeScriptTypeParameterListOwner {}
export = TypeScriptFunctionBaseImpl
