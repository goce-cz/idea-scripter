import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import JSVariable = require('nashorn/com/intellij/lang/javascript/psi/JSVariable');
import JSFunction = require('nashorn/com/intellij/lang/javascript/psi/JSFunction');
import JSParameter = require('nashorn/com/intellij/lang/javascript/psi/JSParameter');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Icon = require('nashorn/javax/swing/Icon');
import JSAttributeList = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttributeList');
import Function = require('nashorn/com/intellij/util/Function');
import PsiFormatUtilBase = require('nashorn/com/intellij/psi/util/PsiFormatUtilBase');

declare class JSFormatUtil {
	constructor();
	static formatClass(arg1 : JSClass, arg2 : number) : string;
	static formatField(arg1 : JSVariable, arg2 : number) : string;
	static formatField(arg1 : JSVariable, arg2 : number, arg3 : JSClass) : string;
	static formatMethod(arg1 : JSFunction, arg2 : number, arg3 : number) : string;
	static formatMethod(arg1 : JSFunction, arg2 : number, arg3 : number, arg4 : JSClass) : string;
	static formatMethod(arg1 : JSFunction, arg2 : number, arg3 : number, arg4 : number, arg5 : JSClass) : string;
	static formatParameter(arg1 : JSParameter, arg2 : number) : string;
	static getReturnType(arg1 : JSFunction, arg2 : number) : string;
	static getType(arg1 : JSVariable, arg2 : number) : string;
	static formatType(arg1 : string, arg2 : number, arg3 : PsiElement) : string;
	static getPropertyIcon(arg1 : JSFunction, arg2 : boolean) : Icon;
	static formatVisibility(arg1 : JSAttributeList.AccessType) : string;
	static formatVisibility(arg1 : PsiElement) : string;
	static getFunctionLongDescription(arg1 : JSFunction, arg2 : boolean, arg3 : boolean, arg4 : JSClass) : string;
	static getVariableLongDescription(arg1 : JSVariable, arg2 : boolean, arg3 : boolean, arg4 : JSClass) : string;
	static formatPackage(arg1 : string) : string;
	static findInsertionPlaceStartingFrom(arg1 : PsiElement, arg2 : boolean, arg3 : Function<PsiElement, boolean>) : PsiElement;
}


declare interface JSFormatUtil extends PsiFormatUtilBase {}
export = JSFormatUtil
