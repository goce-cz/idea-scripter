import JComponent = require('nashorn/javax/swing/JComponent');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import Condition = require('nashorn/com/intellij/openapi/util/Condition');
import PsiFileSystemItem = require('nashorn/com/intellij/psi/PsiFileSystemItem');
import ModalityState = require('nashorn/com/intellij/openapi/application/ModalityState');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import ChooseByNameModel = require('nashorn/com/intellij/ide/util/gotoByName/ChooseByNameModel');
import DialogWrapper = require('nashorn/com/intellij/openapi/ui/DialogWrapper');
import GotoClassModel2 = require('nashorn/com/intellij/ide/util/gotoByName/GotoClassModel2');
import JPanel = require('nashorn/javax/swing/JPanel');
import ChooseByNamePanel = require('nashorn/com/intellij/ide/util/gotoByName/ChooseByNamePanel');
import ChooseByNamePopupComponent = require('nashorn/com/intellij/ide/util/gotoByName/ChooseByNamePopupComponent');

declare class JSClassChooserDialog {
	preferredFocusedComponent : JComponent;
	selectedClass : JSClass;
	constructor(arg1 : Project, arg2 : string, arg3 : GlobalSearchScope, arg4 : JSClass, arg5 : Condition<JSClass>);
	selectClass(arg1 : JSClass) : void;
	selectFile(arg1 : PsiFileSystemItem) : void;
	getSelectedClass() : JSClass;
	showDialog() : boolean;
	calcSelectedClass() : JSClass;
	getContext() : JSClass;
	getModalityState() : ModalityState;
	handleSelectionChanged() : void;
	isAccepted(arg1 : JSClass) : boolean;
	selectElementInTree(arg1 : PsiElement) : void;
	createChooseByNameModel() : ChooseByNameModel;
}


declare interface JSClassChooserDialog extends DialogWrapper {}

declare module JSClassChooserDialog {
	class MyGotoClassModel {
		promptText : string;
		constructor(arg1 : Project);
	}


	interface MyGotoClassModel extends GotoClassModel2 {}	class MyChooseByNamePanel {
		constructor(arg1 : string, arg2 : JPanel);
	}


	interface MyChooseByNamePanel extends ChooseByNamePanel {}	class MyCallback {
	}


	interface MyCallback extends ChooseByNamePopupComponent.Callback {}}

export = JSClassChooserDialog
