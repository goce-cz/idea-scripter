import PsiDirectory = require('nashorn/com/intellij/psi/PsiDirectory');
import Collection = require('nashorn/java/util/Collection');
import Map = require('nashorn/java/util/Map');
import Pair = require('nashorn/com/intellij/openapi/util/Pair');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import CreateClassParameters = require('nashorn/com/intellij/lang/javascript/validation/fixes/CreateClassParameters');

declare class WizardModel {
	className : string;
	packageName : string;
	templateName : string;
	targetDirectory : PsiDirectory;
	superclassFqn : string;
	interfacesFqns : Collection<string>;
	templateAttributes : Map<string, string>;
	targetClassScopeAndBaseDir : Pair<GlobalSearchScope, PsiDirectory>;
	constructor(arg1 : PsiElement, arg2 : boolean);
	setClassName(arg1 : string) : void;
	setPackageName(arg1 : string) : void;
	setTemplateName(arg1 : string) : void;
	setSuperclassFqn(arg1 : string) : void;
	setInterfacesFqns(arg1 : Collection<string>) : void;
	setCustomVariables(arg1 : string, arg2 : Collection<string>) : void;
	getCustomTemplateAttributes(arg1 : string) : Map<string, string>;
	setCustomTemplateAttributes(arg1 : string, arg2 : Map<string, string>) : void;
	commit() : boolean;
	getTargetClassScopeAndBaseDir() : Pair<GlobalSearchScope, PsiDirectory>;
}


declare interface WizardModel extends CreateClassParameters {}
export = WizardModel
