import Project = require('nashorn/com/intellij/openapi/project/Project');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import AnAction = require('nashorn/com/intellij/openapi/actionSystem/AnAction');
import ScriptingLibraryModel = require('nashorn/com/intellij/webcore/libraries/ScriptingLibraryModel');
import List = require('nashorn/java/util/List');
import ActionGroup = require('nashorn/com/intellij/openapi/actionSystem/ActionGroup');

declare class JSLibraryListGroup {
	constructor();
	static getLibraryActions(arg1 : Project, arg2 : VirtualFile) : AnAction[];
	static sort(arg1 : ScriptingLibraryModel[]) : List<ScriptingLibraryModel>;
}


declare interface JSLibraryListGroup extends ActionGroup {}

declare module JSLibraryListGroup {
	class MySetJsLibraryAction {
		isLibraryUsedOnContainingFolderOrProject(arg1 : VirtualFile) : boolean;
	}


	interface MySetJsLibraryAction extends AnAction {}}

export = JSLibraryListGroup
