import HighlightDisplayLevel = require('nashorn/com/intellij/codeHighlighting/HighlightDisplayLevel');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSVarStatement = require('nashorn/com/intellij/lang/javascript/psi/JSVarStatement');
import JSReferenceExpression = require('nashorn/com/intellij/lang/javascript/psi/JSReferenceExpression');
import JSInspection = require('nashorn/com/intellij/lang/javascript/inspections/JSInspection');
import LocalQuickFix = require('nashorn/com/intellij/codeInspection/LocalQuickFix');

declare class JSUndeclaredVariableInspection {
	myCheckGlobalDefinitions : boolean;
	static SHORT_NAME : string;
	defaultLevel : HighlightDisplayLevel;
	displayName : string;
	constructor();
	static findPreviousVarStatement(arg1 : PsiElement) : JSVarStatement;
	static isImplicitlyDeclared(arg1 : JSReferenceExpression, arg2 : PsiElement) : boolean;
}


declare interface JSUndeclaredVariableInspection extends JSInspection {}

declare module JSUndeclaredVariableInspection {
	class DeclareJSVariableInPreviousVarStatementQuickFix {
		name : string;
		familyName : string;
	}


	interface DeclareJSVariableInPreviousVarStatementQuickFix extends LocalQuickFix {}	class DeclareJSVariableIntentionAction {
		name : string;
		familyName : string;
	}


	interface DeclareJSVariableIntentionAction extends LocalQuickFix {}}

export = JSUndeclaredVariableInspection
