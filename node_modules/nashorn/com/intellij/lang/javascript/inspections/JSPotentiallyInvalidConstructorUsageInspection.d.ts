import JSReferenceExpression = require('nashorn/com/intellij/lang/javascript/psi/JSReferenceExpression');
import JSInspection = require('nashorn/com/intellij/lang/javascript/inspections/JSInspection');
import JSCallExpression = require('nashorn/com/intellij/lang/javascript/psi/JSCallExpression');
import FixAndIntentionAction = require('nashorn/com/intellij/lang/javascript/validation/fixes/FixAndIntentionAction');

declare class JSPotentiallyInvalidConstructorUsageInspection {
	myConsiderUppercaseFunctionsToBeConstructors : boolean;
	displayName : string;
	constructor();
	getConstructorProblemKey(arg1 : JSReferenceExpression, arg2 : string) : string;
}


declare interface JSPotentiallyInvalidConstructorUsageInspection extends JSInspection {}

declare module JSPotentiallyInvalidConstructorUsageInspection {
	class InsertNewFix {
		name : string;
		constructor(arg1 : JSCallExpression);
	}


	interface InsertNewFix extends FixAndIntentionAction {}}

export = JSPotentiallyInvalidConstructorUsageInspection
