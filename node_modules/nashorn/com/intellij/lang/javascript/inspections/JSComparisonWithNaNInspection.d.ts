import JSBinaryExpression = require('nashorn/com/intellij/lang/javascript/psi/JSBinaryExpression');
import JSExpression = require('nashorn/com/intellij/lang/javascript/psi/JSExpression');
import JSInspection = require('nashorn/com/intellij/lang/javascript/inspections/JSInspection');
import LocalQuickFix = require('nashorn/com/intellij/codeInspection/LocalQuickFix');

declare class JSComparisonWithNaNInspection {
	displayName : string;
	constructor();
	static findExpressionComparedToNaN(arg1 : JSBinaryExpression) : JSExpression;
}


declare interface JSComparisonWithNaNInspection extends JSInspection {}

declare module JSComparisonWithNaNInspection {
	class JSReplaceWithIsNaNCallQuickFix {
		name : string;
		familyName : string;
		constructor(arg1 : boolean);
	}


	interface JSReplaceWithIsNaNCallQuickFix extends LocalQuickFix {}}

export = JSComparisonWithNaNInspection
