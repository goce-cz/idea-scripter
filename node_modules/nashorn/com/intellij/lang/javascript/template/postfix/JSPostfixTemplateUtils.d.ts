import Object = require('nashorn/java/lang/Object');
import PostfixTemplatePsiInfo = require('nashorn/com/intellij/codeInsight/template/postfix/templates/PostfixTemplatePsiInfo');
import PostfixTemplateExpressionSelector = require('nashorn/com/intellij/codeInsight/template/postfix/templates/PostfixTemplateExpressionSelector');
import Condition = require('nashorn/com/intellij/openapi/util/Condition');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Surrounder = require('nashorn/com/intellij/lang/surroundWith/Surrounder');
import JSLanguageDialect = require('nashorn/com/intellij/lang/javascript/JSLanguageDialect');

declare class JSPostfixTemplateUtils extends Object {
	static JS_PSI_INFO : PostfixTemplatePsiInfo;
	constructor();
	static selectorTopmost() : PostfixTemplateExpressionSelector;
	static selectorAllExpressionsWithCurrentOffset() : PostfixTemplateExpressionSelector;
	static selectorTopmost(arg1 : Condition<PsiElement>) : PostfixTemplateExpressionSelector;
	static selectorAllExpressionsWithCurrentOffset(arg1 : Condition<PsiElement>) : PostfixTemplateExpressionSelector;
	static createIfSurrounder() : Surrounder;
	static createExpression(arg1 : PsiElement, arg2 : string, arg3 : string) : PsiElement;
	static getDialect(arg1 : PsiElement) : JSLanguageDialect;
}

export = JSPostfixTemplateUtils
