import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import JSFunction = require('nashorn/com/intellij/lang/javascript/psi/JSFunction');
import JSStatement = require('nashorn/com/intellij/lang/javascript/psi/JSStatement');
import SmartEnterProcessor = require('nashorn/com/intellij/codeInsight/editorActions/smartEnter/SmartEnterProcessor');

declare class JSSmartEnterProcessor {
	constructor();
	calcTailAfterCall(arg1 : PsiElement, arg2 : string) : string;
	static calcTail(arg1 : string, arg2 : PsiElement) : string;
	addSemicolonIfNeeded(arg1 : Project, arg2 : Editor, arg3 : PsiFile, arg4 : number, arg5 : string, arg6 : number) : boolean;
	static hasNoSemicolonAtEnd(arg1 : PsiElement) : boolean;
	static isInterfaceFunction(arg1 : JSFunction) : boolean;
	static requiresSemicolon(arg1 : JSStatement) : boolean;
	insertCommitReformat(arg1 : Project, arg2 : Editor, arg3 : PsiFile, arg4 : number, arg5 : string, arg6 : number, arg7 : boolean) : void;
	static evalMeaningfulElement(arg1 : PsiElement, arg2 : boolean) : PsiElement;
}


declare interface JSSmartEnterProcessor extends SmartEnterProcessor {}
export = JSSmartEnterProcessor
