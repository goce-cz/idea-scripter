import JSElementPattern = require('nashorn/com/intellij/lang/javascript/patterns/JSElementPattern');
import JSLiteralExpression = require('nashorn/com/intellij/lang/javascript/psi/JSLiteralExpression');
import JSExpression = require('nashorn/com/intellij/lang/javascript/psi/JSExpression');
import PlatformPatterns = require('nashorn/com/intellij/patterns/PlatformPatterns');

declare class JSPatterns {
	constructor();
	static jsLiteralExpression() : JSElementPattern.Capture<JSLiteralExpression>;
	static jsArgument(arg1 : string, arg2 : number) : JSElementPattern.Capture<JSExpression>;
	static jsArgument(arg1 : string, arg2 : number, arg3 : number) : JSElementPattern.Capture<JSExpression>;
	static asAssignedValue(arg1 : string, arg2 : string, arg3 : string[]) : JSElementPattern.Capture<JSExpression>;
}


declare interface JSPatterns extends PlatformPatterns {}
export = JSPatterns
