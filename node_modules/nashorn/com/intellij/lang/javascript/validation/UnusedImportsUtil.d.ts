import Object = require('nashorn/java/lang/Object');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Collection = require('nashorn/java/util/Collection');
import Class = require('nashorn/java/lang/Class');
import JSReferenceExpression = require('nashorn/com/intellij/lang/javascript/psi/JSReferenceExpression');
import Couple = require('nashorn/com/intellij/openapi/util/Couple');

declare class UnusedImportsUtil extends Object {
	constructor();
	static isInstance(arg1 : PsiElement, arg2 : Collection<Class<any>>) : boolean;
	static isSomeNodeThatShouldNotHaveImportsWhenQualified(arg1 : JSReferenceExpression, arg2 : PsiElement) : boolean;
	static getReplaceStatus(arg1 : JSReferenceExpression) : Couple<boolean>;
	static getReplaceStatus(arg1 : JSReferenceExpression, arg2 : PsiElement) : Couple<boolean>;
}

export = UnusedImportsUtil
