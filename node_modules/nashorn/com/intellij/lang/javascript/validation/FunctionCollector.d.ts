import Object = require('nashorn/java/lang/Object');
import Collection = require('nashorn/java/util/Collection');
import JSFunction = require('nashorn/com/intellij/lang/javascript/psi/JSFunction');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import Function = require('nashorn/com/intellij/util/Function');

declare class FunctionCollector extends Object {
	functions : Collection<JSFunction>;
	constructor();
	static collectAllVisibleClassFunctions(arg1 : JSClass, arg2 : FunctionCollector, arg3 : Function<JSFunction, boolean>) : FunctionCollector;
	findFunctionWithTheSameKind(arg1 : string, arg2 : JSFunction.FunctionKind) : JSFunction;
	add(arg1 : JSFunction) : void;
	removeFunctionByNameAndKind(arg1 : string, arg2 : JSFunction.FunctionKind) : void;
	getFunctions() : Collection<JSFunction>;
	hasFunctionWithTheSameKind(arg1 : string, arg2 : JSFunction.FunctionKind) : boolean;
}

export = FunctionCollector
