import AnnotationHolder = require('nashorn/com/intellij/lang/annotation/AnnotationHolder');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import ProblemHighlightType = require('nashorn/com/intellij/codeInspection/ProblemHighlightType');
import IntentionAction = require('nashorn/com/intellij/codeInsight/intention/IntentionAction');
import Annotation = require('nashorn/com/intellij/lang/annotation/Annotation');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import LocalQuickFix = require('nashorn/com/intellij/codeInspection/LocalQuickFix');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');
import JSProblemReporter = require('nashorn/com/intellij/lang/javascript/validation/JSProblemReporter');

declare class JSAnnotatorProblemReporter {
	constructor(arg1 : AnnotationHolder);
	registerProblem(arg1 : ASTNode, arg2 : string, arg3 : ProblemHighlightType, arg4 : IntentionAction[]) : Annotation;
	registerProblem(arg1 : PsiElement, arg2 : string, arg3 : ProblemHighlightType, arg4 : string, arg5 : LocalQuickFix[], arg6 : IntentionAction[]) : Annotation;
	static shortenTextRange(arg1 : PsiElement, arg2 : TextRange) : TextRange;
	static createErrorAnnotation(arg1 : PsiElement, arg2 : string, arg3 : ProblemHighlightType, arg4 : AnnotationHolder) : Annotation;
	static createErrorAnnotation(arg1 : TextRange, arg2 : string, arg3 : ProblemHighlightType, arg4 : AnnotationHolder) : Annotation;
}


declare interface JSAnnotatorProblemReporter extends JSProblemReporter<Annotation> {}
export = JSAnnotatorProblemReporter
