import JSNamedElement = require('nashorn/com/intellij/lang/javascript/psi/JSNamedElement');
import Object = require('nashorn/java/lang/Object');
import Set = require('nashorn/java/util/Set');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import MultiMap = require('nashorn/com/intellij/util/containers/MultiMap');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Collection = require('nashorn/java/util/Collection');
import JSFunction = require('nashorn/com/intellij/lang/javascript/psi/JSFunction');
import JSAttributeList = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttributeList');
import JSParameterList = require('nashorn/com/intellij/lang/javascript/psi/JSParameterList');
import JSAttributeListWrapper = require('nashorn/com/intellij/lang/javascript/validation/fixes/JSAttributeListWrapper');

declare class BaseCreateMethodsFix<T extends JSNamedElement> extends Object {
	elementsToProcess : Set<T>;
	constructor(arg1 : JSClass);
	beforeInvoke(arg1 : Project, arg2 : Editor, arg3 : PsiFile) : void;
	invoke(arg1 : Project, arg2 : Editor, arg3 : PsiFile) : void;
	processElements(arg1 : Project, arg2 : MultiMap<string, string>, arg3 : Set<T>) : void;
	fixName(arg1 : T) : void;
	evalAnchor(arg1 : Editor, arg2 : PsiFile) : void;
	doAddOneMethod(arg1 : Project, arg2 : string, arg3 : PsiElement) : PsiElement;
	static isNotSurroundedCDATA(arg1 : PsiElement) : boolean;
	getTypes(arg1 : T) : Collection<string>;
	static getFunctionTypes(arg1 : JSFunction) : Collection<string>;
	buildFunctionText(arg1 : T, arg2 : MultiMap<string, string>) : string;
	static calcNamespaceId(arg1 : JSAttributeList, arg2 : string, arg3 : PsiElement) : string;
	shouldHandleNoTypeAsAnyType() : boolean;
	buildReturnType(arg1 : string) : string;
	importType(arg1 : string, arg2 : T, arg3 : MultiMap<string, string>) : string;
	buildParameterList(arg1 : JSParameterList, arg2 : T, arg3 : MultiMap<string, string>) : string;
	buildName(arg1 : T) : string;
	buildFunctionKind(arg1 : T) : string;
	buildFunctionBodyText(arg1 : string, arg2 : JSParameterList, arg3 : T) : string;
	adjustAttributeList(arg1 : JSAttributeListWrapper, arg2 : T) : void;
	addElementToProcess(arg1 : T) : void;
	getElementsToProcess() : Set<T>;
}

export = BaseCreateMethodsFix
