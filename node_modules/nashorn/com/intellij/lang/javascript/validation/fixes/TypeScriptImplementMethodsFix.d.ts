import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import Set = require('nashorn/java/util/Set');
import JSRecordTypeImpl = require('nashorn/com/intellij/lang/javascript/psi/types/JSRecordTypeImpl');
import Map = require('nashorn/java/util/Map');
import List = require('nashorn/java/util/List');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSType = require('nashorn/com/intellij/lang/javascript/psi/JSType');
import StringBuilder = require('nashorn/java/lang/StringBuilder');
import JSFunctionSignatureInfo = require('nashorn/com/intellij/lang/javascript/refactoring/extractMethod/signatureGenerator/JSFunctionSignatureInfo');
import JSParameterTypeDecorator = require('nashorn/com/intellij/lang/javascript/psi/JSParameterTypeDecorator');
import LocalQuickFixAndIntentionActionOnPsiElement = require('nashorn/com/intellij/codeInspection/LocalQuickFixAndIntentionActionOnPsiElement');

declare class TypeScriptImplementMethodsFix {
	text : string;
	familyName : string;
	constructor(arg1 : JSClass, arg2 : Set<JSRecordTypeImpl.TypeMember>, arg3 : Map<JSRecordTypeImpl.TypeMember, List<string>>);
	collectPropertiesAndFunctionsForImplementation(arg1 : List<JSRecordTypeImpl.PropertySignature>, arg2 : List<JSRecordTypeImpl.PropertySignature>) : void;
	addPropertyToClass(arg1 : Project, arg2 : JSClass, arg3 : PsiElement, arg4 : JSRecordTypeImpl.PropertySignature) : PsiElement;
	addFunctionToClass(arg1 : Project, arg2 : JSClass, arg3 : PsiElement, arg4 : JSRecordTypeImpl.PropertySignature) : PsiElement;
	static appendFunctionBody(arg1 : JSType, arg2 : StringBuilder) : void;
	static setReturnTypeToInfo(arg1 : JSType, arg2 : JSFunctionSignatureInfo) : void;
	static addParameterToInfo(arg1 : JSFunctionSignatureInfo, arg2 : string, arg3 : JSParameterTypeDecorator) : void;
}


declare interface TypeScriptImplementMethodsFix extends LocalQuickFixAndIntentionActionOnPsiElement {}
export = TypeScriptImplementMethodsFix
