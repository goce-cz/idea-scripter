import Project = require('nashorn/com/intellij/openapi/project/Project');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import SmartPsiElementPointer = require('nashorn/com/intellij/psi/SmartPsiElementPointer');
import LocalQuickFix = require('nashorn/com/intellij/codeInspection/LocalQuickFix');
import IntentionAction = require('nashorn/com/intellij/codeInsight/intention/IntentionAction');

declare class FixAndIntentionAction {
	familyName : string;
	text : string;
	constructor();
	applyFix(arg1 : Project, arg2 : PsiElement, arg3 : PsiFile, arg4 : Editor) : void;
	isAvailable(arg1 : Project, arg2 : PsiElement, arg3 : Editor, arg4 : PsiFile) : boolean;
	registerElementRefForFix(arg1 : PsiElement, arg2 : SmartPsiElementPointer) : SmartPsiElementPointer;
	sharePointer(arg1 : FixAndIntentionAction) : void;
}


declare interface FixAndIntentionAction extends LocalQuickFix, IntentionAction {}
export = FixAndIntentionAction
