import Object = require('nashorn/java/lang/Object');
import LanguageExtension = require('nashorn/com/intellij/lang/LanguageExtension');
import JSClassResolver = require('nashorn/com/intellij/lang/javascript/psi/resolve/JSClassResolver');
import JSImportHandler = require('nashorn/com/intellij/lang/javascript/psi/resolve/JSImportHandler');
import JSTypeHelper = require('nashorn/com/intellij/lang/javascript/psi/resolve/JSTypeHelper');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Language = require('nashorn/com/intellij/lang/Language');
import BaseJSSymbolProcessor = require('nashorn/com/intellij/lang/javascript/psi/resolve/BaseJSSymbolProcessor');
import JSTypeEvaluator = require('nashorn/com/intellij/lang/javascript/psi/resolve/JSTypeEvaluator');
import JSExpression = require('nashorn/com/intellij/lang/javascript/psi/JSExpression');
import ExpectedTypeEvaluator = require('nashorn/com/intellij/lang/javascript/psi/ExpectedTypeEvaluator');
import JSType = require('nashorn/com/intellij/lang/javascript/psi/JSType');
import JSCompletionKeywordsContributor = require('nashorn/com/intellij/lang/javascript/completion/JSCompletionKeywordsContributor');
import JSFileCachedData = require('nashorn/com/intellij/lang/javascript/psi/stubs/impl/JSFileCachedData');
import PsiElementVisitor = require('nashorn/com/intellij/psi/PsiElementVisitor');
import JSReferenceExpressionImpl = require('nashorn/com/intellij/lang/javascript/psi/impl/JSReferenceExpressionImpl');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import JSResolveUtil = require('nashorn/com/intellij/lang/javascript/psi/resolve/JSResolveUtil');
import ResultSink = require('nashorn/com/intellij/lang/javascript/psi/resolve/ResultSink');
import QualifiedItemProcessor = require('nashorn/com/intellij/lang/javascript/psi/resolve/QualifiedItemProcessor');

declare class JSDialectSpecificHandlersFactory extends Object {
	static EP_NAME : LanguageExtension<JSDialectSpecificHandlersFactory>;
	classResolver : JSClassResolver;
	importHandler : JSImportHandler;
	typeHelper : JSTypeHelper;
	constructor();
	static forElement(arg1 : PsiElement) : JSDialectSpecificHandlersFactory;
	static forLanguage(arg1 : Language) : JSDialectSpecificHandlersFactory;
	newTypeEvaluator(arg1 : BaseJSSymbolProcessor.EvaluateContext, arg2 : BaseJSSymbolProcessor.TypeProcessor, arg3 : boolean) : JSTypeEvaluator;
	newExpectedTypeEvaluator(arg1 : JSExpression) : ExpectedTypeEvaluator;
	static findExpectedType(arg1 : JSExpression) : JSType;
	newCompletionKeywordsContributor() : JSCompletionKeywordsContributor;
	newFileCachedDataEvaluator(arg1 : JSFileCachedData) : PsiElementVisitor;
	createReferenceExpressionResolver(arg1 : JSReferenceExpressionImpl, arg2 : PsiFile) : JSResolveUtil.Resolver<JSReferenceExpressionImpl>;
	getSpecificCompletionVariantPriority(arg1 : PsiElement) : number;
	getClassResolver() : JSClassResolver;
	getImportHandler() : JSImportHandler;
	createCompletionItemProcessor(arg1 : ResultSink, arg2 : PsiFile) : QualifiedItemProcessor<ResultSink>;
	getTypeHelper() : JSTypeHelper;
}

export = JSDialectSpecificHandlersFactory
