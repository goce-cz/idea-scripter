import Key = require('nashorn/com/intellij/openapi/util/Key');
import JSLanguageLevel = require('nashorn/com/intellij/lang/javascript/dialects/JSLanguageLevel');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Collection = require('nashorn/java/util/Collection');
import FilePropertyPusher = require('nashorn/com/intellij/openapi/roots/impl/FilePropertyPusher');

declare class JSLanguageLevelPusher {
	static KEY : Key<JSLanguageLevel>;
	fileDataKey : Key<JSLanguageLevel>;
	defaultValue : JSLanguageLevel;
	constructor();
	static isIndexedFile(arg1 : VirtualFile) : boolean;
	updateJSLibraries(arg1 : Project, arg2 : JSLanguageLevel) : void;
	getApplicableLibraryFiles(arg1 : Project) : Collection<VirtualFile>;
	markRecursively(arg1 : Project, arg2 : VirtualFile, arg3 : JSLanguageLevel) : void;
}


declare interface JSLanguageLevelPusher extends FilePropertyPusher<JSLanguageLevel> {}
export = JSLanguageLevelPusher
