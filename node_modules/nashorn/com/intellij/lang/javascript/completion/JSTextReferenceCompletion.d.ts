import Object = require('nashorn/java/lang/Object');
import JSTextReference = require('nashorn/com/intellij/lang/javascript/psi/impl/JSTextReference');
import List = require('nashorn/java/util/List');
import LookupElement = require('nashorn/com/intellij/codeInsight/lookup/LookupElement');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import CompletionResultSink = require('nashorn/com/intellij/lang/javascript/psi/resolve/CompletionResultSink');
import Collection = require('nashorn/java/util/Collection');

declare class JSTextReferenceCompletion extends Object {
	constructor();
	static addVariants(arg1 : JSTextReference) : List<LookupElement>;
	static addJSDocTags(arg1 : JSTextReference, arg2 : List<LookupElement>) : void;
	static calcDefaultVariants(arg1 : JSTextReference, arg2 : PsiFile, arg3 : List<LookupElement>) : List<LookupElement>;
	static forceQualifyIfNeeded(arg1 : JSTextReference, arg2 : List<LookupElement>) : void;
	static setCompletionFilter(arg1 : CompletionResultSink, arg2 : Collection<string>, arg3 : PsiFile) : void;
}

export = JSTextReferenceCompletion
