import JSPropertyNameReference = require('nashorn/com/intellij/lang/javascript/psi/impl/JSPropertyNameReference');
import Iterable = require('nashorn/java/lang/Iterable');
import LookupElement = require('nashorn/com/intellij/codeInsight/lookup/LookupElement');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSCompletionProcessor = require('nashorn/com/intellij/lang/javascript/psi/resolve/JSCompletionProcessor');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import VariantsProcessor = require('nashorn/com/intellij/lang/javascript/psi/resolve/VariantsProcessor');
import PsiManager = require('nashorn/com/intellij/psi/PsiManager');
import JSElement = require('nashorn/com/intellij/lang/javascript/psi/JSElement');
import JSStubElementType = require('nashorn/com/intellij/lang/javascript/psi/JSStubElementType');
import CompletionContributor = require('nashorn/com/intellij/codeInsight/completion/CompletionContributor');
import JSRecursiveWalkingElementVisitor = require('nashorn/com/intellij/lang/javascript/psi/JSRecursiveWalkingElementVisitor');

declare class JSReferenceCompletionContributor {
	constructor();
	static getPropertyNameReferenceVariants(arg1 : JSPropertyNameReference) : Iterable<LookupElement>;
	static processIndexedSymbols(arg1 : PsiElement, arg2 : JSCompletionProcessor) : void;
	static processIndexedSymbols(arg1 : PsiElement, arg2 : JSCompletionProcessor, arg3 : boolean) : void;
	static processElementsInInjectedContext(arg1 : JSCompletionProcessor, arg2 : PsiFile) : void;
	static processImplicitElements(arg1 : JSCompletionProcessor, arg2 : Project, arg3 : GlobalSearchScope) : void;
	static processCompeteMatchedElements(arg1 : PsiElement, arg2 : VariantsProcessor) : boolean;
	static processAllIndexedSymbols(arg1 : JSCompletionProcessor, arg2 : Project, arg3 : GlobalSearchScope) : PsiManager;
	static processElement<PsiT extends JSElement>(arg1 : JSCompletionProcessor, arg2 : PsiT, arg3 : JSStubElementType<any, PsiT>) : void;
}


declare interface JSReferenceCompletionContributor extends CompletionContributor {}

declare module JSReferenceCompletionContributor {
	class MyJSRecursiveWalkingElementVisitor {
		constructor(arg1 : JSCompletionProcessor);
	}


	interface MyJSRecursiveWalkingElementVisitor extends JSRecursiveWalkingElementVisitor {}}

export = JSReferenceCompletionContributor
