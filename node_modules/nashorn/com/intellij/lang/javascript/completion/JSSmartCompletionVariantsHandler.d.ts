import Object = require('nashorn/java/lang/Object');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Collection = require('nashorn/java/util/Collection');
import List = require('nashorn/java/util/List');
import JSType = require('nashorn/com/intellij/lang/javascript/psi/JSType');
import ProcessingContext = require('nashorn/com/intellij/util/ProcessingContext');

declare class JSSmartCompletionVariantsHandler extends Object {
	constructor();
	static getSmartVariants(arg1 : PsiElement) : Collection;
	static wrapVariants(arg1 : List<Object>, arg2 : PsiElement) : List<Object>;
	static isAcceptableVariant(arg1 : PsiElement, arg2 : JSType, arg3 : ProcessingContext) : boolean;
	static initProcessingContext(arg1 : PsiElement) : ProcessingContext;
}

export = JSSmartCompletionVariantsHandler
