import PrefixMatcher = require('nashorn/com/intellij/codeInsight/completion/PrefixMatcher');
import CompletionResultSet = require('nashorn/com/intellij/codeInsight/completion/CompletionResultSet');
import Set = require('nashorn/java/util/Set');
import JSReferenceExpressionImpl = require('nashorn/com/intellij/lang/javascript/psi/impl/JSReferenceExpressionImpl');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import JavaScriptCompletionData = require('nashorn/com/intellij/lang/javascript/completion/JavaScriptCompletionData');
import Collection = require('nashorn/java/util/Collection');
import LookupElement = require('nashorn/com/intellij/codeInsight/lookup/LookupElement');
import CompletionParameters = require('nashorn/com/intellij/codeInsight/completion/CompletionParameters');
import Language = require('nashorn/com/intellij/lang/Language');
import CompletionContributor = require('nashorn/com/intellij/codeInsight/completion/CompletionContributor');
import Object = require('nashorn/java/lang/Object');

declare class JSCompletionContributor {
	doingSmartCodeCompleteAction : boolean;
	prefixMatcher : PrefixMatcher;
	completionResultSet : CompletionResultSet;
	alreadyUsedClassesSet : Set<string>;
	static instance : JSCompletionContributor;
	constructor();
	isDoingSmartCodeCompleteAction() : boolean;
	getPrefixMatcher() : PrefixMatcher;
	getCompletionResultSet() : CompletionResultSet;
	addReferenceVariants(arg1 : JSReferenceExpressionImpl, arg2 : PsiFile, arg3 : JavaScriptCompletionData.JSInsertHandler) : void;
	addVariants(arg1 : Collection, arg2 : Collection, arg3 : JavaScriptCompletionData.JSInsertHandler) : void;
	addVariant(arg1 : JavaScriptCompletionData.JSInsertHandler, arg2 : LookupElement) : void;
	setAlreadyUsedClassesSet(arg1 : Set<string>) : void;
	getAlreadyUsedClassesSet() : Set<string>;
	static getElementLanguage(arg1 : CompletionParameters) : Language;
	static getInstance() : JSCompletionContributor;
}


declare interface JSCompletionContributor extends CompletionContributor {}

declare module JSCompletionContributor {
	class JSCompletionContributorHolder extends Object {
	}
}

export = JSCompletionContributor
