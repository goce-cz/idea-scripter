import Object = require('nashorn/java/lang/Object');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSElementBase = require('nashorn/com/intellij/lang/javascript/psi/JSElementBase');
import Icon = require('nashorn/javax/swing/Icon');
import JSFunctionItem = require('nashorn/com/intellij/lang/javascript/psi/JSFunctionItem');
import NavigationItem = require('nashorn/com/intellij/navigation/NavigationItem');
import LookupElement = require('nashorn/com/intellij/codeInsight/lookup/LookupElement');

declare class JSLookupUtilImpl extends Object {
	static MAX_PRIORITY : number;
	static CONDITIONAL_COMPILATION_CONSTANTS_PRIORITY : number;
	static NEIGHBOUR_REFERENCES_PRIORITY : number;
	constructor();
	static getTypeHint(arg1 : PsiElement, arg2 : number) : string;
	static isPredefined(arg1 : PsiElement) : boolean;
	static getPackageLocationString(arg1 : JSElementBase) : string;
	static getIcon(arg1 : PsiElement, arg2 : number, arg3 : boolean) : Icon;
	static getBrowserIcon(arg1 : PsiElement) : Icon;
	static getTailText(arg1 : PsiElement) : string;
	static getFunctionTailText(arg1 : JSFunctionItem, arg2 : boolean) : string;
	static getLocationStringFromPresentation(arg1 : NavigationItem) : string;
	static willCreateLookupElement(arg1 : number) : boolean;
	static getShortName(arg1 : string) : string;
	static getEmptyIcon() : Icon;
	static createPrioritizedLookupItem(arg1 : PsiElement, arg2 : string, arg3 : number, arg4 : boolean, arg5 : boolean) : LookupElement;
}


declare module JSLookupUtilImpl {
	class IconHolder extends Object {
	}
}

export = JSLookupUtilImpl
