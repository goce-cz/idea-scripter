import FileBasedIndex = require('nashorn/com/intellij/util/indexing/FileBasedIndex');
import Collection = require('nashorn/java/util/Collection');
import FileType = require('nashorn/com/intellij/openapi/fileTypes/FileType');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import PsiManager = require('nashorn/com/intellij/psi/PsiManager');
import JSLibraryManager = require('nashorn/com/intellij/lang/javascript/library/JSLibraryManager');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import NavigationItem = require('nashorn/com/intellij/navigation/NavigationItem');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import JSQualifiedNamedElement = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSQualifiedNamedElement');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import AbstractProjectComponent = require('nashorn/com/intellij/openapi/components/AbstractProjectComponent');
import Object = require('nashorn/java/lang/Object');

declare class JavaScriptIndex {
	static ourIndexedFilesFilter : FileBasedIndex.InputFilter;
	static ECMASCRIPT_JS2 : string;
	static E4X_JS2 : string;
	static ECMASCRIPT_JS : string;
	static LIB_D_TS : string;
	static NASHORN_JS : string;
	static fileTypesForJSCompletion : Collection<FileType>;
	static versionStatic : number;
	componentName : string;
	project : Project;
	symbolNames : string[];
	navigatableClassNames : string[];
	psiManager : PsiManager;
	constructor(arg1 : Project, arg2 : PsiManager, arg3 : JSLibraryManager);
	static getFileTypesForJSCompletion() : Collection<FileType>;
	static getVersionStatic() : number;
	static isAcceptableFile(arg1 : VirtualFile) : boolean;
	doClear(arg1 : number) : void;
	static getInstance(arg1 : Project) : JavaScriptIndex;
	clear() : void;
	getFileByName(arg1 : string, arg2 : boolean) : NavigationItem[];
	getCollectScope(arg1 : boolean) : GlobalSearchScope;
	getProject() : Project;
	getSymbolNames() : string[];
	getSymbolsByName(arg1 : string, arg2 : boolean) : NavigationItem[];
	processSymbols(arg1 : string, arg2 : boolean, arg3 : boolean) : NavigationItem[];
	static isFromSwc(arg1 : JSQualifiedNamedElement) : boolean;
	getNavigatableClassNames() : string[];
	getClassByName(arg1 : string, arg2 : boolean) : NavigationItem[];
	getPsiManager() : PsiManager;
	static intern(arg1 : string) : string;
	rememberTopLevelClassElement(arg1 : string, arg2 : GlobalSearchScope, arg3 : PsiElement) : void;
	recallClass(arg1 : string, arg2 : GlobalSearchScope) : PsiElement;
	invalidateIfNeeded() : boolean;
}


declare interface JavaScriptIndex extends AbstractProjectComponent {}

declare module JavaScriptIndex {
	class RecentStringHolder extends Object {
	}
}

export = JavaScriptIndex
