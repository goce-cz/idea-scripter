import ID = require('nashorn/com/intellij/util/indexing/ID');
import List = require('nashorn/java/util/List');
import JSPackageIndexInfo = require('nashorn/com/intellij/lang/javascript/index/JSPackageIndexInfo');
import Collection = require('nashorn/java/util/Collection');
import FileType = require('nashorn/com/intellij/openapi/fileTypes/FileType');
import DataIndexer = require('nashorn/com/intellij/util/indexing/DataIndexer');
import FileContent = require('nashorn/com/intellij/util/indexing/FileContent');
import KeyDescriptor = require('nashorn/com/intellij/util/io/KeyDescriptor');
import DataExternalizer = require('nashorn/com/intellij/util/io/DataExternalizer');
import FileBasedIndex = require('nashorn/com/intellij/util/indexing/FileBasedIndex');
import StubTree = require('nashorn/com/intellij/psi/stubs/StubTree');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import FileBasedIndexExtension = require('nashorn/com/intellij/util/indexing/FileBasedIndexExtension');
import Object = require('nashorn/java/lang/Object');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');

declare class JSPackageIndex {
	static INDEX_ID : ID<string, List<JSPackageIndexInfo>>;
	name : ID<string, List<JSPackageIndexInfo>>;
	fileTypesWithSizeLimitNotApplicable : Collection<FileType>;
	indexer : DataIndexer<string, List<JSPackageIndexInfo>, FileContent>;
	keyDescriptor : KeyDescriptor<string>;
	valueExternalizer : DataExternalizer<List<JSPackageIndexInfo>>;
	inputFilter : FileBasedIndex.InputFilter;
	version : number;
	constructor();
	static getStubTree(arg1 : FileContent) : StubTree;
	static buildQualifiedName(arg1 : string, arg2 : string) : string;
	static processElementsInScope(arg1 : string, arg2 : string, arg3 : JSPackageIndex.PackageElementsProcessor, arg4 : GlobalSearchScope, arg5 : Project) : boolean;
	static processElementsInScopeRecursive(arg1 : string, arg2 : JSPackageIndex.PackageQualifiedElementsProcessor, arg3 : GlobalSearchScope, arg4 : Project) : boolean;
}


declare interface JSPackageIndex extends FileBasedIndexExtension<string, List<JSPackageIndexInfo>> {}

declare module JSPackageIndex {
	class PackageQualifiedElementsProcessor extends Object {
		process(arg1 : string, arg2 : JSPackageIndexInfo.Kind, arg3 : boolean) : boolean;
	}
	class PackageElementsProcessor extends Object {
		process(arg1 : VirtualFile, arg2 : string, arg3 : JSPackageIndexInfo.Kind, arg4 : boolean) : boolean;
	}
}

export = JSPackageIndex
