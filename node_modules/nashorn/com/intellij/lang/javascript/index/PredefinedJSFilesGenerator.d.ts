import Object = require('nashorn/java/lang/Object');
import StringBuilder = require('nashorn/java/lang/StringBuilder');
import Condition = require('nashorn/com/intellij/openapi/util/Condition');
import InputStream = require('nashorn/java/io/InputStream');
import Element = require('nashorn/org/jdom/Element');
import List = require('nashorn/java/util/List');

declare class PredefinedJSFilesGenerator extends Object {
	static LIB_PATH : string;
	static GLOBAL : string;
	constructor(arg1 : StringBuilder, arg2 : boolean, arg3 : Condition<string>);
	static main(arg1 : string[]) : void;
	static generateFile(arg1 : string, arg2 : string) : void;
	static translateFile(arg1 : InputStream, arg2 : string) : string;
	processLibrary(arg1 : Element) : void;
	processClasses(arg1 : List) : void;
	translateOneClass(arg1 : Element, arg2 : string, arg3 : string, arg4 : boolean) : void;
	processMembers(arg1 : boolean, arg2 : Element, arg3 : string, arg4 : string, arg5 : string) : boolean;
	processNodes(arg1 : boolean, arg2 : List, arg3 : string, arg4 : string, arg5 : string) : boolean;
	defaultForType(arg1 : string) : string;
	static getType(arg1 : Element) : string;
	static getType(arg1 : Element, arg2 : string) : string;
	static appendDoc(arg1 : StringBuilder, arg2 : boolean, arg3 : string, arg4 : boolean, arg5 : string, arg6 : string, arg7 : boolean, arg8 : string) : void;
	static transformTypeRef(arg1 : string, arg2 : string) : string;
}

export = PredefinedJSFilesGenerator
