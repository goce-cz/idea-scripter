import Object = require('nashorn/java/lang/Object');
import JSPsiElementBase = require('nashorn/com/intellij/lang/javascript/psi/JSPsiElementBase');
import Collection = require('nashorn/java/util/Collection');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Processor = require('nashorn/com/intellij/util/Processor');
import JSObjectLiteralExpression = require('nashorn/com/intellij/lang/javascript/psi/JSObjectLiteralExpression');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import TreeItem = require('nashorn/com/intellij/util/TreeItem');
import Set = require('nashorn/java/util/Set');
import JSType = require('nashorn/com/intellij/lang/javascript/psi/JSType');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');

declare class JSTypeEvaluateManager extends Object {
	constructor();
	static getBaseArrayType(arg1 : string) : string;
	static findNearestExtendedJSTypes(arg1 : JSPsiElementBase, arg2 : string) : Collection<JSPsiElementBase>;
	static iterateTypeHierarchy(arg1 : PsiElement, arg2 : string, arg3 : JSTypeEvaluateManager.NamespaceProcessor) : boolean;
	static iterateTypeHierarchy(arg1 : PsiElement, arg2 : Collection<string>, arg3 : boolean, arg4 : JSTypeEvaluateManager.NamespaceProcessor) : boolean;
	static iterateTypeHierarchy(arg1 : PsiElement, arg2 : Collection<string>, arg3 : boolean, arg4 : boolean, arg5 : JSTypeEvaluateManager.NamespaceProcessor, arg6 : Processor<JSObjectLiteralExpression>) : boolean;
	static buildSuperClassesHierarchy(arg1 : string, arg2 : GlobalSearchScope) : TreeItem<string>;
	static addSuperClasses(arg1 : TreeItem<string>, arg2 : Set<string>, arg3 : GlobalSearchScope) : void;
	static findSuperClass(arg1 : TreeItem<string>, arg2 : string) : TreeItem<string>;
	static expandTypedefs(arg1 : PsiElement, arg2 : string) : JSType;
	static getTypedefValue(arg1 : PsiElement, arg2 : string) : JSType;
	static iterateSubclasses(arg1 : PsiElement, arg2 : string, arg3 : JSTypeEvaluateManager.NamespaceProcessor) : boolean;
	static isArrayType(arg1 : string) : boolean;
	static getComponentType(arg1 : string) : string;
}


declare module JSTypeEvaluateManager {
	class NamespaceProcessor extends Object {
		process(arg1 : string, arg2 : VirtualFile) : boolean;
	}
}

export = JSTypeEvaluateManager
