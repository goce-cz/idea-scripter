import Object = require('nashorn/java/lang/Object');
import Map = require('nashorn/java/util/Map');
import Collection = require('nashorn/java/util/Collection');
import JSImplicitElementsIndex = require('nashorn/com/intellij/lang/javascript/index/JSImplicitElementsIndex');
import JSIndexContentBuilder = require('nashorn/com/intellij/lang/javascript/index/JSIndexContentBuilder');
import FileContent = require('nashorn/com/intellij/util/indexing/FileContent');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');

declare class JSIndexContent extends Object {
	static REQUIRE_DATA_MAIN_KEY : string;
	myImplicitElements : Map<string, Collection<JSImplicitElementsIndex.JSElementProxy>>;
	myCustomSingleEntries : Map<string, string>;
	myAdditionalData : Map<string, Map<string, number[]>>;
	implicitElements : Map<string, Collection<JSImplicitElementsIndex.JSElementProxy>>;
	constructor(arg1 : JSIndexContentBuilder);
	getImplicitElements() : Map<string, Collection<JSImplicitElementsIndex.JSElementProxy>>;
	static indexFile(arg1 : FileContent) : JSIndexContent;
	static createFromFile(arg1 : PsiFile) : JSIndexContent;
	getAdditionalData(arg1 : string, arg2 : string) : number[];
	static get(arg1 : PsiFile) : JSIndexContent;
}

export = JSIndexContent
