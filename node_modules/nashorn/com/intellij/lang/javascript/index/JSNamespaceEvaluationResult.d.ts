import JSReferenceExpression = require('nashorn/com/intellij/lang/javascript/psi/JSReferenceExpression');
import JSQualifiedName = require('nashorn/com/intellij/lang/javascript/psi/JSQualifiedName');
import JSContext = require('nashorn/com/intellij/lang/javascript/psi/types/JSContext');
import JSType = require('nashorn/com/intellij/lang/javascript/psi/JSType');
import JSSymbolNamespaceImpl = require('nashorn/com/intellij/lang/javascript/psi/JSSymbolNamespaceImpl');

declare class JSNamespaceEvaluationResult {
	source : JSReferenceExpression;
	constructor(arg1 : JSQualifiedName, arg2 : JSContext, arg3 : boolean, arg4 : boolean, arg5 : JSReferenceExpression);
	static fromType(arg1 : JSType) : JSNamespaceEvaluationResult;
	getSource() : JSReferenceExpression;
}


declare interface JSNamespaceEvaluationResult extends JSSymbolNamespaceImpl {}
export = JSNamespaceEvaluationResult
