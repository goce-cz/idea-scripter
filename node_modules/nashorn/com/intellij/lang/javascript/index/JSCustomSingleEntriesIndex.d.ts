import ID = require('nashorn/com/intellij/util/indexing/ID');
import DataIndexer = require('nashorn/com/intellij/util/indexing/DataIndexer');
import FileContent = require('nashorn/com/intellij/util/indexing/FileContent');
import KeyDescriptor = require('nashorn/com/intellij/util/io/KeyDescriptor');
import DataExternalizer = require('nashorn/com/intellij/util/io/DataExternalizer');
import FileBasedIndex = require('nashorn/com/intellij/util/indexing/FileBasedIndex');
import Collection = require('nashorn/java/util/Collection');
import FileType = require('nashorn/com/intellij/openapi/fileTypes/FileType');
import FileBasedIndexExtension = require('nashorn/com/intellij/util/indexing/FileBasedIndexExtension');

declare class JSCustomSingleEntriesIndex {
	static INDEX_ID : ID<string, string>;
	name : ID<string, string>;
	indexer : DataIndexer<string, string, FileContent>;
	keyDescriptor : KeyDescriptor<string>;
	valueExternalizer : DataExternalizer<string>;
	inputFilter : FileBasedIndex.InputFilter;
	version : number;
	fileTypesWithSizeLimitNotApplicable : Collection<FileType>;
	constructor();
}


declare interface JSCustomSingleEntriesIndex extends FileBasedIndexExtension<string, string> {}
export = JSCustomSingleEntriesIndex
