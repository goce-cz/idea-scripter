import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import HierarchyNodeDescriptor = require('nashorn/com/intellij/ide/hierarchy/HierarchyNodeDescriptor');
import PsiReference = require('nashorn/com/intellij/psi/PsiReference');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import Navigatable = require('nashorn/com/intellij/pom/Navigatable');

declare class JSCallHierarchyNodeDescriptor {
	enclosingElement : PsiElement;
	targetElement : PsiElement;
	valid : boolean;
	constructor(arg1 : Project, arg2 : HierarchyNodeDescriptor, arg3 : PsiElement, arg4 : boolean, arg5 : boolean);
	getEnclosingElement() : PsiElement;
	static getEnclosingElement(arg1 : PsiElement) : PsiElement;
	incrementUsageCount() : void;
	getTargetElement() : PsiElement;
	addReference(arg1 : PsiReference) : void;
	static getEditor(arg1 : PsiElement) : Editor;
}


declare interface JSCallHierarchyNodeDescriptor extends HierarchyNodeDescriptor, Navigatable {}
export = JSCallHierarchyNodeDescriptor
