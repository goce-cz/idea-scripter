import Project = require('nashorn/com/intellij/openapi/project/Project');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import JSExpression = require('nashorn/com/intellij/lang/javascript/psi/JSExpression');
import JSBaseIntroduceHandler = require('nashorn/com/intellij/lang/javascript/refactoring/introduce/JSBaseIntroduceHandler');
import JSElement = require('nashorn/com/intellij/lang/javascript/psi/JSElement');
import Settings = require('nashorn/com/intellij/lang/javascript/refactoring/introduceVariable/Settings');
import JSBaseIntroduceDialog = require('nashorn/com/intellij/lang/javascript/refactoring/introduce/JSBaseIntroduceDialog');
import JRadioButton = require('nashorn/javax/swing/JRadioButton');
import JSBaseInplaceIntroducer = require('nashorn/com/intellij/lang/javascript/refactoring/introduce/JSBaseInplaceIntroducer');

declare class JSVariableInplaceIntroducer {
	constructor(arg1 : Project, arg2 : Editor, arg3 : JSExpression[], arg4 : JSBaseIntroduceHandler<JSElement, Settings, JSBaseIntroduceDialog>, arg5 : JSBaseIntroduceHandler.BaseIntroduceContext<Settings>);
	initTypeSelector(arg1 : JRadioButton, arg2 : string, arg3 : Settings.IntroducedVarType) : void;
}


declare interface JSVariableInplaceIntroducer extends JSBaseInplaceIntroducer<Settings> {}
export = JSVariableInplaceIntroducer
