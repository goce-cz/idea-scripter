import Object = require('nashorn/java/lang/Object');
import JSFunctionSignatureInfo = require('nashorn/com/intellij/lang/javascript/refactoring/extractMethod/signatureGenerator/JSFunctionSignatureInfo');
import StringBuilder = require('nashorn/java/lang/StringBuilder');
import Couple = require('nashorn/com/intellij/openapi/util/Couple');

declare class JSFunctionSignatureGenerator extends Object {
	constructor();
	getSignature(arg1 : JSFunctionSignatureInfo) : StringBuilder;
	appendFunctionNameWithModifiers(arg1 : JSFunctionSignatureInfo, arg2 : StringBuilder) : void;
	appendFunctionParameters(arg1 : JSFunctionSignatureInfo, arg2 : StringBuilder) : void;
	getFunctionParameter(arg1 : Couple<string>) : string;
	appendFunctionEnding(arg1 : JSFunctionSignatureInfo, arg2 : StringBuilder) : void;
}

export = JSFunctionSignatureGenerator
