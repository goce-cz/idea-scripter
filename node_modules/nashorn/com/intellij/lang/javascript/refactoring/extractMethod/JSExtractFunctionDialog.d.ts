import JComboBox = require('nashorn/javax/swing/JComboBox');
import JCheckBox = require('nashorn/javax/swing/JCheckBox');
import JSExtractFunctionSettings = require('nashorn/com/intellij/lang/javascript/refactoring/extractMethod/JSExtractFunctionSettings');
import JSVisibilityPanel = require('nashorn/com/intellij/lang/javascript/refactoring/ui/JSVisibilityPanel');
import JSExtractFunctionHandler = require('nashorn/com/intellij/lang/javascript/refactoring/extractMethod/JSExtractFunctionHandler');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import ExtractedFunctionSignatureGenerator = require('nashorn/com/intellij/lang/javascript/refactoring/extractMethod/ExtractedFunctionSignatureGenerator');
import JSBaseClassBasedIntroduceDialog = require('nashorn/com/intellij/lang/javascript/refactoring/introduce/JSBaseClassBasedIntroduceDialog');
import IntroducedEntityInfoProvider = require('nashorn/com/intellij/lang/javascript/refactoring/introduce/IntroducedEntityInfoProvider');

declare class JSExtractFunctionDialog {
	varTypeField : JComboBox;
	methodName : string;
	declareAsFunctionExpression : JCheckBox;
	parametersInfo : JSExtractFunctionSettings.ParametersInfo;
	visibilityPanel : JSVisibilityPanel;
	introductionScope : JSExtractFunctionHandler.IntroductionScope;
	contextInfo : JSExtractFunctionHandler.ContextInfo;
	constructor(arg1 : PsiElement, arg2 : ExtractedFunctionSignatureGenerator, arg3 : JSExtractFunctionHandler.ContextInfo, arg4 : JSExtractFunctionHandler.IntroductionScope);
	swapVars(arg1 : number, arg2 : number) : void;
	changeRowNumber(arg1 : number, arg2 : number) : void;
	getDeclareAsFunctionExpression() : JCheckBox;
	setParametersInfo(arg1 : JSExtractFunctionSettings.ParametersInfo) : void;
	getContextInfo() : JSExtractFunctionHandler.ContextInfo;
	createUIComponents() : void;
}


declare interface JSExtractFunctionDialog extends JSBaseClassBasedIntroduceDialog<IntroducedEntityInfoProvider>, JSExtractFunctionSettings {}
export = JSExtractFunctionDialog
