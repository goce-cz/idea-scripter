import JSFunctionSignatureInfo = require('nashorn/com/intellij/lang/javascript/refactoring/extractMethod/signatureGenerator/JSFunctionSignatureInfo');
import JSExtractFunctionHandler = require('nashorn/com/intellij/lang/javascript/refactoring/extractMethod/JSExtractFunctionHandler');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSExtractedFunctionSignatureInfoBuilder = require('nashorn/com/intellij/lang/javascript/refactoring/extractMethod/JSExtractedFunctionSignatureInfoBuilder');

declare class ECMA4ExtractedFunctionSignatureInfoBuilder {
	constructor();
	static setReturnType(arg1 : JSFunctionSignatureInfo, arg2 : JSExtractFunctionHandler.IntroductionScope, arg3 : PsiElement) : void;
}


declare interface ECMA4ExtractedFunctionSignatureInfoBuilder extends JSExtractedFunctionSignatureInfoBuilder {}
export = ECMA4ExtractedFunctionSignatureInfoBuilder
