import Object = require('nashorn/java/lang/Object');
import JSAttributeList = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttributeList');
import JSExtractFunctionHandler = require('nashorn/com/intellij/lang/javascript/refactoring/extractMethod/JSExtractFunctionHandler');
import List = require('nashorn/java/util/List');
import JSVariable = require('nashorn/com/intellij/lang/javascript/psi/JSVariable');
import Map = require('nashorn/java/util/Map');

declare class JSExtractFunctionSettings extends Object {
	methodName : string;
	accessType : JSAttributeList.AccessType;
	parametersInfo : JSExtractFunctionSettings.ParametersInfo;
	introductionScope : JSExtractFunctionHandler.IntroductionScope;
	getMethodName() : string;
	getAccessType() : JSAttributeList.AccessType;
	getParametersInfo() : JSExtractFunctionSettings.ParametersInfo;
	makeStatic() : boolean;
	makeFunctionExpression() : boolean;
	getIntroductionScope() : JSExtractFunctionHandler.IntroductionScope;
}


declare module JSExtractFunctionSettings {
	class ParameterInfo extends Object {
		used : boolean;
		type : string;
		index : number;
		name : string;
		constructor(arg1 : string, arg2 : boolean, arg3 : string, arg4 : number);
	}
	class ParametersInfo extends Object {
		variables : List<JSVariable>;
		variableOptions : Map<JSVariable, JSExtractFunctionSettings.ParameterInfo>;
		constructor();
	}
}

export = JSExtractFunctionSettings
