import Object = require('nashorn/java/lang/Object');
import JSMemberInfo = require('nashorn/com/intellij/lang/javascript/refactoring/util/JSMemberInfo');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import JSInterfaceContainmentVerifier = require('nashorn/com/intellij/lang/javascript/refactoring/util/JSInterfaceContainmentVerifier');
import JSVisibilityUtil = require('nashorn/com/intellij/lang/javascript/refactoring/JSVisibilityUtil');
import MultiMap = require('nashorn/com/intellij/util/containers/MultiMap');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSElement = require('nashorn/com/intellij/lang/javascript/psi/JSElement');
import JSClassMemberReferencesVisitor = require('nashorn/com/intellij/lang/javascript/refactoring/util/JSClassMemberReferencesVisitor');

declare class JSPullUpConflictsUtil extends Object {
	constructor();
	static checkConflicts(arg1 : JSMemberInfo[], arg2 : JSClass, arg3 : JSClass, arg4 : JSInterfaceContainmentVerifier, arg5 : JSVisibilityUtil.Options) : MultiMap<PsiElement, string>;
	static checkNoFieldsInInterface(arg1 : JSMemberInfo[], arg2 : MultiMap<PsiElement, string>) : void;
}


declare module JSPullUpConflictsUtil {
	class NonAccessibleUsagesOfSubClassMembers {
		willBeMoved(arg1 : PsiElement) : boolean;
		existsInSuperClass(arg1 : JSElement) : boolean;
	}


	interface NonAccessibleUsagesOfSubClassMembers extends JSClassMemberReferencesVisitor {}}

export = JSPullUpConflictsUtil
