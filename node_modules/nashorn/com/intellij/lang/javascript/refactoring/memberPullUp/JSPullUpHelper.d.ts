import Object = require('nashorn/java/lang/Object');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import JSMemberInfo = require('nashorn/com/intellij/lang/javascript/refactoring/util/JSMemberInfo');
import List = require('nashorn/java/util/List');
import FormatFixer = require('nashorn/com/intellij/lang/javascript/refactoring/FormatFixer');
import Collection = require('nashorn/java/util/Collection');
import JSElement = require('nashorn/com/intellij/lang/javascript/psi/JSElement');
import SmartPsiElementPointer = require('nashorn/com/intellij/psi/SmartPsiElementPointer');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSAttributeListOwner = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttributeListOwner');
import JSFunction = require('nashorn/com/intellij/lang/javascript/psi/JSFunction');
import JSRecursiveElementVisitor = require('nashorn/com/intellij/lang/javascript/psi/JSRecursiveElementVisitor');

declare class JSPullUpHelper extends Object {
	constructor(arg1 : JSClass, arg2 : JSClass, arg3 : JSMemberInfo[], arg4 : number);
	moveMembersToBase() : void;
	moveMembersToBase(arg1 : List<FormatFixer>, arg2 : boolean) : Collection<JSElement>;
	static convertToPointers(arg1 : Collection<JSElement>) : List<SmartPsiElementPointer<JSElement>>;
	static convertToPsi(arg1 : Collection<SmartPsiElementPointer<JSElement>>) : List<JSElement>;
	static willBeUsedInSubclass(arg1 : PsiElement, arg2 : Collection<JSAttributeListOwner>, arg3 : JSClass, arg4 : JSClass) : boolean;
	static checkedInterfacesContain(arg1 : Collection<JSMemberInfo>, arg2 : JSFunction) : boolean;
}


declare module JSPullUpHelper {
	class ExplicitSuperDeleter {
		fixSupers() : void;
	}


	interface ExplicitSuperDeleter extends JSRecursiveElementVisitor {}}

export = JSPullUpHelper
