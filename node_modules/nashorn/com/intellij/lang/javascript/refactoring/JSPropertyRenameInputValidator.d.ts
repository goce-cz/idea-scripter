import ElementPattern = require('nashorn/com/intellij/patterns/ElementPattern');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import LeafPsiElement = require('nashorn/com/intellij/psi/impl/source/tree/LeafPsiElement');
import JsonNamesValidator = require('nashorn/com/intellij/json/JsonNamesValidator');
import RenameInputValidator = require('nashorn/com/intellij/refactoring/rename/RenameInputValidator');

declare class JSPropertyRenameInputValidator {
	pattern : ElementPattern<PsiElement>;
	constructor();
	static getNameSuggestionContext(arg1 : Project) : LeafPsiElement;
	getJSONNamesValidator() : JsonNamesValidator;
}


declare interface JSPropertyRenameInputValidator extends RenameInputValidator {}
export = JSPropertyRenameInputValidator
