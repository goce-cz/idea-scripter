import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import ActionListener = require('nashorn/java/awt/event/ActionListener');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import Computable = require('nashorn/com/intellij/openapi/util/Computable');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Document = require('nashorn/com/intellij/openapi/editor/Document');
import EditorComboBox = require('nashorn/com/intellij/ui/EditorComboBox');
import JavaScriptParserBase = require('nashorn/com/intellij/lang/javascript/parsing/JavaScriptParserBase');
import Condition = require('nashorn/com/intellij/openapi/util/Condition');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import DocumentListener = require('nashorn/com/intellij/openapi/editor/event/DocumentListener');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import ComponentWithBrowseButton = require('nashorn/com/intellij/openapi/ui/ComponentWithBrowseButton');
import JComponent = require('nashorn/javax/swing/JComponent');
import TextAccessor = require('nashorn/com/intellij/ui/TextAccessor');
import Dimension = require('nashorn/java/awt/Dimension');

declare class JSReferenceEditor {
	psiFile : PsiFile;
	text : string;
	createActionListener() : ActionListener;
	setScope(arg1 : GlobalSearchScope) : void;
	invalidateHighlight() : void;
	setChooserBlockingMessage(arg1 : string) : void;
	setHeightProvider(arg1 : Computable<number>) : void;
	static createEditorCombo(arg1 : Project, arg2 : Document) : EditorComboBox;
	static createDocument(arg1 : string, arg2 : Project, arg3 : GlobalSearchScope, arg4 : JavaScriptParserBase.ForceContext, arg5 : Condition<PsiElement>, arg6 : boolean, arg7 : PsiElement) : Document;
	addDocumentListener(arg1 : DocumentListener) : void;
	getPsiFile() : PsiFile;
	getDocument() : Document;
	setText(arg1 : string, arg2 : boolean) : void;
	updateRecents() : void;
	getScope() : GlobalSearchScope;
	static forClassName(arg1 : string, arg2 : Project, arg3 : string, arg4 : GlobalSearchScope, arg5 : JavaScriptParserBase.ForceContext, arg6 : Condition<JSClass>, arg7 : string) : JSReferenceEditor;
	static forClassName(arg1 : string, arg2 : Project, arg3 : string, arg4 : GlobalSearchScope, arg5 : JavaScriptParserBase.ForceContext, arg6 : Condition<JSClass>, arg7 : string, arg8 : PsiElement) : JSReferenceEditor;
	static forPackageName(arg1 : string, arg2 : Project, arg3 : string, arg4 : GlobalSearchScope, arg5 : string) : JSReferenceEditor;
}


declare interface JSReferenceEditor extends ComponentWithBrowseButton<JComponent>, TextAccessor {}

declare module JSReferenceEditor {
	class MyEditorComboBox {
		preferredSize : Dimension;
		constructor(arg1 : Document, arg2 : Project);
		setHeightProvider(arg1 : Computable<number>) : void;
	}


	interface MyEditorComboBox extends EditorComboBox {}}

export = JSReferenceEditor
