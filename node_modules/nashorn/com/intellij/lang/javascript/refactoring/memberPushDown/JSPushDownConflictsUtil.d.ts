import Object = require('nashorn/java/lang/Object');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import JSMemberInfo = require('nashorn/com/intellij/lang/javascript/refactoring/util/JSMemberInfo');
import Collection = require('nashorn/java/util/Collection');
import JSVisibilityUtil = require('nashorn/com/intellij/lang/javascript/refactoring/JSVisibilityUtil');
import MultiMap = require('nashorn/com/intellij/util/containers/MultiMap');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSAttributeListOwner = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttributeListOwner');

declare class JSPushDownConflictsUtil extends Object {
	constructor();
	static checkConflicts(arg1 : JSClass, arg2 : JSMemberInfo[], arg3 : Collection<JSClass>, arg4 : JSVisibilityUtil.Options) : MultiMap<PsiElement, string>;
	static checkIncomingRefsFromUntouchedMember(arg1 : JSClass, arg2 : Collection<JSAttributeListOwner>, arg3 : Collection<JSAttributeListOwner>, arg4 : JSAttributeListOwner, arg5 : MultiMap<PsiElement, string>) : void;
	static checkIncomingReferencesToBaseClassExist(arg1 : JSClass, arg2 : Collection<JSAttributeListOwner>) : boolean;
	static checkMemberExistsInTargetClass(arg1 : JSClass, arg2 : JSClass, arg3 : JSAttributeListOwner, arg4 : MultiMap<PsiElement, string>) : void;
}

export = JSPushDownConflictsUtil
