import ClassMembersRefactoringSupport = require('nashorn/com/intellij/refactoring/classMembers/ClassMembersRefactoringSupport');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import JSElement = require('nashorn/com/intellij/lang/javascript/psi/JSElement');
import DependentMembersCollectorBase = require('nashorn/com/intellij/refactoring/classMembers/DependentMembersCollectorBase');

declare class JSClassMembersRefactoringSupport {
	constructor();
}


declare interface JSClassMembersRefactoringSupport extends ClassMembersRefactoringSupport {}

declare module JSClassMembersRefactoringSupport {
	class JSDependentMembersCollector {
		constructor(arg1 : JSClass, arg2 : JSClass);
		existsInSuperClass(arg1 : JSElement) : boolean;
	}


	interface JSDependentMembersCollector extends DependentMembersCollectorBase<JSElement, JSClass> {}}

export = JSClassMembersRefactoringSupport
