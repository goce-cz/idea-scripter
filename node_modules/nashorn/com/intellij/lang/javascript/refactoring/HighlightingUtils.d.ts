import Object = require('nashorn/java/lang/Object');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import ArrayList = require('nashorn/java/util/ArrayList');
import RangeHighlighter = require('nashorn/com/intellij/openapi/editor/markup/RangeHighlighter');
import List = require('nashorn/java/util/List');
import RangeMarker = require('nashorn/com/intellij/openapi/editor/RangeMarker');

declare class HighlightingUtils extends Object {
	constructor();
	static highlightOccurrences(arg1 : Project, arg2 : Editor, arg3 : PsiElement[]) : ArrayList<RangeHighlighter>;
	static highlightOccurrences(arg1 : Project, arg2 : Editor, arg3 : HighlightingUtils.OccurrenceInfoSource) : ArrayList<RangeHighlighter>;
	static informThatHighlightingCanbeRemoved(arg1 : Project) : void;
	static doHighlightOccurences(arg1 : Project, arg2 : Editor, arg3 : HighlightingUtils.OccurrenceInfoSource, arg4 : boolean) : ArrayList<RangeHighlighter>;
}


declare module HighlightingUtils {
	class PsiElementsOccurrenceInfoSource {
		constructor(arg1 : PsiElement[]);
	}


	interface PsiElementsOccurrenceInfoSource extends HighlightingUtils.OccurrenceInfoSource {}	class RangesOccurrenceInfoSource {
		constructor(arg1 : List<RangeMarker>);
	}


	interface RangesOccurrenceInfoSource extends HighlightingUtils.OccurrenceInfoSource {}	class OccurrenceInfoSource extends Object {
		constructor();
	}
}

export = HighlightingUtils
