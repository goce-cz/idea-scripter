import Project = require('nashorn/com/intellij/openapi/project/Project');
import MoveCallback = require('nashorn/com/intellij/refactoring/move/MoveCallback');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import JSMoveMembersOptions = require('nashorn/com/intellij/lang/javascript/refactoring/moveMembers/JSMoveMembersOptions');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import JSAttributeListOwner = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSAttributeListOwner');
import UsageInfo = require('nashorn/com/intellij/usageView/UsageInfo');
import List = require('nashorn/java/util/List');
import FormatFixer = require('nashorn/com/intellij/lang/javascript/refactoring/FormatFixer');
import BaseRefactoringProcessor = require('nashorn/com/intellij/refactoring/BaseRefactoringProcessor');

declare class JSMoveMembersProcessor {
	constructor(arg1 : Project, arg2 : MoveCallback, arg3 : JSClass, arg4 : GlobalSearchScope, arg5 : JSMoveMembersOptions);
	setCommandName(arg1 : JSClass, arg2 : PsiElement[]) : void;
	fixVisibility(arg1 : JSAttributeListOwner, arg2 : UsageInfo[]) : void;
	static doMove(arg1 : JSAttributeListOwner, arg2 : JSClass, arg3 : List<FormatFixer>) : JSAttributeListOwner;
}


declare interface JSMoveMembersProcessor extends BaseRefactoringProcessor {}
export = JSMoveMembersProcessor
