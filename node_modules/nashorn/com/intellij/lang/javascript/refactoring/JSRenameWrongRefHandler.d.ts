import Editor = require('nashorn/com/intellij/openapi/editor/Editor');
import JSReferenceExpression = require('nashorn/com/intellij/lang/javascript/psi/JSReferenceExpression');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import List = require('nashorn/java/util/List');
import JSNamedElement = require('nashorn/com/intellij/lang/javascript/psi/JSNamedElement');
import Expression = require('nashorn/com/intellij/codeInsight/template/Expression');
import RenameHandler = require('nashorn/com/intellij/refactoring/rename/RenameHandler');

declare class JSRenameWrongRefHandler {
	constructor();
	static isAvailable(arg1 : Editor) : boolean;
	static collectSimilarReferencesAndDeclarations(arg1 : JSReferenceExpression, arg2 : PsiElement, arg3 : List<JSNamedElement>) : JSReferenceExpression[];
	static createExpression(arg1 : string, arg2 : List<JSNamedElement>) : Expression;
}


declare interface JSRenameWrongRefHandler extends RenameHandler {}
export = JSRenameWrongRefHandler
