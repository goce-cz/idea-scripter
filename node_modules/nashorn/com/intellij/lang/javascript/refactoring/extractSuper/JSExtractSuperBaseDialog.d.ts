import Collection = require('nashorn/java/util/Collection');
import JSMemberInfo = require('nashorn/com/intellij/lang/javascript/refactoring/util/JSMemberInfo');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import List = require('nashorn/java/util/List');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import JSExtractSuperProcessor = require('nashorn/com/intellij/lang/javascript/refactoring/extractSuper/JSExtractSuperProcessor');
import JSElement = require('nashorn/com/intellij/lang/javascript/psi/JSElement');
import ExtractSuperBaseDialog = require('nashorn/com/intellij/refactoring/extractSuperclass/ExtractSuperBaseDialog');

declare class JSExtractSuperBaseDialog {
	selectedMemberInfos : Collection<JSMemberInfo>;
	constructor(arg1 : Project, arg2 : JSClass, arg3 : List<JSMemberInfo>, arg4 : string);
	getScope() : GlobalSearchScope;
	getMode() : JSExtractSuperProcessor.Mode;
	static collectMembers(arg1 : JSClass, arg2 : JSElement, arg3 : boolean) : List<JSMemberInfo>;
}


declare interface JSExtractSuperBaseDialog extends ExtractSuperBaseDialog<JSClass, JSMemberInfo> {}
export = JSExtractSuperBaseDialog
