import Object = require('nashorn/java/lang/Object');
import IFileElementType = require('nashorn/com/intellij/psi/tree/IFileElementType');
import TokenSet = require('nashorn/com/intellij/psi/tree/TokenSet');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Lexer = require('nashorn/com/intellij/lexer/Lexer');
import PsiParser = require('nashorn/com/intellij/lang/PsiParser');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import FileViewProvider = require('nashorn/com/intellij/psi/FileViewProvider');
import PsiFile = require('nashorn/com/intellij/psi/PsiFile');
import Enum = require('nashorn/java/lang/Enum');

declare class ParserDefinition extends Object {
	fileNodeType : IFileElementType;
	whitespaceTokens : TokenSet;
	commentTokens : TokenSet;
	stringLiteralElements : TokenSet;
	createLexer(arg1 : Project) : Lexer;
	createParser(arg1 : Project) : PsiParser;
	getFileNodeType() : IFileElementType;
	getWhitespaceTokens() : TokenSet;
	getCommentTokens() : TokenSet;
	getStringLiteralElements() : TokenSet;
	createElement(arg1 : ASTNode) : PsiElement;
	createFile(arg1 : FileViewProvider) : PsiFile;
	spaceExistanceTypeBetweenTokens(arg1 : ASTNode, arg2 : ASTNode) : ParserDefinition.SpaceRequirements;
}


declare module ParserDefinition {
	class SpaceRequirements {
		static MAY : ParserDefinition.SpaceRequirements;
		static MUST : ParserDefinition.SpaceRequirements;
		static MUST_NOT : ParserDefinition.SpaceRequirements;
		static MUST_LINE_BREAK : ParserDefinition.SpaceRequirements;
	}


	interface SpaceRequirements extends Enum<ParserDefinition.SpaceRequirements> {}}

export = ParserDefinition
