import Logger = require('nashorn/com/intellij/openapi/diagnostic/Logger');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import TypeScriptCompileInfo = require('nashorn/com/intellij/lang/typescript/compiler/TypeScriptCompileInfo');
import ExternalAnnotator = require('nashorn/com/intellij/lang/annotation/ExternalAnnotator');
import Pair = require('nashorn/com/intellij/openapi/util/Pair');
import List = require('nashorn/java/util/List');
import JSLanguageCompilerResult = require('nashorn/com/intellij/lang/javascript/compiler/JSLanguageCompilerResult');

declare class TypeScriptCompilerAnnotator {
	static LOGGER : Logger;
	constructor();
	static getCompileScope(arg1 : Project) : GlobalSearchScope;
	static createCompilerInputWithUnSavedFiles(arg1 : VirtualFile, arg2 : boolean, arg3 : number) : TypeScriptCompileInfo;
}


declare interface TypeScriptCompilerAnnotator extends ExternalAnnotator<Pair<Project, TypeScriptCompileInfo>, List<JSLanguageCompilerResult>> {}
export = TypeScriptCompilerAnnotator
