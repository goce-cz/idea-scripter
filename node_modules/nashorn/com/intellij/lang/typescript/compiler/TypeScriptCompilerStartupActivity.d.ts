import VFileEvent = require('nashorn/com/intellij/openapi/vfs/newvfs/events/VFileEvent');
import List = require('nashorn/java/util/List');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import TypeScriptCompilerService = require('nashorn/com/intellij/lang/typescript/compiler/TypeScriptCompilerService');
import StartupActivity = require('nashorn/com/intellij/openapi/startup/StartupActivity');

declare class TypeScriptCompilerStartupActivity {
	constructor();
	static processDeleteFile(arg1 : VFileEvent, arg2 : List<string>) : void;
	static processMovedFiles(arg1 : VFileEvent, arg2 : List<string>, arg3 : List<VirtualFile>) : void;
	static processRenamedFiles(arg1 : VFileEvent, arg2 : List<string>) : void;
	static processCreateAndChangeFiles(arg1 : VFileEvent, arg2 : List<VirtualFile>) : void;
	initAndGetService(arg1 : Project) : TypeScriptCompilerService;
}


declare interface TypeScriptCompilerStartupActivity extends StartupActivity {}
export = TypeScriptCompilerStartupActivity
