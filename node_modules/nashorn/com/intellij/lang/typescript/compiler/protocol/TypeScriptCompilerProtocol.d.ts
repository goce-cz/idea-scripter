import Logger = require('nashorn/com/intellij/openapi/diagnostic/Logger');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import OSProcessHandler = require('nashorn/com/intellij/execution/process/OSProcessHandler');
import GeneralCommandLine = require('nashorn/com/intellij/execution/configurations/GeneralCommandLine');
import JSLanguageCompilerProtocol = require('nashorn/com/intellij/lang/javascript/compiler/protocol/JSLanguageCompilerProtocol');

declare class TypeScriptCompilerProtocol {
	static LOGGER : Logger;
	static SOURCE_MAP : string;
	static OBJECT_LENGTH : number;
	constructor(arg1 : Project);
	waitingReadyNotification(arg1 : OSProcessHandler) : boolean;
	createCommandLine(arg1 : number, arg2 : string) : GeneralCommandLine;
	getSessionIdParam() : string;
	getServicePathParam() : string;
	toSystemCommand(arg1 : string) : string;
	static getPortParam(arg1 : number) : string;
	static getHostParam(arg1 : string) : string;
	write(arg1 : string) : void;
}


declare interface TypeScriptCompilerProtocol extends JSLanguageCompilerProtocol {}
export = TypeScriptCompilerProtocol
