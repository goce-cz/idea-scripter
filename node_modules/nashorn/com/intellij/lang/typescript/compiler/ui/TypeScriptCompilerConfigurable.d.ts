import Project = require('nashorn/com/intellij/openapi/project/Project');
import SearchableConfigurable = require('nashorn/com/intellij/openapi/options/SearchableConfigurable');
import Object = require('nashorn/java/lang/Object');

declare class TypeScriptCompilerConfigurable {
	static TYPESCRIPT_COMPILER_CONFIG_ID : string;
	id : string;
	displayName : string;
	helpTopic : string;
	modified : boolean;
	constructor(arg1 : Project);
	static getDefaultNodeInterpreter() : string;
}


declare interface TypeScriptCompilerConfigurable extends SearchableConfigurable {}

declare module TypeScriptCompilerConfigurable {
	class UIHolder extends Object {
		setComponentsEnable(arg1 : boolean) : void;
		apply() : void;
		reset() : void;
		isModified() : boolean;
		getNodeInterpreterValueForField() : string;
		getNodeInterpreterValueForStore() : string;
	}
}

export = TypeScriptCompilerConfigurable
