import Key = require('nashorn/com/intellij/openapi/util/Key');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import EditorNotifications = require('nashorn/com/intellij/ui/EditorNotifications');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import Runnable = require('nashorn/java/lang/Runnable');
import EditorNotificationPanel = require('nashorn/com/intellij/ui/EditorNotificationPanel');
import Color = require('nashorn/java/awt/Color');
import Object = require('nashorn/java/lang/Object');

declare class TypeScriptCompilerEditorNotificationProvider {
	static TS_SHOW_COMPILER_NOTIFICATION : string;
	key : Key;
	constructor(arg1 : Project, arg2 : EditorNotifications);
	hasOverride() : boolean;
	showCompilerNotification(arg1 : VirtualFile) : boolean;
	getDismissAction() : Runnable;
	getColor(arg1 : EditorNotificationPanel) : Color;
	getConfigureAction() : Runnable;
}


declare interface TypeScriptCompilerEditorNotificationProvider extends EditorNotifications.Provider {}

declare module TypeScriptCompilerEditorNotificationProvider {
	class CompilerEditorNotificationPanel {
		background : Color;
		constructor();
	}


	interface CompilerEditorNotificationPanel extends EditorNotificationPanel {}	class NotificationOverride extends Object {
	}
}

export = TypeScriptCompilerEditorNotificationProvider
