import Icon = require('nashorn/javax/swing/Icon');
import AnActionEvent = require('nashorn/com/intellij/openapi/actionSystem/AnActionEvent');
import ProgressIndicator = require('nashorn/com/intellij/openapi/progress/ProgressIndicator');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import Processor = require('nashorn/com/intellij/util/Processor');
import VirtualFile = require('nashorn/com/intellij/openapi/vfs/VirtualFile');
import JSLanguageCompilerToolWindowManager = require('nashorn/com/intellij/lang/javascript/compiler/ui/JSLanguageCompilerToolWindowManager');
import List = require('nashorn/java/util/List');
import JSLanguageCompilerResult = require('nashorn/com/intellij/lang/javascript/compiler/JSLanguageCompilerResult');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import JSLanguageExternalCompiler = require('nashorn/com/intellij/lang/javascript/compiler/JSLanguageExternalCompiler');
import AnAction = require('nashorn/com/intellij/openapi/actionSystem/AnAction');

declare class TypeScriptCompileAllAction {
	constructor();
	constructor(arg1 : string, arg2 : string, arg3 : Icon);
	runCompile(arg1 : AnActionEvent, arg2 : ProgressIndicator, arg3 : Project) : void;
	iterateFilesForCompile(arg1 : AnActionEvent, arg2 : Project, arg3 : ProgressIndicator, arg4 : Processor<VirtualFile>) : void;
	logErrors(arg1 : JSLanguageCompilerToolWindowManager, arg2 : List<JSLanguageCompilerResult>) : void;
	compileFile(arg1 : VirtualFile, arg2 : ProgressIndicator, arg3 : GlobalSearchScope, arg4 : JSLanguageExternalCompiler, arg5 : List<JSLanguageCompilerResult>) : boolean;
}


declare interface TypeScriptCompileAllAction extends AnAction {}
export = TypeScriptCompileAllAction
