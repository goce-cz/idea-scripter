import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Collection = require('nashorn/java/util/Collection');
import JSPsiElementBase = require('nashorn/com/intellij/lang/javascript/psi/JSPsiElementBase');
import GlobalSearchScope = require('nashorn/com/intellij/psi/search/GlobalSearchScope');
import JSClassResolver = require('nashorn/com/intellij/lang/javascript/psi/resolve/JSClassResolver');

declare class TypeScriptClassResolver {
	static instance : TypeScriptClassResolver;
	static getInstance() : TypeScriptClassResolver;
	static isObjectInterface(arg1 : JSClass) : boolean;
	findChildren(arg1 : string, arg2 : PsiElement) : Collection<JSPsiElementBase>;
	findAnyClassByQName(arg1 : string, arg2 : GlobalSearchScope) : JSClass;
}


declare interface TypeScriptClassResolver extends JSClassResolver {}
export = TypeScriptClassResolver
