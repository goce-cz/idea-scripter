import JSClass = require('nashorn/com/intellij/lang/javascript/psi/ecmal4/JSClass');
import List = require('nashorn/java/util/List');
import JSType = require('nashorn/com/intellij/lang/javascript/psi/JSType');
import Ref = require('nashorn/com/intellij/openapi/util/Ref');
import TypeScriptTypeParameterList = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptTypeParameterList');
import Map = require('nashorn/java/util/Map');
import JSGenericTypesEvaluator = require('nashorn/com/intellij/lang/javascript/psi/resolve/JSGenericTypesEvaluator');

declare class TypeScriptGenericTypesEvaluator {
	static instance : TypeScriptGenericTypesEvaluator;
	static getInstance() : TypeScriptGenericTypesEvaluator;
	static processClassWithGenericArguments(arg1 : JSClass, arg2 : List<JSType>, arg3 : JSClass, arg4 : Ref<JSType>) : boolean;
	static getMapFromClassTypeParametersToTypeArguments(arg1 : TypeScriptTypeParameterList, arg2 : List<JSType>) : Map<string, JSType>;
}


declare interface TypeScriptGenericTypesEvaluator extends JSGenericTypesEvaluator {}
export = TypeScriptGenericTypesEvaluator
