import Object = require('nashorn/java/lang/Object');
import JSNamedElement = require('nashorn/com/intellij/lang/javascript/psi/JSNamedElement');
import JSType = require('nashorn/com/intellij/lang/javascript/psi/JSType');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import TypeScriptExportAssignment = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptExportAssignment');
import JSParameter = require('nashorn/com/intellij/lang/javascript/psi/JSParameter');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import TypeScriptFunction = require('nashorn/com/intellij/lang/javascript/psi/ecma6/TypeScriptFunction');
import List = require('nashorn/java/util/List');
import JSReferenceExpression = require('nashorn/com/intellij/lang/javascript/psi/JSReferenceExpression');

declare class TypeScriptPsiUtil extends Object {
	constructor();
	static getTypeFromDeclaration(arg1 : JSNamedElement) : JSType;
	static isAmbientDeclaration(arg1 : PsiElement) : boolean;
	static isNamedTypeDefinition(arg1 : PsiElement) : boolean;
	static findExportAssignment(arg1 : PsiElement) : TypeScriptExportAssignment;
	static isClassMember(arg1 : JSParameter) : boolean;
	static getNameFromIdentifier(arg1 : ASTNode) : string;
	static getOverloadDeclarations(arg1 : TypeScriptFunction) : List<TypeScriptFunction>;
	static resolveViaImports(arg1 : JSReferenceExpression) : PsiElement;
}

export = TypeScriptPsiUtil
