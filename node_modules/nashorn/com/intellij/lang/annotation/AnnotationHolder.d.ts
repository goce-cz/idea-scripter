import Object = require('nashorn/java/lang/Object');
import AnnotationSession = require('nashorn/com/intellij/lang/annotation/AnnotationSession');
import PsiElement = require('nashorn/com/intellij/psi/PsiElement');
import Annotation = require('nashorn/com/intellij/lang/annotation/Annotation');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import TextRange = require('nashorn/com/intellij/openapi/util/TextRange');
import HighlightSeverity = require('nashorn/com/intellij/lang/annotation/HighlightSeverity');

declare class AnnotationHolder extends Object {
	currentAnnotationSession : AnnotationSession;
	batchMode : boolean;
	createErrorAnnotation(arg1 : PsiElement, arg2 : string) : Annotation;
	createErrorAnnotation(arg1 : ASTNode, arg2 : string) : Annotation;
	createErrorAnnotation(arg1 : TextRange, arg2 : string) : Annotation;
	createWarningAnnotation(arg1 : PsiElement, arg2 : string) : Annotation;
	createWarningAnnotation(arg1 : ASTNode, arg2 : string) : Annotation;
	createWarningAnnotation(arg1 : TextRange, arg2 : string) : Annotation;
	createWeakWarningAnnotation(arg1 : PsiElement, arg2 : string) : Annotation;
	createWeakWarningAnnotation(arg1 : ASTNode, arg2 : string) : Annotation;
	createWeakWarningAnnotation(arg1 : TextRange, arg2 : string) : Annotation;
	createInfoAnnotation(arg1 : PsiElement, arg2 : string) : Annotation;
	createInfoAnnotation(arg1 : ASTNode, arg2 : string) : Annotation;
	createInfoAnnotation(arg1 : TextRange, arg2 : string) : Annotation;
	createAnnotation(arg1 : HighlightSeverity, arg2 : TextRange, arg3 : string) : Annotation;
	createAnnotation(arg1 : HighlightSeverity, arg2 : TextRange, arg3 : string, arg4 : string) : Annotation;
	getCurrentAnnotationSession() : AnnotationSession;
	isBatchMode() : boolean;
}

export = AnnotationHolder
