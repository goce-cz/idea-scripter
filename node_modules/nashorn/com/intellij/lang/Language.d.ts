import Collection = require('nashorn/java/util/Collection');
import LanguageFileType = require('nashorn/com/intellij/openapi/fileTypes/LanguageFileType');
import List = require('nashorn/java/util/List');
import Class = require('nashorn/java/lang/Class');
import UserDataHolderBase = require('nashorn/com/intellij/openapi/util/UserDataHolderBase');

declare class Language {
	static ANY : Language;
	static registeredLanguages : Collection<Language>;
	mimeTypes : string[];
	iD : string;
	associatedFileType : LanguageFileType;
	baseLanguage : Language;
	displayName : string;
	caseSensitive : boolean;
	dialects : List<Language>;
	static getRegisteredLanguages() : Collection<Language>;
	static findInstance<T extends Language>(arg1 : Class<T>) : T;
	static findInstancesByMimeType(arg1 : string) : Collection<Language>;
	getMimeTypes() : string[];
	getID() : string;
	getAssociatedFileType() : LanguageFileType;
	getBaseLanguage() : Language;
	getDisplayName() : string;
	is(arg1 : Language) : boolean;
	isCaseSensitive() : boolean;
	isKindOf(arg1 : Language) : boolean;
	isKindOf(arg1 : string) : boolean;
	getDialects() : List<Language>;
	static findLanguageByID(arg1 : string) : Language;
}


declare interface Language extends UserDataHolderBase {}
export = Language
