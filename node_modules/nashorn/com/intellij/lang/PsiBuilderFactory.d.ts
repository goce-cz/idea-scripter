import Object = require('nashorn/java/lang/Object');
import Project = require('nashorn/com/intellij/openapi/project/Project');
import ASTNode = require('nashorn/com/intellij/lang/ASTNode');
import PsiBuilder = require('nashorn/com/intellij/lang/PsiBuilder');
import LighterLazyParseableNode = require('nashorn/com/intellij/lang/LighterLazyParseableNode');
import Lexer = require('nashorn/com/intellij/lexer/Lexer');
import Language = require('nashorn/com/intellij/lang/Language');
import CharSequence = require('nashorn/java/lang/CharSequence');
import ParserDefinition = require('nashorn/com/intellij/lang/ParserDefinition');

declare class PsiBuilderFactory extends Object {
	static instance : PsiBuilderFactory;
	constructor();
	static getInstance() : PsiBuilderFactory;
	createBuilder(arg1 : Project, arg2 : ASTNode) : PsiBuilder;
	createBuilder(arg1 : Project, arg2 : LighterLazyParseableNode) : PsiBuilder;
	createBuilder(arg1 : Project, arg2 : ASTNode, arg3 : Lexer, arg4 : Language, arg5 : CharSequence) : PsiBuilder;
	createBuilder(arg1 : Project, arg2 : LighterLazyParseableNode, arg3 : Lexer, arg4 : Language, arg5 : CharSequence) : PsiBuilder;
	createBuilder(arg1 : ParserDefinition, arg2 : Lexer, arg3 : CharSequence) : PsiBuilder;
}

export = PsiBuilderFactory
