import JsonElement = require('nashorn/com/google/gson/JsonElement');
import Object = require('nashorn/java/lang/Object');
import Set = require('nashorn/java/util/Set');
import Map = require('nashorn/java/util/Map');
import JsonPrimitive = require('nashorn/com/google/gson/JsonPrimitive');
import JsonArray = require('nashorn/com/google/gson/JsonArray');

declare class JsonObject {
	constructor();
	add(arg1 : string, arg2 : JsonElement) : void;
	remove(arg1 : string) : JsonElement;
	addProperty(arg1 : string, arg2 : string) : void;
	addProperty(arg1 : string, arg2 : number) : void;
	addProperty(arg1 : string, arg2 : boolean) : void;
	addProperty(arg1 : string, arg2 : string) : void;
	createJsonElement(arg1 : Object) : JsonElement;
	entrySet() : Set<Map.Entry<string, JsonElement>>;
	has(arg1 : string) : boolean;
	get(arg1 : string) : JsonElement;
	getAsJsonPrimitive(arg1 : string) : JsonPrimitive;
	getAsJsonArray(arg1 : string) : JsonArray;
	getAsJsonObject(arg1 : string) : JsonObject;
}


declare interface JsonObject extends JsonElement {}
export = JsonObject
