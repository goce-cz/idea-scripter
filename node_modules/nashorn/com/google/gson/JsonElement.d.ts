import Object = require('nashorn/java/lang/Object');
import JsonObject = require('nashorn/com/google/gson/JsonObject');
import JsonArray = require('nashorn/com/google/gson/JsonArray');
import JsonPrimitive = require('nashorn/com/google/gson/JsonPrimitive');
import JsonNull = require('nashorn/com/google/gson/JsonNull');

declare class JsonElement extends Object {
	jsonArray : boolean;
	jsonObject : boolean;
	jsonPrimitive : boolean;
	jsonNull : boolean;
	asJsonObject : JsonObject;
	asJsonArray : JsonArray;
	asJsonPrimitive : JsonPrimitive;
	asJsonNull : JsonNull;
	asBoolean : boolean;
	asNumber : number;
	asString : string;
	asDouble : number;
	asFloat : number;
	asLong : number;
	asInt : number;
	asByte : number;
	asCharacter : string;
	asBigDecimal : number;
	asBigInteger : number;
	asShort : number;
	constructor();
	deepCopy() : JsonElement;
	isJsonArray() : boolean;
	isJsonObject() : boolean;
	isJsonPrimitive() : boolean;
	isJsonNull() : boolean;
	getAsJsonObject() : JsonObject;
	getAsJsonArray() : JsonArray;
	getAsJsonPrimitive() : JsonPrimitive;
	getAsJsonNull() : JsonNull;
	getAsBoolean() : boolean;
	getAsBooleanWrapper() : boolean;
	getAsNumber() : number;
	getAsString() : string;
	getAsDouble() : number;
	getAsFloat() : number;
	getAsLong() : number;
	getAsInt() : number;
	getAsByte() : number;
	getAsCharacter() : string;
	getAsBigDecimal() : number;
	getAsBigInteger() : number;
	getAsShort() : number;
}

export = JsonElement
