import Object = require('nashorn/java/lang/Object');
import Test = require('nashorn/junit/framework/Test');
import Throwable = require('nashorn/java/lang/Throwable');
import AssertionFailedError = require('nashorn/junit/framework/AssertionFailedError');
import TestListener = require('nashorn/junit/framework/TestListener');
import List = require('nashorn/java/util/List');
import Enumeration = require('nashorn/java/util/Enumeration');
import TestFailure = require('nashorn/junit/framework/TestFailure');
import TestCase = require('nashorn/junit/framework/TestCase');
import Protectable = require('nashorn/junit/framework/Protectable');

declare class TestResult extends Object {
	constructor();
	addError(arg1 : Test, arg2 : Throwable) : void;
	addFailure(arg1 : Test, arg2 : AssertionFailedError) : void;
	addListener(arg1 : TestListener) : void;
	removeListener(arg1 : TestListener) : void;
	cloneListeners() : List<TestListener>;
	endTest(arg1 : Test) : void;
	errorCount() : number;
	errors() : Enumeration<TestFailure>;
	failureCount() : number;
	failures() : Enumeration<TestFailure>;
	run(arg1 : TestCase) : void;
	runCount() : number;
	runProtected(arg1 : Test, arg2 : Protectable) : void;
	shouldStop() : boolean;
	startTest(arg1 : Test) : void;
	stop() : void;
	wasSuccessful() : boolean;
}

export = TestResult
