import Writer = require('nashorn/java/io/Writer');
import OutputStream = require('nashorn/java/io/OutputStream');
import File = require('nashorn/java/io/File');
import Charset = require('nashorn/java/nio/charset/Charset');
import Object = require('nashorn/java/lang/Object');
import Locale = require('nashorn/java/util/Locale');

declare class PrintWriter {
	constructor(arg1 : Writer);
	constructor(arg1 : Writer, arg2 : boolean);
	constructor(arg1 : OutputStream);
	constructor(arg1 : OutputStream, arg2 : boolean);
	constructor(arg1 : string);
	constructor(arg1 : string, arg2 : string);
	constructor(arg1 : File);
	constructor(arg1 : File, arg2 : string);
	static toCharset(arg1 : string) : Charset;
	ensureOpen() : void;
	checkError() : boolean;
	setError() : void;
	clearError() : void;
	newLine() : void;
	print(arg1 : boolean) : void;
	print(arg1 : string) : void;
	print(arg1 : number) : void;
	print(arg1 : number) : void;
	print(arg1 : number) : void;
	print(arg1 : number) : void;
	print(arg1 : string[]) : void;
	print(arg1 : string) : void;
	print(arg1 : Object) : void;
	println() : void;
	println(arg1 : boolean) : void;
	println(arg1 : string) : void;
	println(arg1 : number) : void;
	println(arg1 : number) : void;
	println(arg1 : number) : void;
	println(arg1 : number) : void;
	println(arg1 : string[]) : void;
	println(arg1 : string) : void;
	println(arg1 : Object) : void;
	printf(arg1 : string, arg2 : Object[]) : PrintWriter;
	printf(arg1 : Locale, arg2 : string, arg3 : Object[]) : PrintWriter;
	format(arg1 : string, arg2 : Object[]) : PrintWriter;
	format(arg1 : Locale, arg2 : string, arg3 : Object[]) : PrintWriter;
}


declare interface PrintWriter extends Writer {}
export = PrintWriter
