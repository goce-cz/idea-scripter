import Object = require('nashorn/java/lang/Object');

declare class CoderResult extends Object {
	static UNDERFLOW : CoderResult;
	static OVERFLOW : CoderResult;
	underflow : boolean;
	overflow : boolean;
	error : boolean;
	malformed : boolean;
	unmappable : boolean;
	isUnderflow() : boolean;
	isOverflow() : boolean;
	isError() : boolean;
	isMalformed() : boolean;
	isUnmappable() : boolean;
	length() : number;
	static malformedForLength(arg1 : number) : CoderResult;
	static unmappableForLength(arg1 : number) : CoderResult;
	throwException() : void;
}


declare module CoderResult {
	class Cache extends Object {
		create(arg1 : number) : CoderResult;
		get(arg1 : number) : CoderResult;
	}
}

export = CoderResult
