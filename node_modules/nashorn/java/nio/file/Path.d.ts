import FileSystem = require('nashorn/java/nio/file/FileSystem');
import URI = require('nashorn/java/net/URI');
import LinkOption = require('nashorn/java/nio/file/LinkOption');
import File = require('nashorn/java/io/File');
import Comparable = require('nashorn/java/lang/Comparable');
import Iterable = require('nashorn/java/lang/Iterable');
import Watchable = require('nashorn/java/nio/file/Watchable');

declare class Path {
	fileSystem : FileSystem;
	absolute : boolean;
	root : Path;
	fileName : Path;
	parent : Path;
	nameCount : number;
	getFileSystem() : FileSystem;
	isAbsolute() : boolean;
	getRoot() : Path;
	getFileName() : Path;
	getParent() : Path;
	getNameCount() : number;
	getName(arg1 : number) : Path;
	subpath(arg1 : number, arg2 : number) : Path;
	startsWith(arg1 : Path) : boolean;
	startsWith(arg1 : string) : boolean;
	endsWith(arg1 : Path) : boolean;
	endsWith(arg1 : string) : boolean;
	normalize() : Path;
	resolve(arg1 : Path) : Path;
	resolve(arg1 : string) : Path;
	resolveSibling(arg1 : Path) : Path;
	resolveSibling(arg1 : string) : Path;
	relativize(arg1 : Path) : Path;
	toUri() : URI;
	toAbsolutePath() : Path;
	toRealPath(arg1 : LinkOption[]) : Path;
	toFile() : File;
}


declare interface Path extends Comparable<Path>, Iterable<Path>, Watchable {}
export = Path
