import CharacterIterator = require('nashorn/java/text/CharacterIterator');
import Locale = require('nashorn/java/util/Locale');
import LocaleProviderAdapter = require('nashorn/sun/util/locale/provider/LocaleProviderAdapter');
import Cloneable = require('nashorn/java/lang/Cloneable');
import Object = require('nashorn/java/lang/Object');

declare class BreakIterator {
	static DONE : number;
	text : CharacterIterator;
	static wordInstance : BreakIterator;
	static lineInstance : BreakIterator;
	static characterInstance : BreakIterator;
	static sentenceInstance : BreakIterator;
	static availableLocales : Locale[];
	first() : number;
	last() : number;
	next(arg1 : number) : number;
	next() : number;
	previous() : number;
	following(arg1 : number) : number;
	preceding(arg1 : number) : number;
	isBoundary(arg1 : number) : boolean;
	current() : number;
	getText() : CharacterIterator;
	setText(arg1 : string) : void;
	setText(arg1 : CharacterIterator) : void;
	static getWordInstance() : BreakIterator;
	static getWordInstance(arg1 : Locale) : BreakIterator;
	static getLineInstance() : BreakIterator;
	static getLineInstance(arg1 : Locale) : BreakIterator;
	static getCharacterInstance() : BreakIterator;
	static getCharacterInstance(arg1 : Locale) : BreakIterator;
	static getSentenceInstance() : BreakIterator;
	static getSentenceInstance(arg1 : Locale) : BreakIterator;
	static getBreakInstance(arg1 : Locale, arg2 : number) : BreakIterator;
	static createBreakInstance(arg1 : Locale, arg2 : number) : BreakIterator;
	static createBreakInstance(arg1 : LocaleProviderAdapter, arg2 : Locale, arg3 : number) : BreakIterator;
	static getAvailableLocales() : Locale[];
}


declare interface BreakIterator extends Cloneable {}

declare module BreakIterator {
	class BreakIteratorCache extends Object {
		getLocale() : Locale;
		createBreakInstance() : BreakIterator;
	}
}

export = BreakIterator
