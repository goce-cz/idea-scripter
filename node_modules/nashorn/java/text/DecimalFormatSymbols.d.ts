import Locale = require('nashorn/java/util/Locale');
import Currency = require('nashorn/java/util/Currency');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import Cloneable = require('nashorn/java/lang/Cloneable');
import Serializable = require('nashorn/java/io/Serializable');

declare class DecimalFormatSymbols {
	static availableLocales : Locale[];
	static instance : DecimalFormatSymbols;
	zeroDigit : string;
	groupingSeparator : string;
	decimalSeparator : string;
	perMill : string;
	percent : string;
	digit : string;
	patternSeparator : string;
	infinity : string;
	naN : string;
	minusSign : string;
	currencySymbol : string;
	internationalCurrencySymbol : string;
	currency : Currency;
	monetaryDecimalSeparator : string;
	exponentSeparator : string;
	constructor();
	constructor(arg1 : Locale);
	static getAvailableLocales() : Locale[];
	static getInstance() : DecimalFormatSymbols;
	static getInstance(arg1 : Locale) : DecimalFormatSymbols;
	getZeroDigit() : string;
	setZeroDigit(arg1 : string) : void;
	getGroupingSeparator() : string;
	setGroupingSeparator(arg1 : string) : void;
	getDecimalSeparator() : string;
	setDecimalSeparator(arg1 : string) : void;
	getPerMill() : string;
	setPerMill(arg1 : string) : void;
	getPercent() : string;
	setPercent(arg1 : string) : void;
	getDigit() : string;
	setDigit(arg1 : string) : void;
	getPatternSeparator() : string;
	setPatternSeparator(arg1 : string) : void;
	getInfinity() : string;
	setInfinity(arg1 : string) : void;
	getNaN() : string;
	setNaN(arg1 : string) : void;
	getMinusSign() : string;
	setMinusSign(arg1 : string) : void;
	getCurrencySymbol() : string;
	setCurrencySymbol(arg1 : string) : void;
	getInternationalCurrencySymbol() : string;
	setInternationalCurrencySymbol(arg1 : string) : void;
	getCurrency() : Currency;
	setCurrency(arg1 : Currency) : void;
	getMonetaryDecimalSeparator() : string;
	setMonetaryDecimalSeparator(arg1 : string) : void;
	getExponentialSymbol() : string;
	getExponentSeparator() : string;
	setExponentialSymbol(arg1 : string) : void;
	setExponentSeparator(arg1 : string) : void;
	initialize(arg1 : Locale) : void;
	readObject(arg1 : ObjectInputStream) : void;
}


declare interface DecimalFormatSymbols extends Cloneable, Serializable {}
export = DecimalFormatSymbols
