import Locale = require('nashorn/java/util/Locale');
import Calendar = require('nashorn/java/util/Calendar');
import NumberFormat = require('nashorn/java/text/NumberFormat');
import TimeZone = require('nashorn/java/util/TimeZone');
import Date = require('nashorn/java/util/Date');
import StringBuffer = require('nashorn/java/lang/StringBuffer');
import FieldPosition = require('nashorn/java/text/FieldPosition');
import ParsePosition = require('nashorn/java/text/ParsePosition');
import LocaleProviderAdapter = require('nashorn/sun/util/locale/provider/LocaleProviderAdapter');
import Format = require('nashorn/java/text/Format');

declare class DateFormat {
	static ERA_FIELD : number;
	static YEAR_FIELD : number;
	static MONTH_FIELD : number;
	static DATE_FIELD : number;
	static HOUR_OF_DAY1_FIELD : number;
	static HOUR_OF_DAY0_FIELD : number;
	static MINUTE_FIELD : number;
	static SECOND_FIELD : number;
	static MILLISECOND_FIELD : number;
	static DAY_OF_WEEK_FIELD : number;
	static DAY_OF_YEAR_FIELD : number;
	static DAY_OF_WEEK_IN_MONTH_FIELD : number;
	static WEEK_OF_YEAR_FIELD : number;
	static WEEK_OF_MONTH_FIELD : number;
	static AM_PM_FIELD : number;
	static HOUR1_FIELD : number;
	static HOUR0_FIELD : number;
	static TIMEZONE_FIELD : number;
	static FULL : number;
	static LONG : number;
	static MEDIUM : number;
	static SHORT : number;
	static DEFAULT : number;
	static timeInstance : DateFormat;
	static dateInstance : DateFormat;
	static dateTimeInstance : DateFormat;
	static instance : DateFormat;
	static availableLocales : Locale[];
	calendar : Calendar;
	numberFormat : NumberFormat;
	timeZone : TimeZone;
	lenient : boolean;
	format(arg1 : Date, arg2 : StringBuffer, arg3 : FieldPosition) : StringBuffer;
	format(arg1 : Date) : string;
	parse(arg1 : string) : Date;
	parse(arg1 : string, arg2 : ParsePosition) : Date;
	static getTimeInstance() : DateFormat;
	static getTimeInstance(arg1 : number) : DateFormat;
	static getTimeInstance(arg1 : number, arg2 : Locale) : DateFormat;
	static getDateInstance() : DateFormat;
	static getDateInstance(arg1 : number) : DateFormat;
	static getDateInstance(arg1 : number, arg2 : Locale) : DateFormat;
	static getDateTimeInstance() : DateFormat;
	static getDateTimeInstance(arg1 : number, arg2 : number) : DateFormat;
	static getDateTimeInstance(arg1 : number, arg2 : number, arg3 : Locale) : DateFormat;
	static getInstance() : DateFormat;
	static getAvailableLocales() : Locale[];
	setCalendar(arg1 : Calendar) : void;
	getCalendar() : Calendar;
	setNumberFormat(arg1 : NumberFormat) : void;
	getNumberFormat() : NumberFormat;
	setTimeZone(arg1 : TimeZone) : void;
	getTimeZone() : TimeZone;
	setLenient(arg1 : boolean) : void;
	isLenient() : boolean;
	static get(arg1 : number, arg2 : number, arg3 : number, arg4 : Locale) : DateFormat;
	static get(arg1 : LocaleProviderAdapter, arg2 : number, arg3 : number, arg4 : Locale) : DateFormat;
}


declare interface DateFormat extends Format {}

declare module DateFormat {
	class Field {
		static ERA : DateFormat.Field;
		static YEAR : DateFormat.Field;
		static MONTH : DateFormat.Field;
		static DAY_OF_MONTH : DateFormat.Field;
		static HOUR_OF_DAY1 : DateFormat.Field;
		static HOUR_OF_DAY0 : DateFormat.Field;
		static MINUTE : DateFormat.Field;
		static SECOND : DateFormat.Field;
		static MILLISECOND : DateFormat.Field;
		static DAY_OF_WEEK : DateFormat.Field;
		static DAY_OF_YEAR : DateFormat.Field;
		static DAY_OF_WEEK_IN_MONTH : DateFormat.Field;
		static WEEK_OF_YEAR : DateFormat.Field;
		static WEEK_OF_MONTH : DateFormat.Field;
		static AM_PM : DateFormat.Field;
		static HOUR1 : DateFormat.Field;
		static HOUR0 : DateFormat.Field;
		static TIME_ZONE : DateFormat.Field;
		calendarField : number;
		static ofCalendarField(arg1 : number) : DateFormat.Field;
		getCalendarField() : number;
	}


	interface Field extends Format.Field {}}

export = DateFormat
