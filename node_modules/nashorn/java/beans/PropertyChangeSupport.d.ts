import PropertyChangeListener = require('nashorn/java/beans/PropertyChangeListener');
import Object = require('nashorn/java/lang/Object');
import PropertyChangeEvent = require('nashorn/java/beans/PropertyChangeEvent');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import Serializable = require('nashorn/java/io/Serializable');
import ChangeListenerMap = require('nashorn/java/beans/ChangeListenerMap');

declare class PropertyChangeSupport {
	propertyChangeListeners : PropertyChangeListener[];
	constructor(arg1 : Object);
	addPropertyChangeListener(arg1 : PropertyChangeListener) : void;
	removePropertyChangeListener(arg1 : PropertyChangeListener) : void;
	getPropertyChangeListeners() : PropertyChangeListener[];
	addPropertyChangeListener(arg1 : string, arg2 : PropertyChangeListener) : void;
	removePropertyChangeListener(arg1 : string, arg2 : PropertyChangeListener) : void;
	getPropertyChangeListeners(arg1 : string) : PropertyChangeListener[];
	firePropertyChange(arg1 : string, arg2 : Object, arg3 : Object) : void;
	firePropertyChange(arg1 : string, arg2 : number, arg3 : number) : void;
	firePropertyChange(arg1 : string, arg2 : boolean, arg3 : boolean) : void;
	firePropertyChange(arg1 : PropertyChangeEvent) : void;
	static fire(arg1 : PropertyChangeListener[], arg2 : PropertyChangeEvent) : void;
	fireIndexedPropertyChange(arg1 : string, arg2 : number, arg3 : Object, arg4 : Object) : void;
	fireIndexedPropertyChange(arg1 : string, arg2 : number, arg3 : number, arg4 : number) : void;
	fireIndexedPropertyChange(arg1 : string, arg2 : number, arg3 : boolean, arg4 : boolean) : void;
	hasListeners(arg1 : string) : boolean;
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
}


declare interface PropertyChangeSupport extends Serializable {}

declare module PropertyChangeSupport {
	class PropertyChangeListenerMap {
	}


	interface PropertyChangeListenerMap extends ChangeListenerMap<PropertyChangeListener> {}}

export = PropertyChangeSupport
