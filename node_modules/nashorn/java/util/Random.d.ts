import IntStream = require('nashorn/java/util/stream/IntStream');
import LongStream = require('nashorn/java/util/stream/LongStream');
import DoubleStream = require('nashorn/java/util/stream/DoubleStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import Serializable = require('nashorn/java/io/Serializable');
import Spliterator = require('nashorn/java/util/Spliterator');

declare class Random {
	constructor();
	constructor(arg1 : number);
	static seedUniquifier() : number;
	static initialScramble(arg1 : number) : number;
	setSeed(arg1 : number) : void;
	next(arg1 : number) : number;
	nextBytes(arg1 : number[]) : void;
	internalNextLong(arg1 : number, arg2 : number) : number;
	internalNextInt(arg1 : number, arg2 : number) : number;
	internalNextDouble(arg1 : number, arg2 : number) : number;
	nextInt() : number;
	nextInt(arg1 : number) : number;
	nextLong() : number;
	nextBoolean() : boolean;
	nextFloat() : number;
	nextDouble() : number;
	nextGaussian() : number;
	ints(arg1 : number) : IntStream;
	ints() : IntStream;
	ints(arg1 : number, arg2 : number, arg3 : number) : IntStream;
	ints(arg1 : number, arg2 : number) : IntStream;
	longs(arg1 : number) : LongStream;
	longs() : LongStream;
	longs(arg1 : number, arg2 : number, arg3 : number) : LongStream;
	longs(arg1 : number, arg2 : number) : LongStream;
	doubles(arg1 : number) : DoubleStream;
	doubles() : DoubleStream;
	doubles(arg1 : number, arg2 : number, arg3 : number) : DoubleStream;
	doubles(arg1 : number, arg2 : number) : DoubleStream;
	readObject(arg1 : ObjectInputStream) : void;
	writeObject(arg1 : ObjectOutputStream) : void;
	resetSeed(arg1 : number) : void;
}


declare interface Random extends Serializable {}

declare module Random {
	class RandomDoublesSpliterator {
	}


	interface RandomDoublesSpliterator extends Spliterator.OfDouble {}	class RandomIntsSpliterator {
	}


	interface RandomIntsSpliterator extends Spliterator.OfInt {}	class RandomLongsSpliterator {
	}


	interface RandomLongsSpliterator extends Spliterator.OfLong {}}

export = Random
