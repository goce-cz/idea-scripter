import Runnable = require('nashorn/java/lang/Runnable');
import RunnableFuture = require('nashorn/java/util/concurrent/RunnableFuture');
import Callable = require('nashorn/java/util/concurrent/Callable');
import Collection = require('nashorn/java/util/Collection');
import ExecutorService = require('nashorn/java/util/concurrent/ExecutorService');

declare class AbstractExecutorService {
	constructor();
	newTaskFor<T>(arg1 : Runnable, arg2 : T) : RunnableFuture<T>;
	newTaskFor<T>(arg1 : Callable<T>) : RunnableFuture<T>;
	doInvokeAny<T>(arg1 : Collection<Callable<T>>, arg2 : boolean, arg3 : number) : T;
}


declare interface AbstractExecutorService extends ExecutorService {}
export = AbstractExecutorService
