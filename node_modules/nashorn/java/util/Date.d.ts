import StringBuilder = require('nashorn/java/lang/StringBuilder');
import BaseCalendar = require('nashorn/sun/util/calendar/BaseCalendar');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import Instant = require('nashorn/java/time/Instant');
import Serializable = require('nashorn/java/io/Serializable');
import Cloneable = require('nashorn/java/lang/Cloneable');
import Comparable = require('nashorn/java/lang/Comparable');

declare class Date {
	year : number;
	month : number;
	date : number;
	day : number;
	hours : number;
	minutes : number;
	seconds : number;
	time : number;
	timezoneOffset : number;
	constructor();
	constructor(arg1 : number);
	constructor(arg1 : number, arg2 : number, arg3 : number);
	constructor(arg1 : number, arg2 : number, arg3 : number, arg4 : number, arg5 : number);
	constructor(arg1 : number, arg2 : number, arg3 : number, arg4 : number, arg5 : number, arg6 : number);
	constructor(arg1 : string);
	static UTC(arg1 : number, arg2 : number, arg3 : number, arg4 : number, arg5 : number, arg6 : number) : number;
	static parse(arg1 : string) : number;
	getYear() : number;
	setYear(arg1 : number) : void;
	getMonth() : number;
	setMonth(arg1 : number) : void;
	getDate() : number;
	setDate(arg1 : number) : void;
	getDay() : number;
	getHours() : number;
	setHours(arg1 : number) : void;
	getMinutes() : number;
	setMinutes(arg1 : number) : void;
	getSeconds() : number;
	setSeconds(arg1 : number) : void;
	getTime() : number;
	getTimeImpl() : number;
	setTime(arg1 : number) : void;
	before(arg1 : Date) : boolean;
	after(arg1 : Date) : boolean;
	static getMillisOf(arg1 : Date) : number;
	static convertToAbbr(arg1 : StringBuilder, arg2 : string) : StringBuilder;
	toLocaleString() : string;
	toGMTString() : string;
	getTimezoneOffset() : number;
	getCalendarDate() : BaseCalendar.Date;
	normalize() : BaseCalendar.Date;
	normalize(arg1 : BaseCalendar.Date) : BaseCalendar.Date;
	static getCalendarSystem(arg1 : number) : BaseCalendar;
	static getCalendarSystem(arg1 : number) : BaseCalendar;
	static getCalendarSystem(arg1 : BaseCalendar.Date) : BaseCalendar;
	static getJulianCalendar() : BaseCalendar;
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
	static from(arg1 : Instant) : Date;
	toInstant() : Instant;
}


declare interface Date extends Serializable, Cloneable, Comparable<Date> {}
export = Date
