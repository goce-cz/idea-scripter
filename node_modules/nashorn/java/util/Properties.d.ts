import Object = require('nashorn/java/lang/Object');
import Reader = require('nashorn/java/io/Reader');
import InputStream = require('nashorn/java/io/InputStream');
import BufferedWriter = require('nashorn/java/io/BufferedWriter');
import OutputStream = require('nashorn/java/io/OutputStream');
import Writer = require('nashorn/java/io/Writer');
import Enumeration = require('nashorn/java/util/Enumeration');
import Set = require('nashorn/java/util/Set');
import PrintStream = require('nashorn/java/io/PrintStream');
import PrintWriter = require('nashorn/java/io/PrintWriter');
import Hashtable = require('nashorn/java/util/Hashtable');
import ClassLoader = require('nashorn/java/lang/ClassLoader');
import XmlPropertiesProvider = require('nashorn/sun/util/spi/XmlPropertiesProvider');

declare class Properties {
	constructor();
	constructor(arg1 : Properties);
	setProperty(arg1 : string, arg2 : string) : Object;
	load(arg1 : Reader) : void;
	load(arg1 : InputStream) : void;
	load0(arg1 : Properties.LineReader) : void;
	loadConvert(arg1 : string[], arg2 : number, arg3 : number, arg4 : string[]) : string;
	saveConvert(arg1 : string, arg2 : boolean, arg3 : boolean) : string;
	static writeComments(arg1 : BufferedWriter, arg2 : string) : void;
	save(arg1 : OutputStream, arg2 : string) : void;
	store(arg1 : Writer, arg2 : string) : void;
	store(arg1 : OutputStream, arg2 : string) : void;
	store0(arg1 : BufferedWriter, arg2 : string, arg3 : boolean) : void;
	loadFromXML(arg1 : InputStream) : void;
	storeToXML(arg1 : OutputStream, arg2 : string) : void;
	storeToXML(arg1 : OutputStream, arg2 : string, arg3 : string) : void;
	getProperty(arg1 : string) : string;
	getProperty(arg1 : string, arg2 : string) : string;
	propertyNames() : Enumeration<any>;
	stringPropertyNames() : Set<string>;
	list(arg1 : PrintStream) : void;
	list(arg1 : PrintWriter) : void;
	enumerate(arg1 : Hashtable<string, Object>) : void;
	enumerateStringProperties(arg1 : Hashtable<string, string>) : void;
	static toHex(arg1 : number) : string;
}


declare interface Properties extends Hashtable<Object, Object> {}

declare module Properties {
	class LineReader extends Object {
		constructor(arg1 : InputStream);
		constructor(arg1 : Reader);
		readLine() : number;
	}
	class XmlSupport extends Object {
		static loadProviderFromProperty(arg1 : ClassLoader) : XmlPropertiesProvider;
		static loadProviderAsService(arg1 : ClassLoader) : XmlPropertiesProvider;
		static loadProvider() : XmlPropertiesProvider;
		static load(arg1 : Properties, arg2 : InputStream) : void;
		static save(arg1 : Properties, arg2 : OutputStream, arg3 : string, arg4 : string) : void;
	}
}

export = Properties
