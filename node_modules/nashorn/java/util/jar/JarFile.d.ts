import Manifest = require('nashorn/java/util/jar/Manifest');
import File = require('nashorn/java/io/File');
import JarEntry = require('nashorn/java/util/jar/JarEntry');
import ZipEntry = require('nashorn/java/util/zip/ZipEntry');
import CodeSource = require('nashorn/java/security/CodeSource');
import Enumeration = require('nashorn/java/util/Enumeration');
import URL = require('nashorn/java/net/URL');
import List = require('nashorn/java/util/List');
import Object = require('nashorn/java/lang/Object');
import ZipFile = require('nashorn/java/util/zip/ZipFile');
import Iterator = require('nashorn/java/util/Iterator');
import Attributes = require('nashorn/java/util/jar/Attributes');
import Certificate = require('nashorn/java/security/cert/Certificate');
import CodeSigner = require('nashorn/java/security/CodeSigner');

declare class JarFile {
	static MANIFEST_NAME : string;
	manifest : Manifest;
	constructor(arg1 : string);
	constructor(arg1 : string, arg2 : boolean);
	constructor(arg1 : File);
	constructor(arg1 : File, arg2 : boolean);
	constructor(arg1 : File, arg2 : boolean, arg3 : number);
	getManifest() : Manifest;
	getManifestFromReference() : Manifest;
	getMetaInfEntryNames() : string[];
	getJarEntry(arg1 : string) : JarEntry;
	maybeInstantiateVerifier() : void;
	initializeVerifier() : void;
	getBytes(arg1 : ZipEntry) : number[];
	getManEntry() : JarEntry;
	hasClassPathAttribute() : boolean;
	match(arg1 : string[], arg2 : number[], arg3 : number[], arg4 : number[]) : boolean;
	checkForSpecialAttributes() : void;
	isKnownNotToHaveSpecialAttributes() : boolean;
	ensureInitialization() : void;
	newEntry(arg1 : ZipEntry) : JarEntry;
	entryNames(arg1 : CodeSource[]) : Enumeration<string>;
	entries2() : Enumeration<JarEntry>;
	getCodeSources(arg1 : URL) : CodeSource[];
	unsignedEntryNames() : Enumeration<string>;
	getCodeSource(arg1 : URL, arg2 : string) : CodeSource;
	setEagerValidation(arg1 : boolean) : void;
	getManifestDigests() : List<Object>;
}


declare interface JarFile extends ZipFile {}

declare module JarFile {
	class JarEntryIterator {
	}


	interface JarEntryIterator extends Enumeration<JarEntry>, Iterator<JarEntry> {}	class JarFileEntry {
		attributes : Attributes;
		certificates : Certificate[];
		codeSigners : CodeSigner[];
	}


	interface JarFileEntry extends JarEntry {}}

export = JarFile
