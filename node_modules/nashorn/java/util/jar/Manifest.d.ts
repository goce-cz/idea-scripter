import Attributes = require('nashorn/java/util/jar/Attributes');
import Map = require('nashorn/java/util/Map');
import InputStream = require('nashorn/java/io/InputStream');
import OutputStream = require('nashorn/java/io/OutputStream');
import StringBuffer = require('nashorn/java/lang/StringBuffer');
import Cloneable = require('nashorn/java/lang/Cloneable');
import FilterInputStream = require('nashorn/java/io/FilterInputStream');

declare class Manifest {
	mainAttributes : Attributes;
	entries : Map<string, Attributes>;
	constructor();
	constructor(arg1 : InputStream);
	constructor(arg1 : Manifest);
	getMainAttributes() : Attributes;
	getEntries() : Map<string, Attributes>;
	getAttributes(arg1 : string) : Attributes;
	clear() : void;
	write(arg1 : OutputStream) : void;
	static make72Safe(arg1 : StringBuffer) : void;
	read(arg1 : InputStream) : void;
	parseName(arg1 : number[], arg2 : number) : string;
	toLower(arg1 : number) : number;
}


declare interface Manifest extends Cloneable {}

declare module Manifest {
	class FastInputStream {
		readLine(arg1 : number[], arg2 : number, arg3 : number) : number;
		peek() : number;
		readLine(arg1 : number[]) : number;
		fill() : void;
	}


	interface FastInputStream extends FilterInputStream {}}

export = Manifest
