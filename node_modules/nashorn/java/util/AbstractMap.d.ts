import Object = require('nashorn/java/lang/Object');
import Map = require('nashorn/java/util/Map');
import Serializable = require('nashorn/java/io/Serializable');

declare class AbstractMap<K, V> {
	empty : boolean;
	static eq(arg1 : Object, arg2 : Object) : boolean;
}


declare interface AbstractMap<K, V> extends Map<K, V> {}

declare module AbstractMap {
	class SimpleEntry<K, V> {
		key : K;
		value : V;
		constructor(arg1 : K, arg2 : V);
		constructor(arg1 : Map.Entry<K, V>);
	}


	interface SimpleEntry<K, V> extends Map.Entry<K, V>, Serializable {}	class SimpleImmutableEntry<K, V> {
		key : K;
		value : V;
		constructor(arg1 : K, arg2 : V);
		constructor(arg1 : Map.Entry<K, V>);
	}


	interface SimpleImmutableEntry<K, V> extends Map.Entry<K, V>, Serializable {}}

export = AbstractMap
