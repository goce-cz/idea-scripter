import FileTime = require('nashorn/java/nio/file/attribute/FileTime');
import ZipConstants = require('nashorn/java/util/zip/ZipConstants');
import Cloneable = require('nashorn/java/lang/Cloneable');

declare class ZipEntry {
	static STORED : number;
	static DEFLATED : number;
	name : string;
	time : number;
	lastModifiedTime : FileTime;
	lastAccessTime : FileTime;
	creationTime : FileTime;
	size : number;
	compressedSize : number;
	crc : number;
	method : number;
	extra : number[];
	comment : string;
	directory : boolean;
	constructor(arg1 : string);
	constructor(arg1 : ZipEntry);
	getName() : string;
	setTime(arg1 : number) : void;
	getTime() : number;
	setLastModifiedTime(arg1 : FileTime) : ZipEntry;
	getLastModifiedTime() : FileTime;
	setLastAccessTime(arg1 : FileTime) : ZipEntry;
	getLastAccessTime() : FileTime;
	setCreationTime(arg1 : FileTime) : ZipEntry;
	getCreationTime() : FileTime;
	setSize(arg1 : number) : void;
	getSize() : number;
	getCompressedSize() : number;
	setCompressedSize(arg1 : number) : void;
	setCrc(arg1 : number) : void;
	getCrc() : number;
	setMethod(arg1 : number) : void;
	getMethod() : number;
	setExtra(arg1 : number[]) : void;
	setExtra0(arg1 : number[], arg2 : boolean) : void;
	getExtra() : number[];
	setComment(arg1 : string) : void;
	getComment() : string;
	isDirectory() : boolean;
}


declare interface ZipEntry extends ZipConstants, Cloneable {}
export = ZipEntry
