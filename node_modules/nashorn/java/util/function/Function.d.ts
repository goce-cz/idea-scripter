import Object = require('nashorn/java/lang/Object');

declare class Function_interface<T, R> extends Object {
	apply(arg1 : T) : R;
	compose<V>(arg1 : Function<any, T>) : Function<V, R>;
	andThen<V>(arg1 : Function<any, V>) : Function<T, V>;
	static identity<T>() : Function<T, T>;
}


declare type Function<T, R> = Function_interface<T, R> | ((arg1 : T)=>R);
export = Function
