import Object = require('nashorn/java/lang/Object');
import Function = require('nashorn/java/util/function/Function');

declare class BiFunction_interface<T, U, R> extends Object {
	apply(arg1 : T, arg2 : U) : R;
	andThen<V>(arg1 : Function<any, V>) : BiFunction<T, U, V>;
}


declare type BiFunction<T, U, R> = BiFunction_interface<T, U, R> | ((arg1 : T, arg2 : U)=>R);
export = BiFunction
