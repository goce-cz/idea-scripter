import AbstractCollection = require('nashorn/java/util/AbstractCollection');
import List = require('nashorn/java/util/List');
import Iterator = require('nashorn/java/util/Iterator');
import ListIterator = require('nashorn/java/util/ListIterator');

declare class AbstractList<E> {
	removeRange(arg1 : number, arg2 : number) : void;
	rangeCheckForAdd(arg1 : number) : void;
	outOfBoundsMsg(arg1 : number) : string;
}


declare interface AbstractList<E> extends AbstractCollection<E>, List<E> {}

declare module AbstractList {
	class Itr {
		checkForComodification() : void;
	}


	interface Itr extends Iterator<E> {}	class ListItr {
	}


	interface ListItr extends AbstractList.Itr, ListIterator<E> {}}

export = AbstractList
