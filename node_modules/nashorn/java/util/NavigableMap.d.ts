import Map = require('nashorn/java/util/Map');
import NavigableSet = require('nashorn/java/util/NavigableSet');
import SortedMap = require('nashorn/java/util/SortedMap');

declare class NavigableMap<K, V> {
	lowerEntry(arg1 : K) : Map.Entry<K, V>;
	lowerKey(arg1 : K) : K;
	floorEntry(arg1 : K) : Map.Entry<K, V>;
	floorKey(arg1 : K) : K;
	ceilingEntry(arg1 : K) : Map.Entry<K, V>;
	ceilingKey(arg1 : K) : K;
	higherEntry(arg1 : K) : Map.Entry<K, V>;
	higherKey(arg1 : K) : K;
	firstEntry() : Map.Entry<K, V>;
	lastEntry() : Map.Entry<K, V>;
	pollFirstEntry() : Map.Entry<K, V>;
	pollLastEntry() : Map.Entry<K, V>;
	descendingMap() : NavigableMap<K, V>;
	navigableKeySet() : NavigableSet<K>;
	descendingKeySet() : NavigableSet<K>;
	subMap(arg1 : K, arg2 : boolean, arg3 : K, arg4 : boolean) : NavigableMap<K, V>;
	headMap(arg1 : K, arg2 : boolean) : NavigableMap<K, V>;
	tailMap(arg1 : K, arg2 : boolean) : NavigableMap<K, V>;
}


declare interface NavigableMap<K, V> extends SortedMap<K, V> {}
export = NavigableMap
