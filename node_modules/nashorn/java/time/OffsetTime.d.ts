import ZoneOffset = require('nashorn/java/time/ZoneOffset');
import ZoneId = require('nashorn/java/time/ZoneId');
import Clock = require('nashorn/java/time/Clock');
import LocalTime = require('nashorn/java/time/LocalTime');
import Instant = require('nashorn/java/time/Instant');
import TemporalAccessor = require('nashorn/java/time/temporal/TemporalAccessor');
import CharSequence = require('nashorn/java/lang/CharSequence');
import DateTimeFormatter = require('nashorn/java/time/format/DateTimeFormatter');
import TemporalUnit = require('nashorn/java/time/temporal/TemporalUnit');
import LocalDate = require('nashorn/java/time/LocalDate');
import OffsetDateTime = require('nashorn/java/time/OffsetDateTime');
import Object = require('nashorn/java/lang/Object');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import ObjectOutput = require('nashorn/java/io/ObjectOutput');
import ObjectInput = require('nashorn/java/io/ObjectInput');
import Temporal = require('nashorn/java/time/temporal/Temporal');
import TemporalAdjuster = require('nashorn/java/time/temporal/TemporalAdjuster');
import Comparable = require('nashorn/java/lang/Comparable');
import Serializable = require('nashorn/java/io/Serializable');

declare class OffsetTime {
	static MIN : OffsetTime;
	static MAX : OffsetTime;
	offset : ZoneOffset;
	hour : number;
	minute : number;
	second : number;
	nano : number;
	static now() : OffsetTime;
	static now(arg1 : ZoneId) : OffsetTime;
	static now(arg1 : Clock) : OffsetTime;
	static of(arg1 : LocalTime, arg2 : ZoneOffset) : OffsetTime;
	static of(arg1 : number, arg2 : number, arg3 : number, arg4 : number, arg5 : ZoneOffset) : OffsetTime;
	static ofInstant(arg1 : Instant, arg2 : ZoneId) : OffsetTime;
	static from(arg1 : TemporalAccessor) : OffsetTime;
	static parse(arg1 : CharSequence) : OffsetTime;
	static parse(arg1 : CharSequence, arg2 : DateTimeFormatter) : OffsetTime;
	with(arg1 : LocalTime, arg2 : ZoneOffset) : OffsetTime;
	getOffset() : ZoneOffset;
	withOffsetSameLocal(arg1 : ZoneOffset) : OffsetTime;
	withOffsetSameInstant(arg1 : ZoneOffset) : OffsetTime;
	toLocalTime() : LocalTime;
	getHour() : number;
	getMinute() : number;
	getSecond() : number;
	getNano() : number;
	withHour(arg1 : number) : OffsetTime;
	withMinute(arg1 : number) : OffsetTime;
	withSecond(arg1 : number) : OffsetTime;
	withNano(arg1 : number) : OffsetTime;
	truncatedTo(arg1 : TemporalUnit) : OffsetTime;
	plusHours(arg1 : number) : OffsetTime;
	plusMinutes(arg1 : number) : OffsetTime;
	plusSeconds(arg1 : number) : OffsetTime;
	plusNanos(arg1 : number) : OffsetTime;
	minusHours(arg1 : number) : OffsetTime;
	minusMinutes(arg1 : number) : OffsetTime;
	minusSeconds(arg1 : number) : OffsetTime;
	minusNanos(arg1 : number) : OffsetTime;
	format(arg1 : DateTimeFormatter) : string;
	atDate(arg1 : LocalDate) : OffsetDateTime;
	toEpochNano() : number;
	isAfter(arg1 : OffsetTime) : boolean;
	isBefore(arg1 : OffsetTime) : boolean;
	isEqual(arg1 : OffsetTime) : boolean;
	writeReplace() : Object;
	readObject(arg1 : ObjectInputStream) : void;
	writeExternal(arg1 : ObjectOutput) : void;
	static readExternal(arg1 : ObjectInput) : OffsetTime;
}


declare interface OffsetTime extends Temporal, TemporalAdjuster, Comparable<OffsetTime>, Serializable {}
export = OffsetTime
