import Object = require('nashorn/java/lang/Object');
import ZoneId = require('nashorn/java/time/ZoneId');
import Duration = require('nashorn/java/time/Duration');
import Instant = require('nashorn/java/time/Instant');
import Serializable = require('nashorn/java/io/Serializable');

declare class Clock extends Object {
	zone : ZoneId;
	static systemUTC() : Clock;
	static systemDefaultZone() : Clock;
	static system(arg1 : ZoneId) : Clock;
	static tickSeconds(arg1 : ZoneId) : Clock;
	static tickMinutes(arg1 : ZoneId) : Clock;
	static tick(arg1 : Clock, arg2 : Duration) : Clock;
	static fixed(arg1 : Instant, arg2 : ZoneId) : Clock;
	static offset(arg1 : Clock, arg2 : Duration) : Clock;
	getZone() : ZoneId;
	withZone(arg1 : ZoneId) : Clock;
	millis() : number;
	instant() : Instant;
}


declare module Clock {
	class FixedClock {
		zone : ZoneId;
	}


	interface FixedClock extends Clock, Serializable {}	class OffsetClock {
		zone : ZoneId;
	}


	interface OffsetClock extends Clock, Serializable {}	class SystemClock {
		zone : ZoneId;
	}


	interface SystemClock extends Clock, Serializable {}	class TickClock {
		zone : ZoneId;
	}


	interface TickClock extends Clock, Serializable {}}

export = Clock
