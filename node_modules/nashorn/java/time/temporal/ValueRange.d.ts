import TemporalField = require('nashorn/java/time/temporal/TemporalField');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import Serializable = require('nashorn/java/io/Serializable');

declare class ValueRange {
	fixed : boolean;
	minimum : number;
	largestMinimum : number;
	smallestMaximum : number;
	maximum : number;
	intValue : boolean;
	static of(arg1 : number, arg2 : number) : ValueRange;
	static of(arg1 : number, arg2 : number, arg3 : number) : ValueRange;
	static of(arg1 : number, arg2 : number, arg3 : number, arg4 : number) : ValueRange;
	isFixed() : boolean;
	getMinimum() : number;
	getLargestMinimum() : number;
	getSmallestMaximum() : number;
	getMaximum() : number;
	isIntValue() : boolean;
	isValidValue(arg1 : number) : boolean;
	isValidIntValue(arg1 : number) : boolean;
	checkValidValue(arg1 : number, arg2 : TemporalField) : number;
	checkValidIntValue(arg1 : number, arg2 : TemporalField) : number;
	genInvalidFieldMessage(arg1 : TemporalField, arg2 : number) : string;
	readObject(arg1 : ObjectInputStream) : void;
}


declare interface ValueRange extends Serializable {}
export = ValueRange
