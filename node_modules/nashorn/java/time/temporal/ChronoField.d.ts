import TemporalUnit = require('nashorn/java/time/temporal/TemporalUnit');
import Enum = require('nashorn/java/lang/Enum');
import TemporalField = require('nashorn/java/time/temporal/TemporalField');

declare class ChronoField {
	static NANO_OF_SECOND : ChronoField;
	static NANO_OF_DAY : ChronoField;
	static MICRO_OF_SECOND : ChronoField;
	static MICRO_OF_DAY : ChronoField;
	static MILLI_OF_SECOND : ChronoField;
	static MILLI_OF_DAY : ChronoField;
	static SECOND_OF_MINUTE : ChronoField;
	static SECOND_OF_DAY : ChronoField;
	static MINUTE_OF_HOUR : ChronoField;
	static MINUTE_OF_DAY : ChronoField;
	static HOUR_OF_AMPM : ChronoField;
	static CLOCK_HOUR_OF_AMPM : ChronoField;
	static HOUR_OF_DAY : ChronoField;
	static CLOCK_HOUR_OF_DAY : ChronoField;
	static AMPM_OF_DAY : ChronoField;
	static DAY_OF_WEEK : ChronoField;
	static ALIGNED_DAY_OF_WEEK_IN_MONTH : ChronoField;
	static ALIGNED_DAY_OF_WEEK_IN_YEAR : ChronoField;
	static DAY_OF_MONTH : ChronoField;
	static DAY_OF_YEAR : ChronoField;
	static EPOCH_DAY : ChronoField;
	static ALIGNED_WEEK_OF_MONTH : ChronoField;
	static ALIGNED_WEEK_OF_YEAR : ChronoField;
	static MONTH_OF_YEAR : ChronoField;
	static PROLEPTIC_MONTH : ChronoField;
	static YEAR_OF_ERA : ChronoField;
	static YEAR : ChronoField;
	static ERA : ChronoField;
	static INSTANT_SECONDS : ChronoField;
	static OFFSET_SECONDS : ChronoField;
	baseUnit : TemporalUnit;
	rangeUnit : TemporalUnit;
	dateBased : boolean;
	timeBased : boolean;
	checkValidValue(arg1 : number) : number;
	checkValidIntValue(arg1 : number) : number;
}


declare interface ChronoField extends Enum<ChronoField>, TemporalField {}
export = ChronoField
