import ResolverStyle = require('nashorn/java/time/format/ResolverStyle');
import Set = require('nashorn/java/util/Set');
import TemporalField = require('nashorn/java/time/temporal/TemporalField');
import TemporalAccessor = require('nashorn/java/time/temporal/TemporalAccessor');
import ZoneId = require('nashorn/java/time/ZoneId');
import ChronoLocalDate = require('nashorn/java/time/chrono/ChronoLocalDate');
import LocalTime = require('nashorn/java/time/LocalTime');
import Period = require('nashorn/java/time/Period');

declare class Parsed {
	copy() : Parsed;
	resolve(arg1 : ResolverStyle, arg2 : Set<TemporalField>) : TemporalAccessor;
	resolveFields() : void;
	updateCheckConflict(arg1 : TemporalField, arg2 : TemporalField, arg3 : number) : void;
	resolveInstantFields() : void;
	resolveInstantFields0(arg1 : ZoneId) : void;
	resolveDateFields() : void;
	updateCheckConflict(arg1 : ChronoLocalDate) : void;
	resolveTimeFields() : void;
	resolveTimeLenient() : void;
	resolveTime(arg1 : number, arg2 : number, arg3 : number, arg4 : number) : void;
	resolvePeriod() : void;
	resolveFractional() : void;
	resolveInstant() : void;
	updateCheckConflict(arg1 : LocalTime, arg2 : Period) : void;
	crossCheck() : void;
	crossCheck(arg1 : TemporalAccessor) : void;
}


declare interface Parsed extends TemporalAccessor {}
export = Parsed
