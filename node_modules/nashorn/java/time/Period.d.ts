import List = require('nashorn/java/util/List');
import TemporalUnit = require('nashorn/java/time/temporal/TemporalUnit');
import IsoChronology = require('nashorn/java/time/chrono/IsoChronology');
import TemporalAmount = require('nashorn/java/time/temporal/TemporalAmount');
import CharSequence = require('nashorn/java/lang/CharSequence');
import LocalDate = require('nashorn/java/time/LocalDate');
import TemporalAccessor = require('nashorn/java/time/temporal/TemporalAccessor');
import Object = require('nashorn/java/lang/Object');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import DataOutput = require('nashorn/java/io/DataOutput');
import DataInput = require('nashorn/java/io/DataInput');
import ChronoPeriod = require('nashorn/java/time/chrono/ChronoPeriod');
import Serializable = require('nashorn/java/io/Serializable');

declare class Period {
	static ZERO : Period;
	units : List<TemporalUnit>;
	chronology : IsoChronology;
	zero : boolean;
	negative : boolean;
	years : number;
	months : number;
	days : number;
	static ofYears(arg1 : number) : Period;
	static ofMonths(arg1 : number) : Period;
	static ofWeeks(arg1 : number) : Period;
	static ofDays(arg1 : number) : Period;
	static of(arg1 : number, arg2 : number, arg3 : number) : Period;
	static from(arg1 : TemporalAmount) : Period;
	static parse(arg1 : CharSequence) : Period;
	static parseNumber(arg1 : CharSequence, arg2 : string, arg3 : number) : number;
	static between(arg1 : LocalDate, arg2 : LocalDate) : Period;
	static create(arg1 : number, arg2 : number, arg3 : number) : Period;
	getYears() : number;
	getMonths() : number;
	getDays() : number;
	withYears(arg1 : number) : Period;
	withMonths(arg1 : number) : Period;
	withDays(arg1 : number) : Period;
	plusYears(arg1 : number) : Period;
	plusMonths(arg1 : number) : Period;
	plusDays(arg1 : number) : Period;
	minusYears(arg1 : number) : Period;
	minusMonths(arg1 : number) : Period;
	minusDays(arg1 : number) : Period;
	toTotalMonths() : number;
	validateChrono(arg1 : TemporalAccessor) : void;
	writeReplace() : Object;
	readObject(arg1 : ObjectInputStream) : void;
	writeExternal(arg1 : DataOutput) : void;
	static readExternal(arg1 : DataInput) : Period;
}


declare interface Period extends ChronoPeriod, Serializable {}
export = Period
