import Point = require('nashorn/java/awt/Point');
import DataFlavor = require('nashorn/java/awt/datatransfer/DataFlavor');
import List = require('nashorn/java/util/List');
import Transferable = require('nashorn/java/awt/datatransfer/Transferable');
import DropTargetContext = require('nashorn/java/awt/dnd/DropTargetContext');
import DropTargetEvent = require('nashorn/java/awt/dnd/DropTargetEvent');

declare class DropTargetDragEvent {
	location : Point;
	currentDataFlavors : DataFlavor[];
	currentDataFlavorsAsList : List<DataFlavor>;
	sourceActions : number;
	dropAction : number;
	transferable : Transferable;
	constructor(arg1 : DropTargetContext, arg2 : Point, arg3 : number, arg4 : number);
	getLocation() : Point;
	getCurrentDataFlavors() : DataFlavor[];
	getCurrentDataFlavorsAsList() : List<DataFlavor>;
	isDataFlavorSupported(arg1 : DataFlavor) : boolean;
	getSourceActions() : number;
	getDropAction() : number;
	getTransferable() : Transferable;
	acceptDrag(arg1 : number) : void;
	rejectDrag() : void;
}


declare interface DropTargetDragEvent extends DropTargetEvent {}
export = DropTargetDragEvent
