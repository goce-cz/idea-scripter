import Point = require('nashorn/java/awt/Point');
import DataFlavor = require('nashorn/java/awt/datatransfer/DataFlavor');
import List = require('nashorn/java/util/List');
import Transferable = require('nashorn/java/awt/datatransfer/Transferable');
import DropTargetContext = require('nashorn/java/awt/dnd/DropTargetContext');
import DropTargetEvent = require('nashorn/java/awt/dnd/DropTargetEvent');

declare class DropTargetDropEvent {
	location : Point;
	currentDataFlavors : DataFlavor[];
	currentDataFlavorsAsList : List<DataFlavor>;
	sourceActions : number;
	dropAction : number;
	transferable : Transferable;
	localTransfer : boolean;
	constructor(arg1 : DropTargetContext, arg2 : Point, arg3 : number, arg4 : number);
	constructor(arg1 : DropTargetContext, arg2 : Point, arg3 : number, arg4 : number, arg5 : boolean);
	getLocation() : Point;
	getCurrentDataFlavors() : DataFlavor[];
	getCurrentDataFlavorsAsList() : List<DataFlavor>;
	isDataFlavorSupported(arg1 : DataFlavor) : boolean;
	getSourceActions() : number;
	getDropAction() : number;
	getTransferable() : Transferable;
	acceptDrop(arg1 : number) : void;
	rejectDrop() : void;
	dropComplete(arg1 : boolean) : void;
	isLocalTransfer() : boolean;
}


declare interface DropTargetDropEvent extends DropTargetEvent {}
export = DropTargetDropEvent
