import DragGestureRecognizer = require('nashorn/java/awt/dnd/DragGestureRecognizer');
import Component = require('nashorn/java/awt/Component');
import DragSource = require('nashorn/java/awt/dnd/DragSource');
import Point = require('nashorn/java/awt/Point');
import InputEvent = require('nashorn/java/awt/event/InputEvent');
import List = require('nashorn/java/util/List');
import Iterator = require('nashorn/java/util/Iterator');
import Object = require('nashorn/java/lang/Object');
import Cursor = require('nashorn/java/awt/Cursor');
import Transferable = require('nashorn/java/awt/datatransfer/Transferable');
import DragSourceListener = require('nashorn/java/awt/dnd/DragSourceListener');
import Image = require('nashorn/java/awt/Image');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import EventObject = require('nashorn/java/util/EventObject');

declare class DragGestureEvent {
	sourceAsDragGestureRecognizer : DragGestureRecognizer;
	component : Component;
	dragSource : DragSource;
	dragOrigin : Point;
	dragAction : number;
	triggerEvent : InputEvent;
	constructor(arg1 : DragGestureRecognizer, arg2 : number, arg3 : Point, arg4 : List<InputEvent>);
	getSourceAsDragGestureRecognizer() : DragGestureRecognizer;
	getComponent() : Component;
	getDragSource() : DragSource;
	getDragOrigin() : Point;
	iterator() : Iterator<InputEvent>;
	toArray() : Object[];
	toArray(arg1 : Object[]) : Object[];
	getDragAction() : number;
	getTriggerEvent() : InputEvent;
	startDrag(arg1 : Cursor, arg2 : Transferable) : void;
	startDrag(arg1 : Cursor, arg2 : Transferable, arg3 : DragSourceListener) : void;
	startDrag(arg1 : Cursor, arg2 : Image, arg3 : Point, arg4 : Transferable, arg5 : DragSourceListener) : void;
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
}


declare interface DragGestureEvent extends EventObject {}
export = DragGestureEvent
