import Component = require('nashorn/java/awt/Component');
import FlavorMap = require('nashorn/java/awt/datatransfer/FlavorMap');
import DropTargetContext = require('nashorn/java/awt/dnd/DropTargetContext');
import DropTargetListener = require('nashorn/java/awt/dnd/DropTargetListener');
import ComponentPeer = require('nashorn/java/awt/peer/ComponentPeer');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import Point = require('nashorn/java/awt/Point');
import Serializable = require('nashorn/java/io/Serializable');
import ActionListener = require('nashorn/java/awt/event/ActionListener');

declare class DropTarget {
	component : Component;
	defaultActions : number;
	active : boolean;
	flavorMap : FlavorMap;
	dropTargetContext : DropTargetContext;
	constructor(arg1 : Component, arg2 : number, arg3 : DropTargetListener, arg4 : boolean, arg5 : FlavorMap);
	constructor(arg1 : Component, arg2 : number, arg3 : DropTargetListener, arg4 : boolean);
	constructor();
	constructor(arg1 : Component, arg2 : DropTargetListener);
	constructor(arg1 : Component, arg2 : number, arg3 : DropTargetListener);
	setComponent(arg1 : Component) : void;
	getComponent() : Component;
	setDefaultActions(arg1 : number) : void;
	doSetDefaultActions(arg1 : number) : void;
	getDefaultActions() : number;
	setActive(arg1 : boolean) : void;
	isActive() : boolean;
	addDropTargetListener(arg1 : DropTargetListener) : void;
	removeDropTargetListener(arg1 : DropTargetListener) : void;
	getFlavorMap() : FlavorMap;
	setFlavorMap(arg1 : FlavorMap) : void;
	addNotify(arg1 : ComponentPeer) : void;
	removeNotify(arg1 : ComponentPeer) : void;
	getDropTargetContext() : DropTargetContext;
	createDropTargetContext() : DropTargetContext;
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
	createDropTargetAutoScroller(arg1 : Component, arg2 : Point) : DropTarget.DropTargetAutoScroller;
	initializeAutoscrolling(arg1 : Point) : void;
	updateAutoscroll(arg1 : Point) : void;
	clearAutoscroll() : void;
}


declare interface DropTarget extends DropTargetListener, Serializable {}

declare module DropTarget {
	class DropTargetAutoScroller {
		updateRegion() : void;
		updateLocation(arg1 : Point) : void;
		stop() : void;
	}


	interface DropTargetAutoScroller extends ActionListener {}}

export = DropTarget
