import DragSource = require('nashorn/java/awt/dnd/DragSource');
import Component = require('nashorn/java/awt/Component');
import InputEvent = require('nashorn/java/awt/event/InputEvent');
import DragGestureListener = require('nashorn/java/awt/dnd/DragGestureListener');
import Point = require('nashorn/java/awt/Point');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import Serializable = require('nashorn/java/io/Serializable');

declare class DragGestureRecognizer {
	dragSource : DragSource;
	component : Component;
	sourceActions : number;
	triggerEvent : InputEvent;
	registerListeners() : void;
	unregisterListeners() : void;
	getDragSource() : DragSource;
	getComponent() : Component;
	setComponent(arg1 : Component) : void;
	getSourceActions() : number;
	setSourceActions(arg1 : number) : void;
	getTriggerEvent() : InputEvent;
	resetRecognizer() : void;
	addDragGestureListener(arg1 : DragGestureListener) : void;
	removeDragGestureListener(arg1 : DragGestureListener) : void;
	fireDragGestureRecognized(arg1 : number, arg2 : Point) : void;
	appendEvent(arg1 : InputEvent) : void;
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
}


declare interface DragGestureRecognizer extends Serializable {}
export = DragGestureRecognizer
