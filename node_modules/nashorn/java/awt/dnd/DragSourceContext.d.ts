import DragSource = require('nashorn/java/awt/dnd/DragSource');
import Component = require('nashorn/java/awt/Component');
import DragGestureEvent = require('nashorn/java/awt/dnd/DragGestureEvent');
import Cursor = require('nashorn/java/awt/Cursor');
import Transferable = require('nashorn/java/awt/datatransfer/Transferable');
import DragSourceContextPeer = require('nashorn/java/awt/dnd/peer/DragSourceContextPeer');
import Image = require('nashorn/java/awt/Image');
import Point = require('nashorn/java/awt/Point');
import DragSourceListener = require('nashorn/java/awt/dnd/DragSourceListener');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import DragSourceMotionListener = require('nashorn/java/awt/dnd/DragSourceMotionListener');
import Serializable = require('nashorn/java/io/Serializable');

declare class DragSourceContext {
	dragSource : DragSource;
	component : Component;
	trigger : DragGestureEvent;
	sourceActions : number;
	cursor : Cursor;
	transferable : Transferable;
	constructor(arg1 : DragSourceContextPeer, arg2 : DragGestureEvent, arg3 : Cursor, arg4 : Image, arg5 : Point, arg6 : Transferable, arg7 : DragSourceListener);
	getDragSource() : DragSource;
	getComponent() : Component;
	getTrigger() : DragGestureEvent;
	getSourceActions() : number;
	setCursor(arg1 : Cursor) : void;
	getCursor() : Cursor;
	addDragSourceListener(arg1 : DragSourceListener) : void;
	removeDragSourceListener(arg1 : DragSourceListener) : void;
	transferablesFlavorsChanged() : void;
	getTransferable() : Transferable;
	updateCurrentCursor(arg1 : number, arg2 : number, arg3 : number) : void;
	setCursorImpl(arg1 : Cursor) : void;
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
}


declare interface DragSourceContext extends DragSourceListener, DragSourceMotionListener, Serializable {}
export = DragSourceContext
