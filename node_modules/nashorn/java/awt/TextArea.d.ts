import Dimension = require('nashorn/java/awt/Dimension');
import AccessibleContext = require('nashorn/javax/accessibility/AccessibleContext');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import TextComponent = require('nashorn/java/awt/TextComponent');
import AccessibleStateSet = require('nashorn/javax/accessibility/AccessibleStateSet');

declare class TextArea {
	static SCROLLBARS_BOTH : number;
	static SCROLLBARS_VERTICAL_ONLY : number;
	static SCROLLBARS_HORIZONTAL_ONLY : number;
	static SCROLLBARS_NONE : number;
	rows : number;
	columns : number;
	scrollbarVisibility : number;
	preferredSize : Dimension;
	minimumSize : Dimension;
	accessibleContext : AccessibleContext;
	constructor();
	constructor(arg1 : string);
	constructor(arg1 : number, arg2 : number);
	constructor(arg1 : string, arg2 : number, arg3 : number);
	constructor(arg1 : string, arg2 : number, arg3 : number, arg4 : number);
	static initIDs() : void;
	insert(arg1 : string, arg2 : number) : void;
	insertText(arg1 : string, arg2 : number) : void;
	append(arg1 : string) : void;
	appendText(arg1 : string) : void;
	replaceRange(arg1 : string, arg2 : number, arg3 : number) : void;
	replaceText(arg1 : string, arg2 : number, arg3 : number) : void;
	getRows() : number;
	setRows(arg1 : number) : void;
	getColumns() : number;
	setColumns(arg1 : number) : void;
	getScrollbarVisibility() : number;
	getPreferredSize(arg1 : number, arg2 : number) : Dimension;
	preferredSize(arg1 : number, arg2 : number) : Dimension;
	getMinimumSize(arg1 : number, arg2 : number) : Dimension;
	minimumSize(arg1 : number, arg2 : number) : Dimension;
	readObject(arg1 : ObjectInputStream) : void;
}


declare interface TextArea extends TextComponent {}

declare module TextArea {
	class AccessibleAWTTextArea {
		accessibleStateSet : AccessibleStateSet;
	}


	interface AccessibleAWTTextArea extends TextComponent.AccessibleAWTTextComponent {}}

export = TextArea
