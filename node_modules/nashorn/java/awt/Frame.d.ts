import Image = require('nashorn/java/awt/Image');
import MenuBar = require('nashorn/java/awt/MenuBar');
import Rectangle = require('nashorn/java/awt/Rectangle');
import AccessibleContext = require('nashorn/javax/accessibility/AccessibleContext');
import GraphicsConfiguration = require('nashorn/java/awt/GraphicsConfiguration');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import Window = require('nashorn/java/awt/Window');
import MenuContainer = require('nashorn/java/awt/MenuContainer');
import AccessibleRole = require('nashorn/javax/accessibility/AccessibleRole');
import AccessibleStateSet = require('nashorn/javax/accessibility/AccessibleStateSet');

declare class Frame {
	static DEFAULT_CURSOR : number;
	static CROSSHAIR_CURSOR : number;
	static TEXT_CURSOR : number;
	static WAIT_CURSOR : number;
	static SW_RESIZE_CURSOR : number;
	static SE_RESIZE_CURSOR : number;
	static NW_RESIZE_CURSOR : number;
	static NE_RESIZE_CURSOR : number;
	static N_RESIZE_CURSOR : number;
	static S_RESIZE_CURSOR : number;
	static W_RESIZE_CURSOR : number;
	static E_RESIZE_CURSOR : number;
	static HAND_CURSOR : number;
	static MOVE_CURSOR : number;
	static NORMAL : number;
	static ICONIFIED : number;
	static MAXIMIZED_HORIZ : number;
	static MAXIMIZED_VERT : number;
	static MAXIMIZED_BOTH : number;
	title : string;
	iconImage : Image;
	menuBar : MenuBar;
	resizable : boolean;
	state : number;
	extendedState : number;
	maximizedBounds : Rectangle;
	undecorated : boolean;
	cursorType : number;
	static frames : Frame[];
	accessibleContext : AccessibleContext;
	constructor();
	constructor(arg1 : GraphicsConfiguration);
	constructor(arg1 : string);
	constructor(arg1 : string, arg2 : GraphicsConfiguration);
	init(arg1 : string, arg2 : GraphicsConfiguration) : void;
	getTitle() : string;
	setTitle(arg1 : string) : void;
	getIconImage() : Image;
	getMenuBar() : MenuBar;
	setMenuBar(arg1 : MenuBar) : void;
	isResizable() : boolean;
	setResizable(arg1 : boolean) : void;
	setState(arg1 : number) : void;
	setExtendedState(arg1 : number) : void;
	isFrameStateSupported(arg1 : number) : boolean;
	getState() : number;
	getExtendedState() : number;
	setMaximizedBounds(arg1 : Rectangle) : void;
	getMaximizedBounds() : Rectangle;
	setUndecorated(arg1 : boolean) : void;
	isUndecorated() : boolean;
	setCursor(arg1 : number) : void;
	getCursorType() : number;
	static getFrames() : Frame[];
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
	static initIDs() : void;
}


declare interface Frame extends Window, MenuContainer {}

declare module Frame {
	class AccessibleAWTFrame {
		accessibleRole : AccessibleRole;
		accessibleStateSet : AccessibleStateSet;
	}


	interface AccessibleAWTFrame extends Window.AccessibleAWTWindow {}}

export = Frame
