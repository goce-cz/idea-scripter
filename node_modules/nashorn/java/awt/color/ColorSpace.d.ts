import Serializable = require('nashorn/java/io/Serializable');

declare class ColorSpace {
	static TYPE_XYZ : number;
	static TYPE_Lab : number;
	static TYPE_Luv : number;
	static TYPE_YCbCr : number;
	static TYPE_Yxy : number;
	static TYPE_RGB : number;
	static TYPE_GRAY : number;
	static TYPE_HSV : number;
	static TYPE_HLS : number;
	static TYPE_CMYK : number;
	static TYPE_CMY : number;
	static TYPE_2CLR : number;
	static TYPE_3CLR : number;
	static TYPE_4CLR : number;
	static TYPE_5CLR : number;
	static TYPE_6CLR : number;
	static TYPE_7CLR : number;
	static TYPE_8CLR : number;
	static TYPE_9CLR : number;
	static TYPE_ACLR : number;
	static TYPE_BCLR : number;
	static TYPE_CCLR : number;
	static TYPE_DCLR : number;
	static TYPE_ECLR : number;
	static TYPE_FCLR : number;
	static CS_sRGB : number;
	static CS_LINEAR_RGB : number;
	static CS_CIEXYZ : number;
	static CS_PYCC : number;
	static CS_GRAY : number;
	cS_sRGB : boolean;
	type : number;
	numComponents : number;
	static getInstance(arg1 : number) : ColorSpace;
	isCS_sRGB() : boolean;
	toRGB(arg1 : number[]) : number[];
	fromRGB(arg1 : number[]) : number[];
	toCIEXYZ(arg1 : number[]) : number[];
	fromCIEXYZ(arg1 : number[]) : number[];
	getType() : number;
	getNumComponents() : number;
	getName(arg1 : number) : string;
	getMinValue(arg1 : number) : number;
	getMaxValue(arg1 : number) : number;
	static isCS_CIEXYZ(arg1 : ColorSpace) : boolean;
}


declare interface ColorSpace extends Serializable {}
export = ColorSpace
