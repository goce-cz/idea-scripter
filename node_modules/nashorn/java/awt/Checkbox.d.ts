import Object = require('nashorn/java/lang/Object');
import CheckboxGroup = require('nashorn/java/awt/CheckboxGroup');
import ItemListener = require('nashorn/java/awt/event/ItemListener');
import AccessibleContext = require('nashorn/javax/accessibility/AccessibleContext');
import ItemEvent = require('nashorn/java/awt/event/ItemEvent');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import Component = require('nashorn/java/awt/Component');
import ItemSelectable = require('nashorn/java/awt/ItemSelectable');
import Accessible = require('nashorn/javax/accessibility/Accessible');
import AccessibleAction = require('nashorn/javax/accessibility/AccessibleAction');
import AccessibleValue = require('nashorn/javax/accessibility/AccessibleValue');
import AccessibleRole = require('nashorn/javax/accessibility/AccessibleRole');
import AccessibleStateSet = require('nashorn/javax/accessibility/AccessibleStateSet');

declare class Checkbox {
	label : string;
	state : boolean;
	selectedObjects : Object[];
	checkboxGroup : CheckboxGroup;
	itemListeners : ItemListener[];
	accessibleContext : AccessibleContext;
	constructor();
	constructor(arg1 : string);
	constructor(arg1 : string, arg2 : boolean);
	constructor(arg1 : string, arg2 : boolean, arg3 : CheckboxGroup);
	constructor(arg1 : string, arg2 : CheckboxGroup, arg3 : boolean);
	setStateInternal(arg1 : boolean) : void;
	getLabel() : string;
	setLabel(arg1 : string) : void;
	getState() : boolean;
	setState(arg1 : boolean) : void;
	getCheckboxGroup() : CheckboxGroup;
	setCheckboxGroup(arg1 : CheckboxGroup) : void;
	getItemListeners() : ItemListener[];
	processItemEvent(arg1 : ItemEvent) : void;
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
	static initIDs() : void;
}


declare interface Checkbox extends Component, ItemSelectable, Accessible {}

declare module Checkbox {
	class AccessibleAWTCheckbox {
		accessibleAction : AccessibleAction;
		accessibleValue : AccessibleValue;
		accessibleActionCount : number;
		currentAccessibleValue : number;
		minimumAccessibleValue : number;
		maximumAccessibleValue : number;
		accessibleRole : AccessibleRole;
		accessibleStateSet : AccessibleStateSet;
		constructor();
	}


	interface AccessibleAWTCheckbox extends Component.AccessibleAWTComponent, ItemListener, AccessibleAction, AccessibleValue {}}

export = Checkbox
