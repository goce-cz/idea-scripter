import Dimension = require('nashorn/java/awt/Dimension');
import ActionListener = require('nashorn/java/awt/event/ActionListener');
import AccessibleContext = require('nashorn/javax/accessibility/AccessibleContext');
import ActionEvent = require('nashorn/java/awt/event/ActionEvent');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import TextComponent = require('nashorn/java/awt/TextComponent');
import AccessibleStateSet = require('nashorn/javax/accessibility/AccessibleStateSet');

declare class TextField {
	echoChar : string;
	columns : number;
	preferredSize : Dimension;
	minimumSize : Dimension;
	actionListeners : ActionListener[];
	accessibleContext : AccessibleContext;
	constructor();
	constructor(arg1 : string);
	constructor(arg1 : number);
	constructor(arg1 : string, arg2 : number);
	static initIDs() : void;
	getEchoChar() : string;
	setEchoChar(arg1 : string) : void;
	setEchoCharacter(arg1 : string) : void;
	echoCharIsSet() : boolean;
	getColumns() : number;
	setColumns(arg1 : number) : void;
	getPreferredSize(arg1 : number) : Dimension;
	preferredSize(arg1 : number) : Dimension;
	getMinimumSize(arg1 : number) : Dimension;
	minimumSize(arg1 : number) : Dimension;
	addActionListener(arg1 : ActionListener) : void;
	removeActionListener(arg1 : ActionListener) : void;
	getActionListeners() : ActionListener[];
	processActionEvent(arg1 : ActionEvent) : void;
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
}


declare interface TextField extends TextComponent {}

declare module TextField {
	class AccessibleAWTTextField {
		accessibleStateSet : AccessibleStateSet;
	}


	interface AccessibleAWTTextField extends TextComponent.AccessibleAWTTextComponent {}}

export = TextField
