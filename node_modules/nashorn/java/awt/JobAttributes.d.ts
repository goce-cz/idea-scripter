import Cloneable = require('nashorn/java/lang/Cloneable');
import AttributeValue = require('nashorn/java/awt/AttributeValue');

declare class JobAttributes {
	copies : number;
	defaultSelection : JobAttributes.DefaultSelectionType;
	destination : JobAttributes.DestinationType;
	dialog : JobAttributes.DialogType;
	fileName : string;
	fromPage : number;
	maxPage : number;
	minPage : number;
	multipleDocumentHandling : JobAttributes.MultipleDocumentHandlingType;
	pageRanges : number[][];
	printer : string;
	sides : JobAttributes.SidesType;
	toPage : number;
	constructor();
	constructor(arg1 : JobAttributes);
	constructor(arg1 : number, arg2 : JobAttributes.DefaultSelectionType, arg3 : JobAttributes.DestinationType, arg4 : JobAttributes.DialogType, arg5 : string, arg6 : number, arg7 : number, arg8 : JobAttributes.MultipleDocumentHandlingType, arg9 : number[][], arg10 : string, arg11 : JobAttributes.SidesType);
	set(arg1 : JobAttributes) : void;
	getCopies() : number;
	setCopies(arg1 : number) : void;
	setCopiesToDefault() : void;
	getDefaultSelection() : JobAttributes.DefaultSelectionType;
	setDefaultSelection(arg1 : JobAttributes.DefaultSelectionType) : void;
	getDestination() : JobAttributes.DestinationType;
	setDestination(arg1 : JobAttributes.DestinationType) : void;
	getDialog() : JobAttributes.DialogType;
	setDialog(arg1 : JobAttributes.DialogType) : void;
	getFileName() : string;
	setFileName(arg1 : string) : void;
	getFromPage() : number;
	setFromPage(arg1 : number) : void;
	getMaxPage() : number;
	setMaxPage(arg1 : number) : void;
	getMinPage() : number;
	setMinPage(arg1 : number) : void;
	getMultipleDocumentHandling() : JobAttributes.MultipleDocumentHandlingType;
	setMultipleDocumentHandling(arg1 : JobAttributes.MultipleDocumentHandlingType) : void;
	setMultipleDocumentHandlingToDefault() : void;
	getPageRanges() : number[][];
	setPageRanges(arg1 : number[][]) : void;
	getPrinter() : string;
	setPrinter(arg1 : string) : void;
	getSides() : JobAttributes.SidesType;
	setSides(arg1 : JobAttributes.SidesType) : void;
	setSidesToDefault() : void;
	getToPage() : number;
	setToPage(arg1 : number) : void;
}


declare interface JobAttributes extends Cloneable {}

declare module JobAttributes {
	class DefaultSelectionType {
		static ALL : JobAttributes.DefaultSelectionType;
		static RANGE : JobAttributes.DefaultSelectionType;
		static SELECTION : JobAttributes.DefaultSelectionType;
	}


	interface DefaultSelectionType extends AttributeValue {}	class DestinationType {
		static FILE : JobAttributes.DestinationType;
		static PRINTER : JobAttributes.DestinationType;
	}


	interface DestinationType extends AttributeValue {}	class DialogType {
		static COMMON : JobAttributes.DialogType;
		static NATIVE : JobAttributes.DialogType;
		static NONE : JobAttributes.DialogType;
	}


	interface DialogType extends AttributeValue {}	class MultipleDocumentHandlingType {
		static SEPARATE_DOCUMENTS_COLLATED_COPIES : JobAttributes.MultipleDocumentHandlingType;
		static SEPARATE_DOCUMENTS_UNCOLLATED_COPIES : JobAttributes.MultipleDocumentHandlingType;
	}


	interface MultipleDocumentHandlingType extends AttributeValue {}	class SidesType {
		static ONE_SIDED : JobAttributes.SidesType;
		static TWO_SIDED_LONG_EDGE : JobAttributes.SidesType;
		static TWO_SIDED_SHORT_EDGE : JobAttributes.SidesType;
	}


	interface SidesType extends AttributeValue {}}

export = JobAttributes
