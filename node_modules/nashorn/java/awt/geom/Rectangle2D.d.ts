import Line2D = require('nashorn/java/awt/geom/Line2D');
import Point2D = require('nashorn/java/awt/geom/Point2D');
import RectangularShape = require('nashorn/java/awt/geom/RectangularShape');
import Serializable = require('nashorn/java/io/Serializable');

declare class Rectangle2D {
	static OUT_LEFT : number;
	static OUT_TOP : number;
	static OUT_RIGHT : number;
	static OUT_BOTTOM : number;
	bounds2D : Rectangle2D;
	setRect(arg1 : number, arg2 : number, arg3 : number, arg4 : number) : void;
	setRect(arg1 : Rectangle2D) : void;
	intersectsLine(arg1 : number, arg2 : number, arg3 : number, arg4 : number) : boolean;
	intersectsLine(arg1 : Line2D) : boolean;
	outcode(arg1 : number, arg2 : number) : number;
	outcode(arg1 : Point2D) : number;
	createIntersection(arg1 : Rectangle2D) : Rectangle2D;
	static intersect(arg1 : Rectangle2D, arg2 : Rectangle2D, arg3 : Rectangle2D) : void;
	createUnion(arg1 : Rectangle2D) : Rectangle2D;
	static union(arg1 : Rectangle2D, arg2 : Rectangle2D, arg3 : Rectangle2D) : void;
	add(arg1 : number, arg2 : number) : void;
	add(arg1 : Point2D) : void;
	add(arg1 : Rectangle2D) : void;
}


declare interface Rectangle2D extends RectangularShape {}

declare module Rectangle2D {
	class Double {
		x : number;
		y : number;
		width : number;
		height : number;
		empty : boolean;
		bounds2D : Rectangle2D;
		constructor();
		constructor(arg1 : number, arg2 : number, arg3 : number, arg4 : number);
	}


	interface Double extends Rectangle2D, Serializable {}	class Float {
		x : number;
		y : number;
		width : number;
		height : number;
		empty : boolean;
		bounds2D : Rectangle2D;
		constructor();
		constructor(arg1 : number, arg2 : number, arg3 : number, arg4 : number);
		setRect(arg1 : number, arg2 : number, arg3 : number, arg4 : number) : void;
	}


	interface Float extends Rectangle2D, Serializable {}}

export = Rectangle2D
