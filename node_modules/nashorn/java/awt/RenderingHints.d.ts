import Object = require('nashorn/java/lang/Object');
import Map = require('nashorn/java/util/Map');
import Cloneable = require('nashorn/java/lang/Cloneable');

declare class RenderingHints {
	static KEY_ANTIALIASING : RenderingHints.Key;
	static VALUE_ANTIALIAS_ON : Object;
	static VALUE_ANTIALIAS_OFF : Object;
	static VALUE_ANTIALIAS_DEFAULT : Object;
	static KEY_RENDERING : RenderingHints.Key;
	static VALUE_RENDER_SPEED : Object;
	static VALUE_RENDER_QUALITY : Object;
	static VALUE_RENDER_DEFAULT : Object;
	static KEY_DITHERING : RenderingHints.Key;
	static VALUE_DITHER_DISABLE : Object;
	static VALUE_DITHER_ENABLE : Object;
	static VALUE_DITHER_DEFAULT : Object;
	static KEY_TEXT_ANTIALIASING : RenderingHints.Key;
	static VALUE_TEXT_ANTIALIAS_ON : Object;
	static VALUE_TEXT_ANTIALIAS_OFF : Object;
	static VALUE_TEXT_ANTIALIAS_DEFAULT : Object;
	static VALUE_TEXT_ANTIALIAS_GASP : Object;
	static VALUE_TEXT_ANTIALIAS_LCD_HRGB : Object;
	static VALUE_TEXT_ANTIALIAS_LCD_HBGR : Object;
	static VALUE_TEXT_ANTIALIAS_LCD_VRGB : Object;
	static VALUE_TEXT_ANTIALIAS_LCD_VBGR : Object;
	static KEY_TEXT_LCD_CONTRAST : RenderingHints.Key;
	static KEY_FRACTIONALMETRICS : RenderingHints.Key;
	static VALUE_FRACTIONALMETRICS_OFF : Object;
	static VALUE_FRACTIONALMETRICS_ON : Object;
	static VALUE_FRACTIONALMETRICS_DEFAULT : Object;
	static KEY_INTERPOLATION : RenderingHints.Key;
	static VALUE_INTERPOLATION_NEAREST_NEIGHBOR : Object;
	static VALUE_INTERPOLATION_BILINEAR : Object;
	static VALUE_INTERPOLATION_BICUBIC : Object;
	static KEY_ALPHA_INTERPOLATION : RenderingHints.Key;
	static VALUE_ALPHA_INTERPOLATION_SPEED : Object;
	static VALUE_ALPHA_INTERPOLATION_QUALITY : Object;
	static VALUE_ALPHA_INTERPOLATION_DEFAULT : Object;
	static KEY_COLOR_RENDERING : RenderingHints.Key;
	static VALUE_COLOR_RENDER_SPEED : Object;
	static VALUE_COLOR_RENDER_QUALITY : Object;
	static VALUE_COLOR_RENDER_DEFAULT : Object;
	static KEY_STROKE_CONTROL : RenderingHints.Key;
	static VALUE_STROKE_DEFAULT : Object;
	static VALUE_STROKE_NORMALIZE : Object;
	static VALUE_STROKE_PURE : Object;
	empty : boolean;
	constructor(arg1 : Map<RenderingHints.Key, any>);
	constructor(arg1 : RenderingHints.Key, arg2 : Object);
	add(arg1 : RenderingHints) : void;
}


declare interface RenderingHints extends Map<Object, Object>, Cloneable {}

declare module RenderingHints {
	class Key extends Object {
		getIdentity() : string;
		static recordIdentity(arg1 : RenderingHints.Key) : void;
		isCompatibleValue(arg1 : Object) : boolean;
		intKey() : number;
	}
}

export = RenderingHints
