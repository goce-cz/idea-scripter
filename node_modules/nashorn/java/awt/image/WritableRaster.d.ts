import Object = require('nashorn/java/lang/Object');
import Raster = require('nashorn/java/awt/image/Raster');

declare class WritableRaster {
	writableParent : WritableRaster;
	getWritableParent() : WritableRaster;
	createWritableTranslatedChild(arg1 : number, arg2 : number) : WritableRaster;
	createWritableChild(arg1 : number, arg2 : number, arg3 : number, arg4 : number, arg5 : number, arg6 : number, arg7 : number[]) : WritableRaster;
	setDataElements(arg1 : number, arg2 : number, arg3 : Object) : void;
	setDataElements(arg1 : number, arg2 : number, arg3 : Raster) : void;
	setDataElements(arg1 : number, arg2 : number, arg3 : number, arg4 : number, arg5 : Object) : void;
	setRect(arg1 : Raster) : void;
	setRect(arg1 : number, arg2 : number, arg3 : Raster) : void;
	setPixel(arg1 : number, arg2 : number, arg3 : number[]) : void;
	setPixel(arg1 : number, arg2 : number, arg3 : number[]) : void;
	setPixel(arg1 : number, arg2 : number, arg3 : number[]) : void;
	setPixels(arg1 : number, arg2 : number, arg3 : number, arg4 : number, arg5 : number[]) : void;
	setPixels(arg1 : number, arg2 : number, arg3 : number, arg4 : number, arg5 : number[]) : void;
	setPixels(arg1 : number, arg2 : number, arg3 : number, arg4 : number, arg5 : number[]) : void;
	setSample(arg1 : number, arg2 : number, arg3 : number, arg4 : number) : void;
	setSample(arg1 : number, arg2 : number, arg3 : number, arg4 : number) : void;
	setSample(arg1 : number, arg2 : number, arg3 : number, arg4 : number) : void;
	setSamples(arg1 : number, arg2 : number, arg3 : number, arg4 : number, arg5 : number, arg6 : number[]) : void;
	setSamples(arg1 : number, arg2 : number, arg3 : number, arg4 : number, arg5 : number, arg6 : number[]) : void;
	setSamples(arg1 : number, arg2 : number, arg3 : number, arg4 : number, arg5 : number, arg6 : number[]) : void;
}


declare interface WritableRaster extends Raster {}
export = WritableRaster
