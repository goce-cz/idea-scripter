import Exception = require('nashorn/java/lang/Exception');
import Throwable = require('nashorn/java/lang/Throwable');
import Object = require('nashorn/java/lang/Object');
import Runnable = require('nashorn/java/lang/Runnable');
import AWTEvent = require('nashorn/java/awt/AWTEvent');
import ActiveEvent = require('nashorn/java/awt/ActiveEvent');

declare class InvocationEvent {
	static INVOCATION_FIRST : number;
	static INVOCATION_DEFAULT : number;
	static INVOCATION_LAST : number;
	exception : Exception;
	throwable : Throwable;
	when : number;
	dispatched : boolean;
	constructor(arg1 : Object, arg2 : Runnable);
	constructor(arg1 : Object, arg2 : Runnable, arg3 : Object, arg4 : boolean);
	constructor(arg1 : Object, arg2 : Runnable, arg3 : Runnable, arg4 : boolean);
	getException() : Exception;
	getThrowable() : Throwable;
	getWhen() : number;
	isDispatched() : boolean;
	finishedDispatching(arg1 : boolean) : void;
}


declare interface InvocationEvent extends AWTEvent, ActiveEvent {}
export = InvocationEvent
