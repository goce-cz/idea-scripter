import AttributedCharacterIterator = require('nashorn/java/text/AttributedCharacterIterator');
import TextHitInfo = require('nashorn/java/awt/font/TextHitInfo');
import Component = require('nashorn/java/awt/Component');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import Object = require('nashorn/java/lang/Object');
import AWTEvent = require('nashorn/java/awt/AWTEvent');

declare class InputMethodEvent {
	static INPUT_METHOD_FIRST : number;
	static INPUT_METHOD_TEXT_CHANGED : number;
	static CARET_POSITION_CHANGED : number;
	static INPUT_METHOD_LAST : number;
	text : AttributedCharacterIterator;
	committedCharacterCount : number;
	caret : TextHitInfo;
	visiblePosition : TextHitInfo;
	consumed : boolean;
	when : number;
	constructor(arg1 : Component, arg2 : number, arg3 : number, arg4 : AttributedCharacterIterator, arg5 : number, arg6 : TextHitInfo, arg7 : TextHitInfo);
	constructor(arg1 : Component, arg2 : number, arg3 : AttributedCharacterIterator, arg4 : number, arg5 : TextHitInfo, arg6 : TextHitInfo);
	constructor(arg1 : Component, arg2 : number, arg3 : TextHitInfo, arg4 : TextHitInfo);
	getText() : AttributedCharacterIterator;
	getCommittedCharacterCount() : number;
	getCaret() : TextHitInfo;
	getVisiblePosition() : TextHitInfo;
	getWhen() : number;
	readObject(arg1 : ObjectInputStream) : void;
	static getMostRecentEventTimeForSource(arg1 : Object) : number;
}


declare interface InputMethodEvent extends AWTEvent {}
export = InputMethodEvent
