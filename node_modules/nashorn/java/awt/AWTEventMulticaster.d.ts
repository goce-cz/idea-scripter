import EventListener = require('nashorn/java/util/EventListener');
import ComponentListener = require('nashorn/java/awt/event/ComponentListener');
import ContainerListener = require('nashorn/java/awt/event/ContainerListener');
import FocusListener = require('nashorn/java/awt/event/FocusListener');
import KeyListener = require('nashorn/java/awt/event/KeyListener');
import MouseListener = require('nashorn/java/awt/event/MouseListener');
import MouseMotionListener = require('nashorn/java/awt/event/MouseMotionListener');
import WindowListener = require('nashorn/java/awt/event/WindowListener');
import WindowStateListener = require('nashorn/java/awt/event/WindowStateListener');
import WindowFocusListener = require('nashorn/java/awt/event/WindowFocusListener');
import ActionListener = require('nashorn/java/awt/event/ActionListener');
import ItemListener = require('nashorn/java/awt/event/ItemListener');
import AdjustmentListener = require('nashorn/java/awt/event/AdjustmentListener');
import TextListener = require('nashorn/java/awt/event/TextListener');
import InputMethodListener = require('nashorn/java/awt/event/InputMethodListener');
import HierarchyListener = require('nashorn/java/awt/event/HierarchyListener');
import HierarchyBoundsListener = require('nashorn/java/awt/event/HierarchyBoundsListener');
import MouseWheelListener = require('nashorn/java/awt/event/MouseWheelListener');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import Class = require('nashorn/java/lang/Class');

declare class AWTEventMulticaster {
	remove(arg1 : EventListener) : EventListener;
	static add(arg1 : ComponentListener, arg2 : ComponentListener) : ComponentListener;
	static add(arg1 : ContainerListener, arg2 : ContainerListener) : ContainerListener;
	static add(arg1 : FocusListener, arg2 : FocusListener) : FocusListener;
	static add(arg1 : KeyListener, arg2 : KeyListener) : KeyListener;
	static add(arg1 : MouseListener, arg2 : MouseListener) : MouseListener;
	static add(arg1 : MouseMotionListener, arg2 : MouseMotionListener) : MouseMotionListener;
	static add(arg1 : WindowListener, arg2 : WindowListener) : WindowListener;
	static add(arg1 : WindowStateListener, arg2 : WindowStateListener) : WindowStateListener;
	static add(arg1 : WindowFocusListener, arg2 : WindowFocusListener) : WindowFocusListener;
	static add(arg1 : ActionListener, arg2 : ActionListener) : ActionListener;
	static add(arg1 : ItemListener, arg2 : ItemListener) : ItemListener;
	static add(arg1 : AdjustmentListener, arg2 : AdjustmentListener) : AdjustmentListener;
	static add(arg1 : TextListener, arg2 : TextListener) : TextListener;
	static add(arg1 : InputMethodListener, arg2 : InputMethodListener) : InputMethodListener;
	static add(arg1 : HierarchyListener, arg2 : HierarchyListener) : HierarchyListener;
	static add(arg1 : HierarchyBoundsListener, arg2 : HierarchyBoundsListener) : HierarchyBoundsListener;
	static add(arg1 : MouseWheelListener, arg2 : MouseWheelListener) : MouseWheelListener;
	static remove(arg1 : ComponentListener, arg2 : ComponentListener) : ComponentListener;
	static remove(arg1 : ContainerListener, arg2 : ContainerListener) : ContainerListener;
	static remove(arg1 : FocusListener, arg2 : FocusListener) : FocusListener;
	static remove(arg1 : KeyListener, arg2 : KeyListener) : KeyListener;
	static remove(arg1 : MouseListener, arg2 : MouseListener) : MouseListener;
	static remove(arg1 : MouseMotionListener, arg2 : MouseMotionListener) : MouseMotionListener;
	static remove(arg1 : WindowListener, arg2 : WindowListener) : WindowListener;
	static remove(arg1 : WindowStateListener, arg2 : WindowStateListener) : WindowStateListener;
	static remove(arg1 : WindowFocusListener, arg2 : WindowFocusListener) : WindowFocusListener;
	static remove(arg1 : ActionListener, arg2 : ActionListener) : ActionListener;
	static remove(arg1 : ItemListener, arg2 : ItemListener) : ItemListener;
	static remove(arg1 : AdjustmentListener, arg2 : AdjustmentListener) : AdjustmentListener;
	static remove(arg1 : TextListener, arg2 : TextListener) : TextListener;
	static remove(arg1 : InputMethodListener, arg2 : InputMethodListener) : InputMethodListener;
	static remove(arg1 : HierarchyListener, arg2 : HierarchyListener) : HierarchyListener;
	static remove(arg1 : HierarchyBoundsListener, arg2 : HierarchyBoundsListener) : HierarchyBoundsListener;
	static remove(arg1 : MouseWheelListener, arg2 : MouseWheelListener) : MouseWheelListener;
	static addInternal(arg1 : EventListener, arg2 : EventListener) : EventListener;
	static removeInternal(arg1 : EventListener, arg2 : EventListener) : EventListener;
	saveInternal(arg1 : ObjectOutputStream, arg2 : string) : void;
	static save(arg1 : ObjectOutputStream, arg2 : string, arg3 : EventListener) : void;
	static getListenerCount(arg1 : EventListener, arg2 : Class<any>) : number;
	static populateListenerArray(arg1 : EventListener[], arg2 : EventListener, arg3 : number) : number;
	static getListeners<T extends EventListener>(arg1 : EventListener, arg2 : Class<T>) : T[];
}


declare interface AWTEventMulticaster extends ComponentListener, ContainerListener, FocusListener, KeyListener, MouseListener, MouseMotionListener, WindowListener, WindowFocusListener, WindowStateListener, ActionListener, ItemListener, AdjustmentListener, TextListener, InputMethodListener, HierarchyListener, HierarchyBoundsListener, MouseWheelListener {}
export = AWTEventMulticaster
