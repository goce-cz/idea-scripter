import ActionListener = require('nashorn/java/awt/event/ActionListener');
import AccessibleContext = require('nashorn/javax/accessibility/AccessibleContext');
import ActionEvent = require('nashorn/java/awt/event/ActionEvent');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import Component = require('nashorn/java/awt/Component');
import Accessible = require('nashorn/javax/accessibility/Accessible');
import AccessibleAction = require('nashorn/javax/accessibility/AccessibleAction');
import AccessibleValue = require('nashorn/javax/accessibility/AccessibleValue');
import AccessibleRole = require('nashorn/javax/accessibility/AccessibleRole');

declare class Button {
	label : string;
	actionCommand : string;
	actionListeners : ActionListener[];
	accessibleContext : AccessibleContext;
	constructor();
	constructor(arg1 : string);
	static initIDs() : void;
	getLabel() : string;
	setLabel(arg1 : string) : void;
	setActionCommand(arg1 : string) : void;
	getActionCommand() : string;
	addActionListener(arg1 : ActionListener) : void;
	removeActionListener(arg1 : ActionListener) : void;
	getActionListeners() : ActionListener[];
	processActionEvent(arg1 : ActionEvent) : void;
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
}


declare interface Button extends Component, Accessible {}

declare module Button {
	class AccessibleAWTButton {
		accessibleName : string;
		accessibleAction : AccessibleAction;
		accessibleValue : AccessibleValue;
		accessibleActionCount : number;
		currentAccessibleValue : number;
		minimumAccessibleValue : number;
		maximumAccessibleValue : number;
		accessibleRole : AccessibleRole;
	}


	interface AccessibleAWTButton extends Component.AccessibleAWTComponent, AccessibleAction, AccessibleValue {}}

export = Button
