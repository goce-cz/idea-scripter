import InetAddress = require('nashorn/java/net/InetAddress');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import SocketAddress = require('nashorn/java/net/SocketAddress');
import Object = require('nashorn/java/lang/Object');

declare class InetSocketAddress {
	port : number;
	address : InetAddress;
	hostName : string;
	hostString : string;
	unresolved : boolean;
	constructor(arg1 : number);
	constructor(arg1 : InetAddress, arg2 : number);
	constructor(arg1 : string, arg2 : number);
	static checkPort(arg1 : number) : number;
	static checkHost(arg1 : string) : string;
	static createUnresolved(arg1 : string, arg2 : number) : InetSocketAddress;
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
	readObjectNoData() : void;
	getPort() : number;
	getAddress() : InetAddress;
	getHostName() : string;
	getHostString() : string;
	isUnresolved() : boolean;
}


declare interface InetSocketAddress extends SocketAddress {}

declare module InetSocketAddress {
	class InetSocketAddressHolder extends Object {
		getPort() : number;
		getAddress() : InetAddress;
		getHostName() : string;
		getHostString() : string;
		isUnresolved() : boolean;
	}
}

export = InetSocketAddress
