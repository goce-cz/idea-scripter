import Permission = require('nashorn/java/security/Permission');
import InputStream = require('nashorn/java/io/InputStream');
import URLConnection = require('nashorn/java/net/URLConnection');

declare class HttpURLConnection {
	static HTTP_OK : number;
	static HTTP_CREATED : number;
	static HTTP_ACCEPTED : number;
	static HTTP_NOT_AUTHORITATIVE : number;
	static HTTP_NO_CONTENT : number;
	static HTTP_RESET : number;
	static HTTP_PARTIAL : number;
	static HTTP_MULT_CHOICE : number;
	static HTTP_MOVED_PERM : number;
	static HTTP_MOVED_TEMP : number;
	static HTTP_SEE_OTHER : number;
	static HTTP_NOT_MODIFIED : number;
	static HTTP_USE_PROXY : number;
	static HTTP_BAD_REQUEST : number;
	static HTTP_UNAUTHORIZED : number;
	static HTTP_PAYMENT_REQUIRED : number;
	static HTTP_FORBIDDEN : number;
	static HTTP_NOT_FOUND : number;
	static HTTP_BAD_METHOD : number;
	static HTTP_NOT_ACCEPTABLE : number;
	static HTTP_PROXY_AUTH : number;
	static HTTP_CLIENT_TIMEOUT : number;
	static HTTP_CONFLICT : number;
	static HTTP_GONE : number;
	static HTTP_LENGTH_REQUIRED : number;
	static HTTP_PRECON_FAILED : number;
	static HTTP_ENTITY_TOO_LARGE : number;
	static HTTP_REQ_TOO_LONG : number;
	static HTTP_UNSUPPORTED_TYPE : number;
	static HTTP_SERVER_ERROR : number;
	static HTTP_INTERNAL_ERROR : number;
	static HTTP_NOT_IMPLEMENTED : number;
	static HTTP_BAD_GATEWAY : number;
	static HTTP_UNAVAILABLE : number;
	static HTTP_GATEWAY_TIMEOUT : number;
	static HTTP_VERSION : number;
	static followRedirects : boolean;
	instanceFollowRedirects : boolean;
	requestMethod : string;
	responseCode : number;
	responseMessage : string;
	permission : Permission;
	errorStream : InputStream;
	setFixedLengthStreamingMode(arg1 : number) : void;
	setFixedLengthStreamingMode(arg1 : number) : void;
	setChunkedStreamingMode(arg1 : number) : void;
	static setFollowRedirects(arg1 : boolean) : void;
	static getFollowRedirects() : boolean;
	setInstanceFollowRedirects(arg1 : boolean) : void;
	getInstanceFollowRedirects() : boolean;
	setRequestMethod(arg1 : string) : void;
	getRequestMethod() : string;
	getResponseCode() : number;
	getResponseMessage() : string;
	disconnect() : void;
	usingProxy() : boolean;
	getErrorStream() : InputStream;
}


declare interface HttpURLConnection extends URLConnection {}
export = HttpURLConnection
