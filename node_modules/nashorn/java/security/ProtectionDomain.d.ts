import Object = require('nashorn/java/lang/Object');
import CodeSource = require('nashorn/java/security/CodeSource');
import ClassLoader = require('nashorn/java/lang/ClassLoader');
import Principal = require('nashorn/java/security/Principal');
import PermissionCollection = require('nashorn/java/security/PermissionCollection');
import Permission = require('nashorn/java/security/Permission');

declare class ProtectionDomain extends Object {
	codeSource : CodeSource;
	classLoader : ClassLoader;
	principals : Principal[];
	permissions : PermissionCollection;
	constructor(arg1 : CodeSource, arg2 : PermissionCollection);
	constructor(arg1 : CodeSource, arg2 : PermissionCollection, arg3 : ClassLoader, arg4 : Principal[]);
	getCodeSource() : CodeSource;
	getClassLoader() : ClassLoader;
	getPrincipals() : Principal[];
	getPermissions() : PermissionCollection;
	implies(arg1 : Permission) : boolean;
	impliesCreateAccessControlContext() : boolean;
	static seeAllp() : boolean;
	mergePermissions() : PermissionCollection;
}


declare module ProtectionDomain {
	class Key extends Object {
	}
}

export = ProtectionDomain
