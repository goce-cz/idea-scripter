import Class = require('nashorn/java/lang/Class');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import Comparable = require('nashorn/java/lang/Comparable');
import Serializable = require('nashorn/java/io/Serializable');

declare class Enum<E extends Enum<E>> {
	declaringClass : Class<E>;
	name() : string;
	ordinal() : number;
	getDeclaringClass() : Class<E>;
	static valueOf<T extends Enum<T>>(arg1 : Class<T>, arg2 : string) : T;
	readObject(arg1 : ObjectInputStream) : void;
	readObjectNoData() : void;
}


declare interface Enum<E extends Enum<E>> extends Comparable<E>, Serializable {}
export = Enum
