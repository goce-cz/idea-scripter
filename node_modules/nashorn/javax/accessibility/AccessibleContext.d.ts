import Object = require('nashorn/java/lang/Object');
import AccessibleRole = require('nashorn/javax/accessibility/AccessibleRole');
import AccessibleStateSet = require('nashorn/javax/accessibility/AccessibleStateSet');
import Accessible = require('nashorn/javax/accessibility/Accessible');
import Locale = require('nashorn/java/util/Locale');
import AccessibleAction = require('nashorn/javax/accessibility/AccessibleAction');
import AccessibleComponent = require('nashorn/javax/accessibility/AccessibleComponent');
import AccessibleSelection = require('nashorn/javax/accessibility/AccessibleSelection');
import AccessibleText = require('nashorn/javax/accessibility/AccessibleText');
import AccessibleEditableText = require('nashorn/javax/accessibility/AccessibleEditableText');
import AccessibleValue = require('nashorn/javax/accessibility/AccessibleValue');
import AccessibleIcon = require('nashorn/javax/accessibility/AccessibleIcon');
import AccessibleRelationSet = require('nashorn/javax/accessibility/AccessibleRelationSet');
import AccessibleTable = require('nashorn/javax/accessibility/AccessibleTable');
import PropertyChangeListener = require('nashorn/java/beans/PropertyChangeListener');

declare class AccessibleContext extends Object {
	static ACCESSIBLE_NAME_PROPERTY : string;
	static ACCESSIBLE_DESCRIPTION_PROPERTY : string;
	static ACCESSIBLE_STATE_PROPERTY : string;
	static ACCESSIBLE_VALUE_PROPERTY : string;
	static ACCESSIBLE_SELECTION_PROPERTY : string;
	static ACCESSIBLE_CARET_PROPERTY : string;
	static ACCESSIBLE_VISIBLE_DATA_PROPERTY : string;
	static ACCESSIBLE_CHILD_PROPERTY : string;
	static ACCESSIBLE_ACTIVE_DESCENDANT_PROPERTY : string;
	static ACCESSIBLE_TABLE_CAPTION_CHANGED : string;
	static ACCESSIBLE_TABLE_SUMMARY_CHANGED : string;
	static ACCESSIBLE_TABLE_MODEL_CHANGED : string;
	static ACCESSIBLE_TABLE_ROW_HEADER_CHANGED : string;
	static ACCESSIBLE_TABLE_ROW_DESCRIPTION_CHANGED : string;
	static ACCESSIBLE_TABLE_COLUMN_HEADER_CHANGED : string;
	static ACCESSIBLE_TABLE_COLUMN_DESCRIPTION_CHANGED : string;
	static ACCESSIBLE_ACTION_PROPERTY : string;
	static ACCESSIBLE_HYPERTEXT_OFFSET : string;
	static ACCESSIBLE_TEXT_PROPERTY : string;
	static ACCESSIBLE_INVALIDATE_CHILDREN : string;
	static ACCESSIBLE_TEXT_ATTRIBUTES_CHANGED : string;
	static ACCESSIBLE_COMPONENT_BOUNDS_CHANGED : string;
	accessibleName : string;
	accessibleDescription : string;
	accessibleRole : AccessibleRole;
	accessibleStateSet : AccessibleStateSet;
	accessibleParent : Accessible;
	accessibleIndexInParent : number;
	accessibleChildrenCount : number;
	locale : Locale;
	accessibleAction : AccessibleAction;
	accessibleComponent : AccessibleComponent;
	accessibleSelection : AccessibleSelection;
	accessibleText : AccessibleText;
	accessibleEditableText : AccessibleEditableText;
	accessibleValue : AccessibleValue;
	accessibleIcon : AccessibleIcon[];
	accessibleRelationSet : AccessibleRelationSet;
	accessibleTable : AccessibleTable;
	constructor();
	getAccessibleName() : string;
	setAccessibleName(arg1 : string) : void;
	getAccessibleDescription() : string;
	setAccessibleDescription(arg1 : string) : void;
	getAccessibleRole() : AccessibleRole;
	getAccessibleStateSet() : AccessibleStateSet;
	getAccessibleParent() : Accessible;
	setAccessibleParent(arg1 : Accessible) : void;
	getAccessibleIndexInParent() : number;
	getAccessibleChildrenCount() : number;
	getAccessibleChild(arg1 : number) : Accessible;
	getLocale() : Locale;
	addPropertyChangeListener(arg1 : PropertyChangeListener) : void;
	removePropertyChangeListener(arg1 : PropertyChangeListener) : void;
	getAccessibleAction() : AccessibleAction;
	getAccessibleComponent() : AccessibleComponent;
	getAccessibleSelection() : AccessibleSelection;
	getAccessibleText() : AccessibleText;
	getAccessibleEditableText() : AccessibleEditableText;
	getAccessibleValue() : AccessibleValue;
	getAccessibleIcon() : AccessibleIcon[];
	getAccessibleRelationSet() : AccessibleRelationSet;
	getAccessibleTable() : AccessibleTable;
	firePropertyChange(arg1 : string, arg2 : Object, arg3 : Object) : void;
}

export = AccessibleContext
