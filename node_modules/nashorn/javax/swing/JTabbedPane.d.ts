import TabbedPaneUI = require('nashorn/javax/swing/plaf/TabbedPaneUI');
import ChangeListener = require('nashorn/javax/swing/event/ChangeListener');
import SingleSelectionModel = require('nashorn/javax/swing/SingleSelectionModel');
import Component = require('nashorn/java/awt/Component');
import AccessibleContext = require('nashorn/javax/accessibility/AccessibleContext');
import Icon = require('nashorn/javax/swing/Icon');
import Color = require('nashorn/java/awt/Color');
import Rectangle = require('nashorn/java/awt/Rectangle');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import JComponent = require('nashorn/javax/swing/JComponent');
import Serializable = require('nashorn/java/io/Serializable');
import Accessible = require('nashorn/javax/accessibility/Accessible');
import SwingConstants = require('nashorn/javax/swing/SwingConstants');
import AccessibleRole = require('nashorn/javax/accessibility/AccessibleRole');
import AccessibleSelection = require('nashorn/javax/accessibility/AccessibleSelection');
import AccessibleStateSet = require('nashorn/javax/accessibility/AccessibleStateSet');
import Locale = require('nashorn/java/util/Locale');
import AccessibleComponent = require('nashorn/javax/accessibility/AccessibleComponent');
import Cursor = require('nashorn/java/awt/Cursor');
import Font = require('nashorn/java/awt/Font');
import Point = require('nashorn/java/awt/Point');
import Dimension = require('nashorn/java/awt/Dimension');
import AccessibleIcon = require('nashorn/javax/accessibility/AccessibleIcon');

declare class JTabbedPane {
	static WRAP_TAB_LAYOUT : number;
	static SCROLL_TAB_LAYOUT : number;
	uI : TabbedPaneUI;
	uIClassID : string;
	changeListeners : ChangeListener[];
	model : SingleSelectionModel;
	tabPlacement : number;
	tabLayoutPolicy : number;
	selectedIndex : number;
	selectedComponent : Component;
	tabCount : number;
	tabRunCount : number;
	accessibleContext : AccessibleContext;
	constructor();
	constructor(arg1 : number);
	constructor(arg1 : number, arg2 : number);
	getUI() : TabbedPaneUI;
	setUI(arg1 : TabbedPaneUI) : void;
	createChangeListener() : ChangeListener;
	addChangeListener(arg1 : ChangeListener) : void;
	removeChangeListener(arg1 : ChangeListener) : void;
	getChangeListeners() : ChangeListener[];
	fireStateChanged() : void;
	getModel() : SingleSelectionModel;
	setModel(arg1 : SingleSelectionModel) : void;
	getTabPlacement() : number;
	setTabPlacement(arg1 : number) : void;
	getTabLayoutPolicy() : number;
	setTabLayoutPolicy(arg1 : number) : void;
	getSelectedIndex() : number;
	setSelectedIndex(arg1 : number) : void;
	setSelectedIndexImpl(arg1 : number, arg2 : boolean) : void;
	changeAccessibleSelection(arg1 : JTabbedPane.Page, arg2 : string, arg3 : JTabbedPane.Page) : void;
	getSelectedComponent() : Component;
	setSelectedComponent(arg1 : Component) : void;
	insertTab(arg1 : string, arg2 : Icon, arg3 : Component, arg4 : string, arg5 : number) : void;
	addTab(arg1 : string, arg2 : Icon, arg3 : Component, arg4 : string) : void;
	addTab(arg1 : string, arg2 : Icon, arg3 : Component) : void;
	addTab(arg1 : string, arg2 : Component) : void;
	removeTabAt(arg1 : number) : void;
	getTabCount() : number;
	getTabRunCount() : number;
	getTitleAt(arg1 : number) : string;
	getIconAt(arg1 : number) : Icon;
	getDisabledIconAt(arg1 : number) : Icon;
	getToolTipTextAt(arg1 : number) : string;
	getBackgroundAt(arg1 : number) : Color;
	getForegroundAt(arg1 : number) : Color;
	isEnabledAt(arg1 : number) : boolean;
	getComponentAt(arg1 : number) : Component;
	getMnemonicAt(arg1 : number) : number;
	getDisplayedMnemonicIndexAt(arg1 : number) : number;
	getBoundsAt(arg1 : number) : Rectangle;
	setTitleAt(arg1 : number, arg2 : string) : void;
	setIconAt(arg1 : number, arg2 : Icon) : void;
	setDisabledIconAt(arg1 : number, arg2 : Icon) : void;
	setToolTipTextAt(arg1 : number, arg2 : string) : void;
	setBackgroundAt(arg1 : number, arg2 : Color) : void;
	setForegroundAt(arg1 : number, arg2 : Color) : void;
	setEnabledAt(arg1 : number, arg2 : boolean) : void;
	setComponentAt(arg1 : number, arg2 : Component) : void;
	setDisplayedMnemonicIndexAt(arg1 : number, arg2 : number) : void;
	setMnemonicAt(arg1 : number, arg2 : number) : void;
	indexOfTab(arg1 : string) : number;
	indexOfTab(arg1 : Icon) : number;
	indexOfComponent(arg1 : Component) : number;
	indexAtLocation(arg1 : number, arg2 : number) : number;
	checkIndex(arg1 : number) : void;
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
	setTabComponentAt(arg1 : number, arg2 : Component) : void;
	getTabComponentAt(arg1 : number) : Component;
	indexOfTabComponent(arg1 : Component) : number;
}


declare interface JTabbedPane extends JComponent, Serializable, Accessible, SwingConstants {}

declare module JTabbedPane {
	class AccessibleJTabbedPane {
		accessibleName : string;
		accessibleRole : AccessibleRole;
		accessibleChildrenCount : number;
		accessibleSelection : AccessibleSelection;
		accessibleSelectionCount : number;
		constructor();
	}


	interface AccessibleJTabbedPane extends JComponent.AccessibleJComponent, AccessibleSelection, ChangeListener {}	class ModelListener {
	}


	interface ModelListener extends ChangeListener, Serializable {}	class Page {
		accessibleContext : AccessibleContext;
		accessibleName : string;
		accessibleDescription : string;
		accessibleRole : AccessibleRole;
		accessibleStateSet : AccessibleStateSet;
		accessibleIndexInParent : number;
		accessibleChildrenCount : number;
		locale : Locale;
		accessibleComponent : AccessibleComponent;
		background : Color;
		foreground : Color;
		cursor : Cursor;
		font : Font;
		enabled : boolean;
		visible : boolean;
		showing : boolean;
		locationOnScreen : Point;
		location : Point;
		bounds : Rectangle;
		size : Dimension;
		focusTraversable : boolean;
		accessibleIcon : AccessibleIcon[];
		initAccessibleContext() : void;
		setMnemonic(arg1 : number) : void;
		getMnemonic() : number;
		setDisplayedMnemonicIndex(arg1 : number) : void;
		getDisplayedMnemonicIndex() : number;
		updateDisplayedMnemonicIndex() : void;
	}


	interface Page extends AccessibleContext, Serializable, Accessible, AccessibleComponent {}}

export = JTabbedPane
