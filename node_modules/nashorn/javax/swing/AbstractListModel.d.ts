import ListDataListener = require('nashorn/javax/swing/event/ListDataListener');
import Object = require('nashorn/java/lang/Object');
import EventListener = require('nashorn/java/util/EventListener');
import Class = require('nashorn/java/lang/Class');
import ListModel = require('nashorn/javax/swing/ListModel');
import Serializable = require('nashorn/java/io/Serializable');

declare class AbstractListModel<E> {
	listDataListeners : ListDataListener[];
	constructor();
	getListDataListeners() : ListDataListener[];
	fireContentsChanged(arg1 : Object, arg2 : number, arg3 : number) : void;
	fireIntervalAdded(arg1 : Object, arg2 : number, arg3 : number) : void;
	fireIntervalRemoved(arg1 : Object, arg2 : number, arg3 : number) : void;
	getListeners<T extends EventListener>(arg1 : Class<T>) : T[];
}


declare interface AbstractListModel<E> extends ListModel<E>, Serializable {}
export = AbstractListModel
