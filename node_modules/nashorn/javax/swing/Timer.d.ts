import ActionListener = require('nashorn/java/awt/event/ActionListener');
import AccessControlContext = require('nashorn/java/security/AccessControlContext');
import ActionEvent = require('nashorn/java/awt/event/ActionEvent');
import EventListener = require('nashorn/java/util/EventListener');
import Class = require('nashorn/java/lang/Class');
import TimerQueue = require('nashorn/javax/swing/TimerQueue');
import Lock = require('nashorn/java/util/concurrent/locks/Lock');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import Object = require('nashorn/java/lang/Object');
import Serializable = require('nashorn/java/io/Serializable');
import Runnable = require('nashorn/java/lang/Runnable');

declare class Timer {
	actionListeners : ActionListener[];
	static logTimers : boolean;
	delay : number;
	initialDelay : number;
	repeats : boolean;
	coalesce : boolean;
	actionCommand : string;
	running : boolean;
	constructor(arg1 : number, arg2 : ActionListener);
	getAccessControlContext() : AccessControlContext;
	addActionListener(arg1 : ActionListener) : void;
	removeActionListener(arg1 : ActionListener) : void;
	getActionListeners() : ActionListener[];
	fireActionPerformed(arg1 : ActionEvent) : void;
	getListeners<T extends EventListener>(arg1 : Class<T>) : T[];
	timerQueue() : TimerQueue;
	static setLogTimers(arg1 : boolean) : void;
	static getLogTimers() : boolean;
	setDelay(arg1 : number) : void;
	getDelay() : number;
	setInitialDelay(arg1 : number) : void;
	getInitialDelay() : number;
	setRepeats(arg1 : boolean) : void;
	isRepeats() : boolean;
	setCoalesce(arg1 : boolean) : void;
	isCoalesce() : boolean;
	setActionCommand(arg1 : string) : void;
	getActionCommand() : string;
	start() : void;
	isRunning() : boolean;
	stop() : void;
	restart() : void;
	cancelEvent() : void;
	post() : void;
	getLock() : Lock;
	readObject(arg1 : ObjectInputStream) : void;
	readResolve() : Object;
}


declare interface Timer extends Serializable {}

declare module Timer {
	class DoPostEvent {
		getTimer() : Timer;
	}


	interface DoPostEvent extends Runnable {}}

export = Timer
