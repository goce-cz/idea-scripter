import TableModelListener = require('nashorn/javax/swing/event/TableModelListener');
import TableModelEvent = require('nashorn/javax/swing/event/TableModelEvent');
import EventListener = require('nashorn/java/util/EventListener');
import Class = require('nashorn/java/lang/Class');
import TableModel = require('nashorn/javax/swing/table/TableModel');
import Serializable = require('nashorn/java/io/Serializable');

declare class AbstractTableModel {
	tableModelListeners : TableModelListener[];
	constructor();
	findColumn(arg1 : string) : number;
	getTableModelListeners() : TableModelListener[];
	fireTableDataChanged() : void;
	fireTableStructureChanged() : void;
	fireTableRowsInserted(arg1 : number, arg2 : number) : void;
	fireTableRowsUpdated(arg1 : number, arg2 : number) : void;
	fireTableRowsDeleted(arg1 : number, arg2 : number) : void;
	fireTableCellUpdated(arg1 : number, arg2 : number) : void;
	fireTableChanged(arg1 : TableModelEvent) : void;
	getListeners<T extends EventListener>(arg1 : Class<T>) : T[];
}


declare interface AbstractTableModel extends TableModel, Serializable {}
export = AbstractTableModel
