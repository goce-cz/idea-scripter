import JTable = require('nashorn/javax/swing/JTable');
import TableColumn = require('nashorn/javax/swing/table/TableColumn');
import TableCellRenderer = require('nashorn/javax/swing/table/TableCellRenderer');
import TableHeaderUI = require('nashorn/javax/swing/plaf/TableHeaderUI');
import TableColumnModel = require('nashorn/javax/swing/table/TableColumnModel');
import AccessibleContext = require('nashorn/javax/accessibility/AccessibleContext');
import Point = require('nashorn/java/awt/Point');
import Rectangle = require('nashorn/java/awt/Rectangle');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import JComponent = require('nashorn/javax/swing/JComponent');
import TableColumnModelListener = require('nashorn/javax/swing/event/TableColumnModelListener');
import Accessible = require('nashorn/javax/accessibility/Accessible');
import AccessibleRole = require('nashorn/javax/accessibility/AccessibleRole');
import AccessibleStateSet = require('nashorn/javax/accessibility/AccessibleStateSet');
import Locale = require('nashorn/java/util/Locale');
import AccessibleAction = require('nashorn/javax/accessibility/AccessibleAction');
import AccessibleComponent = require('nashorn/javax/accessibility/AccessibleComponent');
import AccessibleSelection = require('nashorn/javax/accessibility/AccessibleSelection');
import AccessibleText = require('nashorn/javax/accessibility/AccessibleText');
import AccessibleValue = require('nashorn/javax/accessibility/AccessibleValue');
import Color = require('nashorn/java/awt/Color');
import Cursor = require('nashorn/java/awt/Cursor');
import Font = require('nashorn/java/awt/Font');
import Dimension = require('nashorn/java/awt/Dimension');
import Component = require('nashorn/java/awt/Component');

declare class JTableHeader {
	table : JTable;
	reorderingAllowed : boolean;
	resizingAllowed : boolean;
	draggedColumn : TableColumn;
	draggedDistance : number;
	resizingColumn : TableColumn;
	updateTableInRealTime : boolean;
	defaultRenderer : TableCellRenderer;
	uI : TableHeaderUI;
	uIClassID : string;
	columnModel : TableColumnModel;
	accessibleContext : AccessibleContext;
	constructor();
	constructor(arg1 : TableColumnModel);
	setTable(arg1 : JTable) : void;
	getTable() : JTable;
	setReorderingAllowed(arg1 : boolean) : void;
	getReorderingAllowed() : boolean;
	setResizingAllowed(arg1 : boolean) : void;
	getResizingAllowed() : boolean;
	getDraggedColumn() : TableColumn;
	getDraggedDistance() : number;
	getResizingColumn() : TableColumn;
	setUpdateTableInRealTime(arg1 : boolean) : void;
	getUpdateTableInRealTime() : boolean;
	setDefaultRenderer(arg1 : TableCellRenderer) : void;
	getDefaultRenderer() : TableCellRenderer;
	columnAtPoint(arg1 : Point) : number;
	getHeaderRect(arg1 : number) : Rectangle;
	getUI() : TableHeaderUI;
	setUI(arg1 : TableHeaderUI) : void;
	setColumnModel(arg1 : TableColumnModel) : void;
	getColumnModel() : TableColumnModel;
	createDefaultColumnModel() : TableColumnModel;
	createDefaultRenderer() : TableCellRenderer;
	initializeLocalVars() : void;
	resizeAndRepaint() : void;
	setDraggedColumn(arg1 : TableColumn) : void;
	setDraggedDistance(arg1 : number) : void;
	setResizingColumn(arg1 : TableColumn) : void;
	writeObject(arg1 : ObjectOutputStream) : void;
	getWidthInRightToLeft() : number;
}


declare interface JTableHeader extends JComponent, TableColumnModelListener, Accessible {}

declare module JTableHeader {
	class AccessibleJTableHeader {
		accessibleRole : AccessibleRole;
		accessibleChildrenCount : number;
	}


	interface AccessibleJTableHeader extends JComponent.AccessibleJComponent {}

	module AccessibleJTableHeader {
		class AccessibleJTableHeaderEntry {
			accessibleContext : AccessibleContext;
			accessibleName : string;
			accessibleDescription : string;
			accessibleRole : AccessibleRole;
			accessibleStateSet : AccessibleStateSet;
			accessibleIndexInParent : number;
			accessibleChildrenCount : number;
			locale : Locale;
			accessibleAction : AccessibleAction;
			accessibleComponent : AccessibleComponent;
			accessibleSelection : AccessibleSelection;
			accessibleText : AccessibleText;
			accessibleValue : AccessibleValue;
			background : Color;
			foreground : Color;
			cursor : Cursor;
			font : Font;
			enabled : boolean;
			visible : boolean;
			showing : boolean;
			locationOnScreen : Point;
			location : Point;
			bounds : Rectangle;
			size : Dimension;
			focusTraversable : boolean;
			constructor(arg1 : number, arg2 : JTableHeader, arg3 : JTable);
			getCurrentAccessibleContext() : AccessibleContext;
			getCurrentComponent() : Component;
		}


		interface AccessibleJTableHeaderEntry extends AccessibleContext, Accessible, AccessibleComponent {}	}
}

export = JTableHeader
