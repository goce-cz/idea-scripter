import Component = require('nashorn/java/awt/Component');
import JPopupMenu = require('nashorn/javax/swing/JPopupMenu');
import MenuListener = require('nashorn/javax/swing/event/MenuListener');
import MenuElement = require('nashorn/javax/swing/MenuElement');
import AccessibleContext = require('nashorn/javax/accessibility/AccessibleContext');
import Action = require('nashorn/javax/swing/Action');
import Point = require('nashorn/java/awt/Point');
import JMenuItem = require('nashorn/javax/swing/JMenuItem');
import PropertyChangeListener = require('nashorn/java/beans/PropertyChangeListener');
import ChangeListener = require('nashorn/javax/swing/event/ChangeListener');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import Accessible = require('nashorn/javax/accessibility/Accessible');
import AccessibleRole = require('nashorn/javax/accessibility/AccessibleRole');
import AccessibleSelection = require('nashorn/javax/accessibility/AccessibleSelection');
import Serializable = require('nashorn/java/io/Serializable');
import WindowAdapter = require('nashorn/java/awt/event/WindowAdapter');

declare class JMenu {
	uIClassID : string;
	selected : boolean;
	popupMenuVisible : boolean;
	delay : number;
	itemCount : number;
	tearOff : boolean;
	menuComponentCount : number;
	menuComponents : Component[];
	topLevelMenu : boolean;
	popupMenu : JPopupMenu;
	menuListeners : MenuListener[];
	subElements : MenuElement[];
	component : Component;
	accessibleContext : AccessibleContext;
	constructor();
	constructor(arg1 : string);
	constructor(arg1 : Action);
	constructor(arg1 : string, arg2 : boolean);
	isPopupMenuVisible() : boolean;
	setPopupMenuVisible(arg1 : boolean) : void;
	getPopupMenuOrigin() : Point;
	getDelay() : number;
	setDelay(arg1 : number) : void;
	ensurePopupMenuCreated() : void;
	getCustomMenuLocation() : Point;
	setMenuLocation(arg1 : number, arg2 : number) : void;
	add(arg1 : JMenuItem) : JMenuItem;
	add(arg1 : string) : JMenuItem;
	add(arg1 : Action) : JMenuItem;
	createActionComponent(arg1 : Action) : JMenuItem;
	createActionChangeListener(arg1 : JMenuItem) : PropertyChangeListener;
	addSeparator() : void;
	insert(arg1 : string, arg2 : number) : void;
	insert(arg1 : JMenuItem, arg2 : number) : JMenuItem;
	insert(arg1 : Action, arg2 : number) : JMenuItem;
	insertSeparator(arg1 : number) : void;
	getItem(arg1 : number) : JMenuItem;
	getItemCount() : number;
	isTearOff() : boolean;
	remove(arg1 : JMenuItem) : void;
	getMenuComponentCount() : number;
	getMenuComponent(arg1 : number) : Component;
	getMenuComponents() : Component[];
	isTopLevelMenu() : boolean;
	isMenuComponent(arg1 : Component) : boolean;
	translateToPopupMenu(arg1 : Point) : Point;
	translateToPopupMenu(arg1 : number, arg2 : number) : Point;
	getPopupMenu() : JPopupMenu;
	addMenuListener(arg1 : MenuListener) : void;
	removeMenuListener(arg1 : MenuListener) : void;
	getMenuListeners() : MenuListener[];
	fireMenuSelected() : void;
	fireMenuDeselected() : void;
	fireMenuCanceled() : void;
	createMenuChangeListener() : ChangeListener;
	createWinListener(arg1 : JPopupMenu) : JMenu.WinListener;
	buildMenuElementArray(arg1 : JMenu) : MenuElement[];
	writeObject(arg1 : ObjectOutputStream) : void;
}


declare interface JMenu extends JMenuItem, Accessible, MenuElement {}

declare module JMenu {
	class AccessibleJMenu {
		accessibleChildrenCount : number;
		accessibleRole : AccessibleRole;
		accessibleSelection : AccessibleSelection;
		accessibleSelectionCount : number;
	}


	interface AccessibleJMenu extends JMenuItem.AccessibleJMenuItem, AccessibleSelection {}	class MenuChangeListener {
	}


	interface MenuChangeListener extends ChangeListener, Serializable {}	class WinListener {
		constructor(arg1 : JPopupMenu);
	}


	interface WinListener extends WindowAdapter, Serializable {}}

export = JMenu
