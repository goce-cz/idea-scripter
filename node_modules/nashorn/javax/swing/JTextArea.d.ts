import Dimension = require('nashorn/java/awt/Dimension');
import AccessibleContext = require('nashorn/javax/accessibility/AccessibleContext');
import Document = require('nashorn/javax/swing/text/Document');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import JTextComponent = require('nashorn/javax/swing/text/JTextComponent');
import AccessibleStateSet = require('nashorn/javax/accessibility/AccessibleStateSet');

declare class JTextArea {
	UIClassID : string;
	tabSize : number;
	lineWrap : boolean;
	wrapStyleWord : boolean;
	lineCount : number;
	rows : number;
	columns : number;
	preferredSize : Dimension;
	scrollableTracksViewportWidth : boolean;
	preferredScrollableViewportSize : Dimension;
	accessibleContext : AccessibleContext;
	constructor();
	constructor(arg1 : string);
	constructor(arg1 : number, arg2 : number);
	constructor(arg1 : string, arg2 : number, arg3 : number);
	constructor(arg1 : Document);
	constructor(arg1 : Document, arg2 : string, arg3 : number, arg4 : number);
	createDefaultModel() : Document;
	setTabSize(arg1 : number) : void;
	getTabSize() : number;
	setLineWrap(arg1 : boolean) : void;
	getLineWrap() : boolean;
	setWrapStyleWord(arg1 : boolean) : void;
	getWrapStyleWord() : boolean;
	getLineOfOffset(arg1 : number) : number;
	getLineCount() : number;
	getLineStartOffset(arg1 : number) : number;
	getLineEndOffset(arg1 : number) : number;
	insert(arg1 : string, arg2 : number) : void;
	append(arg1 : string) : void;
	replaceRange(arg1 : string, arg2 : number, arg3 : number) : void;
	getRows() : number;
	setRows(arg1 : number) : void;
	getRowHeight() : number;
	getColumns() : number;
	setColumns(arg1 : number) : void;
	getColumnWidth() : number;
	writeObject(arg1 : ObjectOutputStream) : void;
}


declare interface JTextArea extends JTextComponent {}

declare module JTextArea {
	class AccessibleJTextArea {
		accessibleStateSet : AccessibleStateSet;
	}


	interface AccessibleJTextArea extends JTextComponent.AccessibleJTextComponent {}}

export = JTextArea
