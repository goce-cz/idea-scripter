import RowMapper = require('nashorn/javax/swing/tree/RowMapper');
import TreePath = require('nashorn/javax/swing/tree/TreePath');
import TreeSelectionListener = require('nashorn/javax/swing/event/TreeSelectionListener');
import PropertyChangeListener = require('nashorn/java/beans/PropertyChangeListener');
import TreeSelectionEvent = require('nashorn/javax/swing/event/TreeSelectionEvent');
import EventListener = require('nashorn/java/util/EventListener');
import Class = require('nashorn/java/lang/Class');
import Vector = require('nashorn/java/util/Vector');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import Cloneable = require('nashorn/java/lang/Cloneable');
import Serializable = require('nashorn/java/io/Serializable');
import TreeSelectionModel = require('nashorn/javax/swing/tree/TreeSelectionModel');

declare class DefaultTreeSelectionModel {
	static SELECTION_MODE_PROPERTY : string;
	rowMapper : RowMapper;
	selectionMode : number;
	selectionPath : TreePath;
	selectionPaths : TreePath[];
	selectionCount : number;
	selectionEmpty : boolean;
	treeSelectionListeners : TreeSelectionListener[];
	selectionRows : number[];
	minSelectionRow : number;
	maxSelectionRow : number;
	leadSelectionRow : number;
	leadSelectionPath : TreePath;
	propertyChangeListeners : PropertyChangeListener[];
	constructor();
	getTreeSelectionListeners() : TreeSelectionListener[];
	fireValueChanged(arg1 : TreeSelectionEvent) : void;
	getListeners<T extends EventListener>(arg1 : Class<T>) : T[];
	getPropertyChangeListeners() : PropertyChangeListener[];
	insureRowContinuity() : void;
	arePathsContiguous(arg1 : TreePath[]) : boolean;
	canPathsBeAdded(arg1 : TreePath[]) : boolean;
	canPathsBeRemoved(arg1 : TreePath[]) : boolean;
	notifyPathChange(arg1 : Vector<any>, arg2 : TreePath) : void;
	updateLeadIndex() : void;
	insureUniqueness() : void;
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
}


declare interface DefaultTreeSelectionModel extends Cloneable, Serializable, TreeSelectionModel {}
export = DefaultTreeSelectionModel
