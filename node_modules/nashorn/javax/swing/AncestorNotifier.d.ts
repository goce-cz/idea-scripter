import AncestorListener = require('nashorn/javax/swing/event/AncestorListener');
import JComponent = require('nashorn/javax/swing/JComponent');
import Container = require('nashorn/java/awt/Container');
import Component = require('nashorn/java/awt/Component');
import ComponentListener = require('nashorn/java/awt/event/ComponentListener');
import PropertyChangeListener = require('nashorn/java/beans/PropertyChangeListener');
import Serializable = require('nashorn/java/io/Serializable');

declare class AncestorNotifier {
	addAncestorListener(arg1 : AncestorListener) : void;
	removeAncestorListener(arg1 : AncestorListener) : void;
	getAncestorListeners() : AncestorListener[];
	fireAncestorAdded(arg1 : JComponent, arg2 : number, arg3 : Container, arg4 : Container) : void;
	fireAncestorRemoved(arg1 : JComponent, arg2 : number, arg3 : Container, arg4 : Container) : void;
	fireAncestorMoved(arg1 : JComponent, arg2 : number, arg3 : Container, arg4 : Container) : void;
	removeAllListeners() : void;
	addListeners(arg1 : Component, arg2 : boolean) : void;
	removeListeners(arg1 : Component) : void;
}


declare interface AncestorNotifier extends ComponentListener, PropertyChangeListener, Serializable {}
export = AncestorNotifier
