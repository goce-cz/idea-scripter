import LookAndFeel = require('nashorn/javax/swing/LookAndFeel');
import UIDefaults = require('nashorn/javax/swing/UIDefaults');
import PropertyChangeListener = require('nashorn/java/beans/PropertyChangeListener');
import Object = require('nashorn/java/lang/Object');
import Font = require('nashorn/java/awt/Font');
import Locale = require('nashorn/java/util/Locale');
import Color = require('nashorn/java/awt/Color');
import Icon = require('nashorn/javax/swing/Icon');
import Border = require('nashorn/javax/swing/border/Border');
import Component = require('nashorn/java/awt/Component');
import Insets = require('nashorn/java/awt/Insets');
import Dimension = require('nashorn/java/awt/Dimension');
import JComponent = require('nashorn/javax/swing/JComponent');
import ComponentUI = require('nashorn/javax/swing/plaf/ComponentUI');
import Properties = require('nashorn/java/util/Properties');
import Serializable = require('nashorn/java/io/Serializable');
import SwingPropertyChangeSupport = require('nashorn/javax/swing/event/SwingPropertyChangeSupport');

declare class UIManager {
	static installedLookAndFeels : UIManager.LookAndFeelInfo[];
	static lookAndFeel : LookAndFeel;
	static systemLookAndFeelClassName : string;
	static crossPlatformLookAndFeelClassName : string;
	static defaults : UIDefaults;
	static lookAndFeelDefaults : UIDefaults;
	static auxiliaryLookAndFeels : LookAndFeel[];
	static propertyChangeListeners : PropertyChangeListener[];
	constructor();
	static getLAFState() : UIManager.LAFState;
	static makeInstalledLAFKey(arg1 : string, arg2 : string) : string;
	static makeSwingPropertiesFilename() : string;
	static getInstalledLookAndFeels() : UIManager.LookAndFeelInfo[];
	static setInstalledLookAndFeels(arg1 : UIManager.LookAndFeelInfo[]) : void;
	static installLookAndFeel(arg1 : UIManager.LookAndFeelInfo) : void;
	static installLookAndFeel(arg1 : string, arg2 : string) : void;
	static getLookAndFeel() : LookAndFeel;
	static setLookAndFeel(arg1 : LookAndFeel) : void;
	static setLookAndFeel(arg1 : string) : void;
	static getSystemLookAndFeelClassName() : string;
	static getCrossPlatformLookAndFeelClassName() : string;
	static getDefaults() : UIDefaults;
	static getFont(arg1 : Object) : Font;
	static getFont(arg1 : Object, arg2 : Locale) : Font;
	static getColor(arg1 : Object) : Color;
	static getColor(arg1 : Object, arg2 : Locale) : Color;
	static getIcon(arg1 : Object) : Icon;
	static getIcon(arg1 : Object, arg2 : Locale) : Icon;
	static getBorder(arg1 : Object) : Border;
	static getBorder(arg1 : Object, arg2 : Locale) : Border;
	static getString(arg1 : Object) : string;
	static getString(arg1 : Object, arg2 : Locale) : string;
	static getString(arg1 : Object, arg2 : Component) : string;
	static getInt(arg1 : Object) : number;
	static getInt(arg1 : Object, arg2 : Locale) : number;
	static getBoolean(arg1 : Object) : boolean;
	static getBoolean(arg1 : Object, arg2 : Locale) : boolean;
	static getInsets(arg1 : Object) : Insets;
	static getInsets(arg1 : Object, arg2 : Locale) : Insets;
	static getDimension(arg1 : Object) : Dimension;
	static getDimension(arg1 : Object, arg2 : Locale) : Dimension;
	static get(arg1 : Object) : Object;
	static get(arg1 : Object, arg2 : Locale) : Object;
	static put(arg1 : Object, arg2 : Object) : Object;
	static getUI(arg1 : JComponent) : ComponentUI;
	static getLookAndFeelDefaults() : UIDefaults;
	static getMultiLookAndFeel() : LookAndFeel;
	static addAuxiliaryLookAndFeel(arg1 : LookAndFeel) : void;
	static removeAuxiliaryLookAndFeel(arg1 : LookAndFeel) : boolean;
	static getAuxiliaryLookAndFeels() : LookAndFeel[];
	static addPropertyChangeListener(arg1 : PropertyChangeListener) : void;
	static removePropertyChangeListener(arg1 : PropertyChangeListener) : void;
	static getPropertyChangeListeners() : PropertyChangeListener[];
	static loadSwingProperties() : Properties;
	static checkProperty(arg1 : Properties, arg2 : string) : void;
	static initializeInstalledLAFs(arg1 : Properties) : void;
	static initializeDefaultLAF(arg1 : Properties) : void;
	static initializeAuxiliaryLAFs(arg1 : Properties) : void;
	static initializeSystemDefaults(arg1 : Properties) : void;
	static maybeInitialize() : void;
	static maybeInitializeFocusPolicy(arg1 : JComponent) : void;
	static initialize() : void;
}


declare interface UIManager extends Serializable {}

declare module UIManager {
	class LAFState extends Object {
		getLookAndFeelDefaults() : UIDefaults;
		setLookAndFeelDefaults(arg1 : UIDefaults) : void;
		getSystemDefaults() : UIDefaults;
		setSystemDefaults(arg1 : UIDefaults) : void;
		getPropertyChangeSupport(arg1 : boolean) : SwingPropertyChangeSupport;
	}
	class LookAndFeelInfo extends Object {
		name : string;
		className : string;
		constructor(arg1 : string, arg2 : string);
		getName() : string;
		getClassName() : string;
	}
}

export = UIManager
