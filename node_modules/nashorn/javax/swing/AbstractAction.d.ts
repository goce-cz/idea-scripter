import Object = require('nashorn/java/lang/Object');
import PropertyChangeListener = require('nashorn/java/beans/PropertyChangeListener');
import Icon = require('nashorn/javax/swing/Icon');
import PropertyChangeEvent = require('nashorn/java/beans/PropertyChangeEvent');
import JComponent = require('nashorn/javax/swing/JComponent');
import Action = require('nashorn/javax/swing/Action');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import Cloneable = require('nashorn/java/lang/Cloneable');
import Serializable = require('nashorn/java/io/Serializable');

declare class AbstractAction {
	enabled : boolean;
	keys : Object[];
	propertyChangeListeners : PropertyChangeListener[];
	constructor();
	constructor(arg1 : string);
	constructor(arg1 : string, arg2 : Icon);
	static shouldReconfigure(arg1 : PropertyChangeEvent) : boolean;
	static setEnabledFromAction(arg1 : JComponent, arg2 : Action) : void;
	static setToolTipTextFromAction(arg1 : JComponent, arg2 : Action) : void;
	static hasSelectedKey(arg1 : Action) : boolean;
	static isSelected(arg1 : Action) : boolean;
	getKeys() : Object[];
	firePropertyChange(arg1 : string, arg2 : Object, arg3 : Object) : void;
	getPropertyChangeListeners() : PropertyChangeListener[];
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
}


declare interface AbstractAction extends Action, Cloneable, Serializable {}
export = AbstractAction
