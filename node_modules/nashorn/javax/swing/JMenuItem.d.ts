import KeyStroke = require('nashorn/javax/swing/KeyStroke');
import MenuElement = require('nashorn/javax/swing/MenuElement');
import Component = require('nashorn/java/awt/Component');
import MenuDragMouseListener = require('nashorn/javax/swing/event/MenuDragMouseListener');
import MenuKeyListener = require('nashorn/javax/swing/event/MenuKeyListener');
import AccessibleContext = require('nashorn/javax/accessibility/AccessibleContext');
import Icon = require('nashorn/javax/swing/Icon');
import Action = require('nashorn/javax/swing/Action');
import MenuItemUI = require('nashorn/javax/swing/plaf/MenuItemUI');
import MenuDragMouseEvent = require('nashorn/javax/swing/event/MenuDragMouseEvent');
import MenuKeyEvent = require('nashorn/javax/swing/event/MenuKeyEvent');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import AbstractButton = require('nashorn/javax/swing/AbstractButton');
import Accessible = require('nashorn/javax/accessibility/Accessible');
import AccessibleRole = require('nashorn/javax/accessibility/AccessibleRole');
import ChangeListener = require('nashorn/javax/swing/event/ChangeListener');
import FocusListener = require('nashorn/java/awt/event/FocusListener');
import Serializable = require('nashorn/java/io/Serializable');

declare class JMenuItem {
	uIClassID : string;
	armed : boolean;
	accelerator : KeyStroke;
	subElements : MenuElement[];
	component : Component;
	menuDragMouseListeners : MenuDragMouseListener[];
	menuKeyListeners : MenuKeyListener[];
	accessibleContext : AccessibleContext;
	constructor();
	constructor(arg1 : Icon);
	constructor(arg1 : string);
	constructor(arg1 : Action);
	constructor(arg1 : string, arg2 : Icon);
	constructor(arg1 : string, arg2 : number);
	initFocusability() : void;
	setUI(arg1 : MenuItemUI) : void;
	setArmed(arg1 : boolean) : void;
	isArmed() : boolean;
	setAccelerator(arg1 : KeyStroke) : void;
	getAccelerator() : KeyStroke;
	configureAcceleratorFromAction(arg1 : Action) : void;
	processMenuDragMouseEvent(arg1 : MenuDragMouseEvent) : void;
	processMenuKeyEvent(arg1 : MenuKeyEvent) : void;
	fireMenuDragMouseEntered(arg1 : MenuDragMouseEvent) : void;
	fireMenuDragMouseExited(arg1 : MenuDragMouseEvent) : void;
	fireMenuDragMouseDragged(arg1 : MenuDragMouseEvent) : void;
	fireMenuDragMouseReleased(arg1 : MenuDragMouseEvent) : void;
	fireMenuKeyPressed(arg1 : MenuKeyEvent) : void;
	fireMenuKeyReleased(arg1 : MenuKeyEvent) : void;
	fireMenuKeyTyped(arg1 : MenuKeyEvent) : void;
	addMenuDragMouseListener(arg1 : MenuDragMouseListener) : void;
	removeMenuDragMouseListener(arg1 : MenuDragMouseListener) : void;
	getMenuDragMouseListeners() : MenuDragMouseListener[];
	addMenuKeyListener(arg1 : MenuKeyListener) : void;
	removeMenuKeyListener(arg1 : MenuKeyListener) : void;
	getMenuKeyListeners() : MenuKeyListener[];
	readObject(arg1 : ObjectInputStream) : void;
	writeObject(arg1 : ObjectOutputStream) : void;
}


declare interface JMenuItem extends AbstractButton, Accessible, MenuElement {}

declare module JMenuItem {
	class AccessibleJMenuItem {
		accessibleRole : AccessibleRole;
		fireAccessibilityFocusedEvent(arg1 : JMenuItem) : void;
	}


	interface AccessibleJMenuItem extends AbstractButton.AccessibleAbstractButton, ChangeListener {}	class MenuItemFocusListener {
	}


	interface MenuItemFocusListener extends FocusListener, Serializable {}}

export = JMenuItem
