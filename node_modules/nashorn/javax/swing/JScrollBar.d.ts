import ScrollBarUI = require('nashorn/javax/swing/plaf/ScrollBarUI');
import BoundedRangeModel = require('nashorn/javax/swing/BoundedRangeModel');
import AdjustmentListener = require('nashorn/java/awt/event/AdjustmentListener');
import Dimension = require('nashorn/java/awt/Dimension');
import AccessibleContext = require('nashorn/javax/accessibility/AccessibleContext');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import JComponent = require('nashorn/javax/swing/JComponent');
import Adjustable = require('nashorn/java/awt/Adjustable');
import Accessible = require('nashorn/javax/accessibility/Accessible');
import AccessibleStateSet = require('nashorn/javax/accessibility/AccessibleStateSet');
import AccessibleRole = require('nashorn/javax/accessibility/AccessibleRole');
import AccessibleValue = require('nashorn/javax/accessibility/AccessibleValue');
import ChangeListener = require('nashorn/javax/swing/event/ChangeListener');
import Serializable = require('nashorn/java/io/Serializable');

declare class JScrollBar {
	uI : ScrollBarUI;
	uIClassID : string;
	orientation : number;
	model : BoundedRangeModel;
	unitIncrement : number;
	blockIncrement : number;
	value : number;
	visibleAmount : number;
	minimum : number;
	maximum : number;
	valueIsAdjusting : boolean;
	adjustmentListeners : AdjustmentListener[];
	minimumSize : Dimension;
	maximumSize : Dimension;
	accessibleContext : AccessibleContext;
	constructor(arg1 : number, arg2 : number, arg3 : number, arg4 : number, arg5 : number);
	constructor(arg1 : number);
	constructor();
	checkOrientation(arg1 : number) : void;
	setUI(arg1 : ScrollBarUI) : void;
	getUI() : ScrollBarUI;
	setOrientation(arg1 : number) : void;
	getModel() : BoundedRangeModel;
	setModel(arg1 : BoundedRangeModel) : void;
	getUnitIncrement(arg1 : number) : number;
	getBlockIncrement(arg1 : number) : number;
	getValueIsAdjusting() : boolean;
	setValueIsAdjusting(arg1 : boolean) : void;
	setValues(arg1 : number, arg2 : number, arg3 : number, arg4 : number) : void;
	getAdjustmentListeners() : AdjustmentListener[];
	fireAdjustmentValueChanged(arg1 : number, arg2 : number, arg3 : number) : void;
	fireAdjustmentValueChanged(arg1 : number, arg2 : number, arg3 : number, arg4 : boolean) : void;
	writeObject(arg1 : ObjectOutputStream) : void;
}


declare interface JScrollBar extends JComponent, Adjustable, Accessible {}

declare module JScrollBar {
	class AccessibleJScrollBar {
		accessibleStateSet : AccessibleStateSet;
		accessibleRole : AccessibleRole;
		accessibleValue : AccessibleValue;
		currentAccessibleValue : number;
		minimumAccessibleValue : number;
		maximumAccessibleValue : number;
	}


	interface AccessibleJScrollBar extends JComponent.AccessibleJComponent, AccessibleValue {}	class ModelListener {
	}


	interface ModelListener extends ChangeListener, Serializable {}}

export = JScrollBar
