import ComboBoxUI = require('nashorn/javax/swing/plaf/ComboBoxUI');
import ComboBoxModel = require('nashorn/javax/swing/ComboBoxModel');
import ListCellRenderer = require('nashorn/javax/swing/ListCellRenderer');
import ComboBoxEditor = require('nashorn/javax/swing/ComboBoxEditor');
import Object = require('nashorn/java/lang/Object');
import ItemListener = require('nashorn/java/awt/event/ItemListener');
import ActionListener = require('nashorn/java/awt/event/ActionListener');
import PopupMenuListener = require('nashorn/javax/swing/event/PopupMenuListener');
import Action = require('nashorn/javax/swing/Action');
import AccessibleContext = require('nashorn/javax/accessibility/AccessibleContext');
import Vector = require('nashorn/java/util/Vector');
import Class = require('nashorn/java/lang/Class');
import PropertyChangeListener = require('nashorn/java/beans/PropertyChangeListener');
import ItemEvent = require('nashorn/java/awt/event/ItemEvent');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import JComponent = require('nashorn/javax/swing/JComponent');
import ItemSelectable = require('nashorn/java/awt/ItemSelectable');
import ListDataListener = require('nashorn/javax/swing/event/ListDataListener');
import Accessible = require('nashorn/javax/accessibility/Accessible');
import AccessibleRole = require('nashorn/javax/accessibility/AccessibleRole');
import AccessibleStateSet = require('nashorn/javax/accessibility/AccessibleStateSet');
import AccessibleAction = require('nashorn/javax/accessibility/AccessibleAction');
import AccessibleSelection = require('nashorn/javax/accessibility/AccessibleSelection');
import ListSelectionListener = require('nashorn/javax/swing/event/ListSelectionListener');
import Locale = require('nashorn/java/util/Locale');
import AccessibleComponent = require('nashorn/javax/accessibility/AccessibleComponent');
import AccessibleText = require('nashorn/javax/accessibility/AccessibleText');
import AccessibleEditableText = require('nashorn/javax/accessibility/AccessibleEditableText');
import AccessibleValue = require('nashorn/javax/accessibility/AccessibleValue');
import AccessibleIcon = require('nashorn/javax/accessibility/AccessibleIcon');
import AccessibleRelationSet = require('nashorn/javax/accessibility/AccessibleRelationSet');
import AccessibleTable = require('nashorn/javax/accessibility/AccessibleTable');
import ActionPropertyChangeListener = require('nashorn/javax/swing/ActionPropertyChangeListener');
import Serializable = require('nashorn/java/io/Serializable');

declare class JComboBox<E> {
	uIClassID : string;
	uI : ComboBoxUI;
	model : ComboBoxModel<E>;
	lightWeightPopupEnabled : boolean;
	editable : boolean;
	maximumRowCount : number;
	renderer : ListCellRenderer<any>;
	editor : ComboBoxEditor;
	selectedItem : Object;
	selectedIndex : number;
	prototypeDisplayValue : E;
	popupVisible : boolean;
	itemListeners : ItemListener[];
	actionListeners : ActionListener[];
	popupMenuListeners : PopupMenuListener[];
	actionCommand : string;
	action : Action;
	selectedObjects : Object[];
	keySelectionManager : JComboBox.KeySelectionManager;
	itemCount : number;
	accessibleContext : AccessibleContext;
	constructor(arg1 : ComboBoxModel<E>);
	constructor(arg1 : E[]);
	constructor(arg1 : Vector<E>);
	constructor();
	init() : void;
	installAncestorListener() : void;
	setUI(arg1 : ComboBoxUI) : void;
	getUI() : ComboBoxUI;
	setModel(arg1 : ComboBoxModel<E>) : void;
	getModel() : ComboBoxModel<E>;
	setLightWeightPopupEnabled(arg1 : boolean) : void;
	isLightWeightPopupEnabled() : boolean;
	setEditable(arg1 : boolean) : void;
	isEditable() : boolean;
	setMaximumRowCount(arg1 : number) : void;
	getMaximumRowCount() : number;
	setRenderer(arg1 : ListCellRenderer<any>) : void;
	getRenderer() : ListCellRenderer<any>;
	setEditor(arg1 : ComboBoxEditor) : void;
	getEditor() : ComboBoxEditor;
	setSelectedItem(arg1 : Object) : void;
	getSelectedItem() : Object;
	setSelectedIndex(arg1 : number) : void;
	getSelectedIndex() : number;
	getPrototypeDisplayValue() : E;
	setPrototypeDisplayValue(arg1 : E) : void;
	addItem(arg1 : E) : void;
	insertItemAt(arg1 : E, arg2 : number) : void;
	removeItem(arg1 : Object) : void;
	removeItemAt(arg1 : number) : void;
	removeAllItems() : void;
	checkMutableComboBoxModel() : void;
	showPopup() : void;
	hidePopup() : void;
	setPopupVisible(arg1 : boolean) : void;
	isPopupVisible() : boolean;
	getItemListeners() : ItemListener[];
	addActionListener(arg1 : ActionListener) : void;
	removeActionListener(arg1 : ActionListener) : void;
	getActionListeners() : ActionListener[];
	addPopupMenuListener(arg1 : PopupMenuListener) : void;
	removePopupMenuListener(arg1 : PopupMenuListener) : void;
	getPopupMenuListeners() : PopupMenuListener[];
	firePopupMenuWillBecomeVisible() : void;
	firePopupMenuWillBecomeInvisible() : void;
	firePopupMenuCanceled() : void;
	setActionCommand(arg1 : string) : void;
	getActionCommand() : string;
	setAction(arg1 : Action) : void;
	isListener(arg1 : Class, arg2 : ActionListener) : boolean;
	getAction() : Action;
	configurePropertiesFromAction(arg1 : Action) : void;
	createActionPropertyChangeListener(arg1 : Action) : PropertyChangeListener;
	actionPropertyChanged(arg1 : Action, arg2 : string) : void;
	setActionCommandFromAction(arg1 : Action) : void;
	fireItemStateChanged(arg1 : ItemEvent) : void;
	fireActionEvent() : void;
	selectedItemChanged() : void;
	selectWithKeyChar(arg1 : string) : boolean;
	configureEditor(arg1 : ComboBoxEditor, arg2 : Object) : void;
	setKeySelectionManager(arg1 : JComboBox.KeySelectionManager) : void;
	getKeySelectionManager() : JComboBox.KeySelectionManager;
	getItemCount() : number;
	getItemAt(arg1 : number) : E;
	createDefaultKeySelectionManager() : JComboBox.KeySelectionManager;
	writeObject(arg1 : ObjectOutputStream) : void;
}


declare interface JComboBox<E> extends JComponent, ItemSelectable, ListDataListener, ActionListener, Accessible {}

declare module JComboBox {
	class AccessibleJComboBox {
		accessibleChildrenCount : number;
		accessibleRole : AccessibleRole;
		accessibleStateSet : AccessibleStateSet;
		accessibleAction : AccessibleAction;
		accessibleActionCount : number;
		accessibleSelection : AccessibleSelection;
		accessibleSelectionCount : number;
		constructor();
		setEditorNameAndDescription() : void;
	}


	interface AccessibleJComboBox extends JComponent.AccessibleJComponent, AccessibleAction, AccessibleSelection {}

	module AccessibleJComboBox {
		class AccessibleEditor {
			accessibleContext : AccessibleContext;
		}


		interface AccessibleEditor extends Accessible {}		class AccessibleJComboBoxListSelectionListener {
		}


		interface AccessibleJComboBoxListSelectionListener extends ListSelectionListener {}		class AccessibleJComboBoxPopupMenuListener {
		}


		interface AccessibleJComboBoxPopupMenuListener extends PopupMenuListener {}		class AccessibleJComboBoxPropertyChangeListener {
		}


		interface AccessibleJComboBoxPropertyChangeListener extends PropertyChangeListener {}		class EditorAccessibleContext {
			accessibleName : string;
			accessibleDescription : string;
			accessibleRole : AccessibleRole;
			accessibleStateSet : AccessibleStateSet;
			accessibleParent : Accessible;
			accessibleIndexInParent : number;
			accessibleChildrenCount : number;
			locale : Locale;
			accessibleAction : AccessibleAction;
			accessibleComponent : AccessibleComponent;
			accessibleSelection : AccessibleSelection;
			accessibleText : AccessibleText;
			accessibleEditableText : AccessibleEditableText;
			accessibleValue : AccessibleValue;
			accessibleIcon : AccessibleIcon[];
			accessibleRelationSet : AccessibleRelationSet;
			accessibleTable : AccessibleTable;
		}


		interface EditorAccessibleContext extends AccessibleContext {}	}
	class ComboBoxActionPropertyChangeListener {
	}


	interface ComboBoxActionPropertyChangeListener extends ActionPropertyChangeListener<JComboBox<any>> {}	class DefaultKeySelectionManager {
	}


	interface DefaultKeySelectionManager extends JComboBox.KeySelectionManager, Serializable {}	class KeySelectionManager extends Object {
		selectionForKey(arg1 : string, arg2 : ComboBoxModel) : number;
	}
}

export = JComboBox
