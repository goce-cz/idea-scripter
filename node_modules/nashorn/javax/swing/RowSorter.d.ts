import Object = require('nashorn/java/lang/Object');
import List = require('nashorn/java/util/List');
import RowSorterListener = require('nashorn/javax/swing/event/RowSorterListener');
import RowSorterEvent = require('nashorn/javax/swing/event/RowSorterEvent');
import SortOrder = require('nashorn/javax/swing/SortOrder');

declare class RowSorter<M> extends Object {
	model : M;
	sortKeys : List<RowSorter.SortKey>;
	viewRowCount : number;
	modelRowCount : number;
	constructor();
	getModel() : M;
	toggleSortOrder(arg1 : number) : void;
	convertRowIndexToModel(arg1 : number) : number;
	convertRowIndexToView(arg1 : number) : number;
	setSortKeys(arg1 : List<RowSorter.SortKey>) : void;
	getSortKeys() : List<RowSorter.SortKey>;
	getViewRowCount() : number;
	getModelRowCount() : number;
	modelStructureChanged() : void;
	allRowsChanged() : void;
	rowsInserted(arg1 : number, arg2 : number) : void;
	rowsDeleted(arg1 : number, arg2 : number) : void;
	rowsUpdated(arg1 : number, arg2 : number) : void;
	rowsUpdated(arg1 : number, arg2 : number, arg3 : number) : void;
	addRowSorterListener(arg1 : RowSorterListener) : void;
	removeRowSorterListener(arg1 : RowSorterListener) : void;
	fireSortOrderChanged() : void;
	fireRowSorterChanged(arg1 : number[]) : void;
	fireRowSorterChanged(arg1 : RowSorterEvent) : void;
}


declare module RowSorter {
	class SortKey extends Object {
		column : number;
		sortOrder : SortOrder;
		constructor(arg1 : number, arg2 : SortOrder);
		getColumn() : number;
		getSortOrder() : SortOrder;
	}
}

export = RowSorter
