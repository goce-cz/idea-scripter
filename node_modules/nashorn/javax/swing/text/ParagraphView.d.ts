import Element = require('nashorn/javax/swing/text/Element');
import View = require('nashorn/javax/swing/text/View');
import Position = require('nashorn/javax/swing/text/Position');
import Shape = require('nashorn/java/awt/Shape');
import TabSet = require('nashorn/javax/swing/text/TabSet');
import FlowView = require('nashorn/javax/swing/text/FlowView');
import TabExpander = require('nashorn/javax/swing/text/TabExpander');
import AttributeSet = require('nashorn/javax/swing/text/AttributeSet');
import BoxView = require('nashorn/javax/swing/text/BoxView');

declare class ParagraphView {
	constructor(arg1 : Element);
	setJustification(arg1 : number) : void;
	setLineSpacing(arg1 : number) : void;
	setFirstLineIndent(arg1 : number) : void;
	setPropertiesFromAttributes() : void;
	getLayoutViewCount() : number;
	getLayoutView(arg1 : number) : View;
	getClosestPositionTo(arg1 : number, arg2 : Position.Bias, arg3 : Shape, arg4 : number, arg5 : Position.Bias[], arg6 : number, arg7 : number) : number;
	getTabSet() : TabSet;
	getPartialSize(arg1 : number, arg2 : number) : number;
	findOffsetToCharactersInString(arg1 : string[], arg2 : number) : number;
	getTabBase() : number;
	breakView(arg1 : number, arg2 : number, arg3 : Shape) : View;
	getBreakWeight(arg1 : number, arg2 : number) : number;
	findEdgeSpan(arg1 : View, arg2 : number, arg3 : number, arg4 : number, arg5 : number) : number;
}


declare interface ParagraphView extends FlowView, TabExpander {}

declare module ParagraphView {
	class Row {
		attributes : AttributeSet;
		startOffset : number;
		endOffset : number;
		isLastRow() : boolean;
		isBrokenRow() : boolean;
		isJustifiableDocument() : boolean;
		isJustifyEnabled() : boolean;
	}


	interface Row extends BoxView {}}

export = ParagraphView
