import Element = require('nashorn/javax/swing/text/Element');
import Graphics = require('nashorn/java/awt/Graphics');
import Rectangle = require('nashorn/java/awt/Rectangle');
import SizeRequirements = require('nashorn/javax/swing/SizeRequirements');
import CompositeView = require('nashorn/javax/swing/text/CompositeView');

declare class BoxView {
	axis : number;
	width : number;
	height : number;
	constructor(arg1 : Element, arg2 : number);
	getAxis() : number;
	setAxis(arg1 : number) : void;
	layoutChanged(arg1 : number) : void;
	isLayoutValid(arg1 : number) : boolean;
	paintChild(arg1 : Graphics, arg2 : Rectangle, arg3 : number) : void;
	updateLayoutArray(arg1 : number[], arg2 : number, arg3 : number) : number[];
	setSpanOnAxis(arg1 : number, arg2 : number) : void;
	updateChildSizes() : void;
	getSpanOnAxis(arg1 : number) : number;
	isAllocationValid() : boolean;
	layout(arg1 : number, arg2 : number) : void;
	getWidth() : number;
	getHeight() : number;
	layoutMajorAxis(arg1 : number, arg2 : number, arg3 : number[], arg4 : number[]) : void;
	layoutMinorAxis(arg1 : number, arg2 : number, arg3 : number[], arg4 : number[]) : void;
	calculateMajorAxisRequirements(arg1 : number, arg2 : SizeRequirements) : SizeRequirements;
	calculateMinorAxisRequirements(arg1 : number, arg2 : SizeRequirements) : SizeRequirements;
	checkRequests(arg1 : number) : void;
	baselineLayout(arg1 : number, arg2 : number, arg3 : number[], arg4 : number[]) : void;
	baselineRequirements(arg1 : number, arg2 : SizeRequirements) : SizeRequirements;
	getOffset(arg1 : number, arg2 : number) : number;
	getSpan(arg1 : number, arg2 : number) : number;
}


declare interface BoxView extends CompositeView {}
export = BoxView
