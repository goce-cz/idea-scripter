import JComponent = require('nashorn/javax/swing/JComponent');
import Action = require('nashorn/javax/swing/Action');
import ReferenceQueue = require('nashorn/java/lang/ref/ReferenceQueue');
import PropertyChangeEvent = require('nashorn/java/beans/PropertyChangeEvent');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import PropertyChangeListener = require('nashorn/java/beans/PropertyChangeListener');
import Serializable = require('nashorn/java/io/Serializable');
import WeakReference = require('nashorn/java/lang/ref/WeakReference');

declare class ActionPropertyChangeListener<T extends JComponent> {
	target : T;
	action : Action;
	constructor(arg1 : T, arg2 : Action);
	static getQueue() : ReferenceQueue<JComponent>;
	actionPropertyChanged(arg1 : T, arg2 : Action, arg3 : PropertyChangeEvent) : void;
	setTarget(arg1 : T) : void;
	getTarget() : T;
	getAction() : Action;
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
}


declare interface ActionPropertyChangeListener<T extends JComponent> extends PropertyChangeListener, Serializable {}

declare module ActionPropertyChangeListener {
	class OwnedWeakReference<U extends JComponent> {
		owner : ActionPropertyChangeListener<any>;
		getOwner() : ActionPropertyChangeListener<any>;
	}


	interface OwnedWeakReference<U extends JComponent> extends WeakReference<U> {}}

export = ActionPropertyChangeListener
