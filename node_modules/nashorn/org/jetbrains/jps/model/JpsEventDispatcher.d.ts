import Object = require('nashorn/java/lang/Object');
import EventListener = require('nashorn/java/util/EventListener');
import Class = require('nashorn/java/lang/Class');
import JpsNamedElement = require('nashorn/org/jetbrains/jps/model/JpsNamedElement');
import JpsElement = require('nashorn/org/jetbrains/jps/model/JpsElement');
import JpsElementChildRole = require('nashorn/org/jetbrains/jps/model/JpsElementChildRole');

declare class JpsEventDispatcher extends Object {
	getPublisher<T extends EventListener>(arg1 : Class<T>) : T;
	fireElementRenamed(arg1 : JpsNamedElement, arg2 : string, arg3 : string) : void;
	fireElementChanged(arg1 : JpsElement) : void;
	fireElementAdded<T extends JpsElement>(arg1 : T, arg2 : JpsElementChildRole<T>) : void;
	fireElementRemoved<T extends JpsElement>(arg1 : T, arg2 : JpsElementChildRole<T>) : void;
}

export = JpsEventDispatcher
