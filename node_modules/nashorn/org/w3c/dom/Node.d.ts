import Object = require('nashorn/java/lang/Object');
import NodeList = require('nashorn/org/w3c/dom/NodeList');
import NamedNodeMap = require('nashorn/org/w3c/dom/NamedNodeMap');
import Document = require('nashorn/org/w3c/dom/Document');
import UserDataHandler = require('nashorn/org/w3c/dom/UserDataHandler');

declare class Node extends Object {
	static ELEMENT_NODE : number;
	static ATTRIBUTE_NODE : number;
	static TEXT_NODE : number;
	static CDATA_SECTION_NODE : number;
	static ENTITY_REFERENCE_NODE : number;
	static ENTITY_NODE : number;
	static PROCESSING_INSTRUCTION_NODE : number;
	static COMMENT_NODE : number;
	static DOCUMENT_NODE : number;
	static DOCUMENT_TYPE_NODE : number;
	static DOCUMENT_FRAGMENT_NODE : number;
	static NOTATION_NODE : number;
	static DOCUMENT_POSITION_DISCONNECTED : number;
	static DOCUMENT_POSITION_PRECEDING : number;
	static DOCUMENT_POSITION_FOLLOWING : number;
	static DOCUMENT_POSITION_CONTAINS : number;
	static DOCUMENT_POSITION_CONTAINED_BY : number;
	static DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC : number;
	nodeName : string;
	nodeValue : string;
	nodeType : number;
	parentNode : Node;
	childNodes : NodeList;
	firstChild : Node;
	lastChild : Node;
	previousSibling : Node;
	nextSibling : Node;
	attributes : NamedNodeMap;
	ownerDocument : Document;
	namespaceURI : string;
	prefix : string;
	localName : string;
	baseURI : string;
	textContent : string;
	getNodeName() : string;
	getNodeValue() : string;
	setNodeValue(arg1 : string) : void;
	getNodeType() : number;
	getParentNode() : Node;
	getChildNodes() : NodeList;
	getFirstChild() : Node;
	getLastChild() : Node;
	getPreviousSibling() : Node;
	getNextSibling() : Node;
	getAttributes() : NamedNodeMap;
	getOwnerDocument() : Document;
	insertBefore(arg1 : Node, arg2 : Node) : Node;
	replaceChild(arg1 : Node, arg2 : Node) : Node;
	removeChild(arg1 : Node) : Node;
	appendChild(arg1 : Node) : Node;
	hasChildNodes() : boolean;
	cloneNode(arg1 : boolean) : Node;
	normalize() : void;
	isSupported(arg1 : string, arg2 : string) : boolean;
	getNamespaceURI() : string;
	getPrefix() : string;
	setPrefix(arg1 : string) : void;
	getLocalName() : string;
	hasAttributes() : boolean;
	getBaseURI() : string;
	compareDocumentPosition(arg1 : Node) : number;
	getTextContent() : string;
	setTextContent(arg1 : string) : void;
	isSameNode(arg1 : Node) : boolean;
	lookupPrefix(arg1 : string) : string;
	isDefaultNamespace(arg1 : string) : boolean;
	lookupNamespaceURI(arg1 : string) : string;
	isEqualNode(arg1 : Node) : boolean;
	getFeature(arg1 : string, arg2 : string) : Object;
	setUserData(arg1 : string, arg2 : Object, arg3 : UserDataHandler) : Object;
	getUserData(arg1 : string) : Object;
}

export = Node
