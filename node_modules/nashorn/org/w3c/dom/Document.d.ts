import DocumentType = require('nashorn/org/w3c/dom/DocumentType');
import DOMImplementation = require('nashorn/org/w3c/dom/DOMImplementation');
import Element = require('nashorn/org/w3c/dom/Element');
import DOMConfiguration = require('nashorn/org/w3c/dom/DOMConfiguration');
import DocumentFragment = require('nashorn/org/w3c/dom/DocumentFragment');
import Text = require('nashorn/org/w3c/dom/Text');
import Comment = require('nashorn/org/w3c/dom/Comment');
import CDATASection = require('nashorn/org/w3c/dom/CDATASection');
import ProcessingInstruction = require('nashorn/org/w3c/dom/ProcessingInstruction');
import Attr = require('nashorn/org/w3c/dom/Attr');
import EntityReference = require('nashorn/org/w3c/dom/EntityReference');
import NodeList = require('nashorn/org/w3c/dom/NodeList');
import Node = require('nashorn/org/w3c/dom/Node');

declare class Document {
	doctype : DocumentType;
	implementation : DOMImplementation;
	documentElement : Element;
	inputEncoding : string;
	xmlEncoding : string;
	xmlStandalone : boolean;
	xmlVersion : string;
	strictErrorChecking : boolean;
	documentURI : string;
	domConfig : DOMConfiguration;
	getDoctype() : DocumentType;
	getImplementation() : DOMImplementation;
	getDocumentElement() : Element;
	createElement(arg1 : string) : Element;
	createDocumentFragment() : DocumentFragment;
	createTextNode(arg1 : string) : Text;
	createComment(arg1 : string) : Comment;
	createCDATASection(arg1 : string) : CDATASection;
	createProcessingInstruction(arg1 : string, arg2 : string) : ProcessingInstruction;
	createAttribute(arg1 : string) : Attr;
	createEntityReference(arg1 : string) : EntityReference;
	getElementsByTagName(arg1 : string) : NodeList;
	importNode(arg1 : Node, arg2 : boolean) : Node;
	createElementNS(arg1 : string, arg2 : string) : Element;
	createAttributeNS(arg1 : string, arg2 : string) : Attr;
	getElementsByTagNameNS(arg1 : string, arg2 : string) : NodeList;
	getElementById(arg1 : string) : Element;
	getInputEncoding() : string;
	getXmlEncoding() : string;
	getXmlStandalone() : boolean;
	setXmlStandalone(arg1 : boolean) : void;
	getXmlVersion() : string;
	setXmlVersion(arg1 : string) : void;
	getStrictErrorChecking() : boolean;
	setStrictErrorChecking(arg1 : boolean) : void;
	getDocumentURI() : string;
	setDocumentURI(arg1 : string) : void;
	adoptNode(arg1 : Node) : Node;
	getDomConfig() : DOMConfiguration;
	normalizeDocument() : void;
	renameNode(arg1 : Node, arg2 : string, arg3 : string) : Node;
}


declare interface Document extends Node {}
export = Document
