import Element = require('nashorn/org/jdom/Element');
import Document = require('nashorn/org/jdom/Document');
import Namespace = require('nashorn/org/jdom/Namespace');
import ObjectOutputStream = require('nashorn/java/io/ObjectOutputStream');
import ObjectInputStream = require('nashorn/java/io/ObjectInputStream');
import Serializable = require('nashorn/java/io/Serializable');
import Cloneable = require('nashorn/java/lang/Cloneable');

declare class Attribute {
	static UNDECLARED_TYPE : number;
	static CDATA_TYPE : number;
	static ID_TYPE : number;
	static IDREF_TYPE : number;
	static IDREFS_TYPE : number;
	static ENTITY_TYPE : number;
	static ENTITIES_TYPE : number;
	static NMTOKEN_TYPE : number;
	static NMTOKENS_TYPE : number;
	static NOTATION_TYPE : number;
	static ENUMERATED_TYPE : number;
	parent : Element;
	document : Document;
	name : string;
	qualifiedName : string;
	namespacePrefix : string;
	namespaceURI : string;
	namespace : Namespace;
	value : string;
	attributeType : number;
	intValue : number;
	longValue : number;
	floatValue : number;
	doubleValue : number;
	booleanValue : boolean;
	constructor(arg1 : string, arg2 : string, arg3 : Namespace);
	constructor(arg1 : string, arg2 : string, arg3 : number, arg4 : Namespace);
	constructor(arg1 : string, arg2 : string);
	constructor(arg1 : string, arg2 : string, arg3 : number);
	getParent() : Element;
	getDocument() : Document;
	setParent(arg1 : Element) : Attribute;
	detach() : Attribute;
	getName() : string;
	setName(arg1 : string) : Attribute;
	getQualifiedName() : string;
	getNamespacePrefix() : string;
	getNamespaceURI() : string;
	getNamespace() : Namespace;
	setNamespace(arg1 : Namespace) : Attribute;
	getValue() : string;
	setValue(arg1 : string) : Attribute;
	getAttributeType() : number;
	setAttributeType(arg1 : number) : Attribute;
	getIntValue() : number;
	getLongValue() : number;
	getFloatValue() : number;
	getDoubleValue() : number;
	getBooleanValue() : boolean;
	writeObject(arg1 : ObjectOutputStream) : void;
	readObject(arg1 : ObjectInputStream) : void;
}


declare interface Attribute extends Serializable, Cloneable {}
export = Attribute
