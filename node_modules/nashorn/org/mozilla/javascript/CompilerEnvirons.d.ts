import Object = require('nashorn/java/lang/Object');
import ErrorReporter = require('nashorn/org/mozilla/javascript/ErrorReporter');
import Set = require('nashorn/java/util/Set');
import Context = require('nashorn/org/mozilla/javascript/Context');

declare class CompilerEnvirons extends Object {
	errorReporter : ErrorReporter;
	languageVersion : number;
	generateDebugInfo : boolean;
	reservedKeywordAsIdentifier : boolean;
	allowMemberExprAsFunctionName : boolean;
	xmlAvailable : boolean;
	optimizationLevel : number;
	generatingSource : boolean;
	warnTrailingComma : boolean;
	strictMode : boolean;
	generateObserverCount : boolean;
	recordingComments : boolean;
	recordingLocalJsDocComments : boolean;
	ideMode : boolean;
	activationNames : Set<string>;
	allowSharpComments : boolean;
	constructor();
	initFromContext(arg1 : Context) : void;
	getErrorReporter() : ErrorReporter;
	setErrorReporter(arg1 : ErrorReporter) : void;
	getLanguageVersion() : number;
	setLanguageVersion(arg1 : number) : void;
	isGenerateDebugInfo() : boolean;
	setGenerateDebugInfo(arg1 : boolean) : void;
	isReservedKeywordAsIdentifier() : boolean;
	setReservedKeywordAsIdentifier(arg1 : boolean) : void;
	isAllowMemberExprAsFunctionName() : boolean;
	setAllowMemberExprAsFunctionName(arg1 : boolean) : void;
	isXmlAvailable() : boolean;
	setXmlAvailable(arg1 : boolean) : void;
	getOptimizationLevel() : number;
	setOptimizationLevel(arg1 : number) : void;
	isGeneratingSource() : boolean;
	getWarnTrailingComma() : boolean;
	setWarnTrailingComma(arg1 : boolean) : void;
	isStrictMode() : boolean;
	setStrictMode(arg1 : boolean) : void;
	reportWarningAsError() : boolean;
	setGeneratingSource(arg1 : boolean) : void;
	isGenerateObserverCount() : boolean;
	setGenerateObserverCount(arg1 : boolean) : void;
	isRecordingComments() : boolean;
	setRecordingComments(arg1 : boolean) : void;
	isRecordingLocalJsDocComments() : boolean;
	setRecordingLocalJsDocComments(arg1 : boolean) : void;
	setRecoverFromErrors(arg1 : boolean) : void;
	recoverFromErrors() : boolean;
	setIdeMode(arg1 : boolean) : void;
	isIdeMode() : boolean;
	getActivationNames() : Set<string>;
	setActivationNames(arg1 : Set<string>) : void;
	setAllowSharpComments(arg1 : boolean) : void;
	getAllowSharpComments() : boolean;
	static ideEnvirons() : CompilerEnvirons;
}

export = CompilerEnvirons
