import Object = require('nashorn/java/lang/Object');
import Scriptable = require('nashorn/org/mozilla/javascript/Scriptable');
import ScriptableObject = require('nashorn/org/mozilla/javascript/ScriptableObject');
import Context = require('nashorn/org/mozilla/javascript/Context');
import IdScriptableObject = require('nashorn/org/mozilla/javascript/IdScriptableObject');
import List = require('nashorn/java/util/List');

declare class NativeArray {
	className : string;
	ids : Object[];
	allIds : Object[];
	indexIds : number[];
	length : number;
	constructor(arg1 : number);
	constructor(arg1 : Object[]);
	static init(arg1 : Scriptable, arg2 : boolean) : void;
	static getMaximumInitialCapacity() : number;
	static setMaximumInitialCapacity(arg1 : number) : void;
	static toArrayIndex(arg1 : Object) : number;
	static toArrayIndex(arg1 : string) : number;
	static toArrayIndex(arg1 : number) : number;
	static toDenseIndex(arg1 : Object) : number;
	ensureCapacity(arg1 : number) : boolean;
	getIndexIds() : number[];
	defaultIndexPropertyDescriptor(arg1 : Object) : ScriptableObject;
	static jsConstructor(arg1 : Context, arg2 : Scriptable, arg3 : Object[]) : Object;
	getLength() : number;
	jsGet_length() : number;
	setDenseOnly(arg1 : boolean) : void;
	setLength(arg1 : Object) : void;
	static getLengthProperty(arg1 : Context, arg2 : Scriptable) : number;
	static setLengthProperty(arg1 : Context, arg2 : Scriptable, arg3 : number) : Object;
	static deleteElem(arg1 : Scriptable, arg2 : number) : void;
	static getElem(arg1 : Context, arg2 : Scriptable, arg3 : number) : Object;
	static getRawElem(arg1 : Scriptable, arg2 : number) : Object;
	static setElem(arg1 : Context, arg2 : Scriptable, arg3 : number, arg4 : Object) : void;
	static setRawElem(arg1 : Context, arg2 : Scriptable, arg3 : number, arg4 : Object) : void;
	static toStringHelper(arg1 : Context, arg2 : Scriptable, arg3 : Scriptable, arg4 : boolean, arg5 : boolean) : string;
	static js_join(arg1 : Context, arg2 : Scriptable, arg3 : Object[]) : string;
	static js_reverse(arg1 : Context, arg2 : Scriptable, arg3 : Object[]) : Scriptable;
	static js_sort(arg1 : Context, arg2 : Scriptable, arg3 : Scriptable, arg4 : Object[]) : Scriptable;
	static js_push(arg1 : Context, arg2 : Scriptable, arg3 : Object[]) : Object;
	static js_pop(arg1 : Context, arg2 : Scriptable, arg3 : Object[]) : Object;
	static js_shift(arg1 : Context, arg2 : Scriptable, arg3 : Object[]) : Object;
	static js_unshift(arg1 : Context, arg2 : Scriptable, arg3 : Object[]) : Object;
	static js_splice(arg1 : Context, arg2 : Scriptable, arg3 : Scriptable, arg4 : Object[]) : Object;
	static js_concat(arg1 : Context, arg2 : Scriptable, arg3 : Scriptable, arg4 : Object[]) : Scriptable;
	js_slice(arg1 : Context, arg2 : Scriptable, arg3 : Object[]) : Scriptable;
	static toSliceIndex(arg1 : number, arg2 : number) : number;
	indexOfHelper(arg1 : Context, arg2 : Scriptable, arg3 : Object[], arg4 : boolean) : Object;
	iterativeMethod(arg1 : Context, arg2 : number, arg3 : Scriptable, arg4 : Scriptable, arg5 : Object[]) : Object;
	reduceMethod(arg1 : Context, arg2 : number, arg3 : Scriptable, arg4 : Scriptable, arg5 : Object[]) : Object;
	get(arg1 : number) : Object;
}


declare interface NativeArray extends IdScriptableObject, List {}
export = NativeArray
