import Object = require('nashorn/java/lang/Object');
import CompilerEnvirons = require('nashorn/org/mozilla/javascript/CompilerEnvirons');
import ScriptNode = require('nashorn/org/mozilla/javascript/ast/ScriptNode');
import Context = require('nashorn/org/mozilla/javascript/Context');
import Scriptable = require('nashorn/org/mozilla/javascript/Scriptable');
import Function = require('nashorn/org/mozilla/javascript/Function');
import Script = require('nashorn/org/mozilla/javascript/Script');
import RhinoException = require('nashorn/org/mozilla/javascript/RhinoException');
import List = require('nashorn/java/util/List');

declare class Evaluator extends Object {
	compile(arg1 : CompilerEnvirons, arg2 : ScriptNode, arg3 : string, arg4 : boolean) : Object;
	createFunctionObject(arg1 : Context, arg2 : Scriptable, arg3 : Object, arg4 : Object) : Function;
	createScriptObject(arg1 : Object, arg2 : Object) : Script;
	captureStackInfo(arg1 : RhinoException) : void;
	getSourcePositionFromStack(arg1 : Context, arg2 : number[]) : string;
	getPatchedStack(arg1 : RhinoException, arg2 : string) : string;
	getScriptStack(arg1 : RhinoException) : List<string>;
	setEvalScriptFlag(arg1 : Script) : void;
}

export = Evaluator
