import Scriptable = require('nashorn/org/mozilla/javascript/Scriptable');
import IdFunctionObject = require('nashorn/org/mozilla/javascript/IdFunctionObject');
import Object = require('nashorn/java/lang/Object');
import Context = require('nashorn/org/mozilla/javascript/Context');
import IdScriptableObject = require('nashorn/org/mozilla/javascript/IdScriptableObject');
import Function = require('nashorn/org/mozilla/javascript/Function');

declare class BaseFunction {
	className : string;
	typeOf : string;
	arity : number;
	length : number;
	functionName : string;
	constructor();
	constructor(arg1 : Scriptable, arg2 : Scriptable);
	static init(arg1 : Scriptable, arg2 : boolean) : void;
	static isApply(arg1 : IdFunctionObject) : boolean;
	static isApplyOrCall(arg1 : IdFunctionObject) : boolean;
	realFunction(arg1 : Scriptable, arg2 : IdFunctionObject) : BaseFunction;
	setImmunePrototypeProperty(arg1 : Object) : void;
	getClassPrototype() : Scriptable;
	createObject(arg1 : Context, arg2 : Scriptable) : Scriptable;
	decompile(arg1 : number, arg2 : number) : string;
	getArity() : number;
	getLength() : number;
	getFunctionName() : string;
	hasPrototypeProperty() : boolean;
	getPrototypeProperty() : Object;
	setupDefaultPrototype() : Object;
	getArguments() : Object;
	static jsConstructor(arg1 : Context, arg2 : Scriptable, arg3 : Object[]) : Object;
}


declare interface BaseFunction extends IdScriptableObject, Function {}
export = BaseFunction
