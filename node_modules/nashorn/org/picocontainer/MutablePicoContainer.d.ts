import Object = require('nashorn/java/lang/Object');
import Class = require('nashorn/java/lang/Class');
import ComponentAdapter = require('nashorn/org/picocontainer/ComponentAdapter');
import Parameter = require('nashorn/org/picocontainer/Parameter');
import PicoContainer = require('nashorn/org/picocontainer/PicoContainer');

declare class MutablePicoContainer {
	registerComponentImplementation(arg1 : Object, arg2 : Class) : ComponentAdapter;
	registerComponentImplementation(arg1 : Object, arg2 : Class, arg3 : Parameter[]) : ComponentAdapter;
	registerComponentImplementation(arg1 : Class) : ComponentAdapter;
	registerComponentInstance(arg1 : Object) : ComponentAdapter;
	registerComponentInstance(arg1 : Object, arg2 : Object) : ComponentAdapter;
	registerComponent(arg1 : ComponentAdapter) : ComponentAdapter;
	unregisterComponent(arg1 : Object) : ComponentAdapter;
	unregisterComponentByInstance(arg1 : Object) : ComponentAdapter;
	makeChildContainer() : MutablePicoContainer;
	addChildContainer(arg1 : PicoContainer) : boolean;
	removeChildContainer(arg1 : PicoContainer) : boolean;
}


declare interface MutablePicoContainer extends PicoContainer {}
export = MutablePicoContainer
