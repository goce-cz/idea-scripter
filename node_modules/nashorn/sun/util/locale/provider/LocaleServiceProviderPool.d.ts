import Object = require('nashorn/java/lang/Object');
import Locale = require('nashorn/java/util/Locale');
import Class = require('nashorn/java/lang/Class');
import LocaleServiceProvider = require('nashorn/java/util/spi/LocaleServiceProvider');
import Set = require('nashorn/java/util/Set');
import List = require('nashorn/java/util/List');
import LocaleProviderAdapter = require('nashorn/sun/util/locale/provider/LocaleProviderAdapter');

declare class LocaleServiceProviderPool extends Object {
	static allAvailableLocales : Locale[];
	availableLocales : Locale[];
	static getPool(arg1 : Class<LocaleServiceProvider>) : LocaleServiceProviderPool;
	static config(arg1 : Class<Object>, arg2 : string) : void;
	static getAllAvailableLocales() : Locale[];
	getAvailableLocales() : Locale[];
	getAvailableLocaleSet() : Set<Locale>;
	hasProviders() : boolean;
	getLocalizedObject<P extends LocaleServiceProvider, S>(arg1 : LocaleServiceProviderPool.LocalizedObjectGetter<P, S>, arg2 : Locale, arg3 : Object[]) : S;
	getLocalizedObject<P extends LocaleServiceProvider, S>(arg1 : LocaleServiceProviderPool.LocalizedObjectGetter<P, S>, arg2 : Locale, arg3 : string, arg4 : Object[]) : S;
	getLocalizedObjectImpl<P extends LocaleServiceProvider, S>(arg1 : LocaleServiceProviderPool.LocalizedObjectGetter<P, S>, arg2 : Locale, arg3 : boolean, arg4 : string, arg5 : Object[]) : S;
	findProviders(arg1 : Locale) : List<LocaleProviderAdapter.Type>;
	static getLookupLocales(arg1 : Locale) : List<Locale>;
	static getLookupLocale(arg1 : Locale) : Locale;
}


declare module LocaleServiceProviderPool {
	class AllAvailableLocales extends Object {
	}
	class LocalizedObjectGetter<P extends LocaleServiceProvider, S> extends Object {
		getObject(arg1 : P, arg2 : Locale, arg3 : string, arg4 : Object[]) : S;
	}
}

export = LocaleServiceProviderPool
