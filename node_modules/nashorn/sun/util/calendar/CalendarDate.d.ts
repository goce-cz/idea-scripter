import Era = require('nashorn/sun/util/calendar/Era');
import TimeZone = require('nashorn/java/util/TimeZone');
import Locale = require('nashorn/java/util/Locale');
import Cloneable = require('nashorn/java/lang/Cloneable');

declare class CalendarDate {
	static FIELD_UNDEFINED : number;
	static TIME_UNDEFINED : number;
	era : Era;
	year : number;
	leapYear : boolean;
	month : number;
	dayOfMonth : number;
	dayOfWeek : number;
	hours : number;
	minutes : number;
	seconds : number;
	millis : number;
	timeOfDay : number;
	normalized : boolean;
	standardTime : boolean;
	daylightTime : boolean;
	zone : TimeZone;
	zoneOffset : number;
	daylightSaving : number;
	getEra() : Era;
	setEra(arg1 : Era) : CalendarDate;
	getYear() : number;
	setYear(arg1 : number) : CalendarDate;
	addYear(arg1 : number) : CalendarDate;
	isLeapYear() : boolean;
	setLeapYear(arg1 : boolean) : void;
	getMonth() : number;
	setMonth(arg1 : number) : CalendarDate;
	addMonth(arg1 : number) : CalendarDate;
	getDayOfMonth() : number;
	setDayOfMonth(arg1 : number) : CalendarDate;
	addDayOfMonth(arg1 : number) : CalendarDate;
	getDayOfWeek() : number;
	getHours() : number;
	setHours(arg1 : number) : CalendarDate;
	addHours(arg1 : number) : CalendarDate;
	getMinutes() : number;
	setMinutes(arg1 : number) : CalendarDate;
	addMinutes(arg1 : number) : CalendarDate;
	getSeconds() : number;
	setSeconds(arg1 : number) : CalendarDate;
	addSeconds(arg1 : number) : CalendarDate;
	getMillis() : number;
	setMillis(arg1 : number) : CalendarDate;
	addMillis(arg1 : number) : CalendarDate;
	getTimeOfDay() : number;
	setDate(arg1 : number, arg2 : number, arg3 : number) : CalendarDate;
	addDate(arg1 : number, arg2 : number, arg3 : number) : CalendarDate;
	setTimeOfDay(arg1 : number, arg2 : number, arg3 : number, arg4 : number) : CalendarDate;
	addTimeOfDay(arg1 : number, arg2 : number, arg3 : number, arg4 : number) : CalendarDate;
	setTimeOfDay(arg1 : number) : void;
	isNormalized() : boolean;
	isStandardTime() : boolean;
	setStandardTime(arg1 : boolean) : void;
	isDaylightTime() : boolean;
	setLocale(arg1 : Locale) : void;
	getZone() : TimeZone;
	setZone(arg1 : TimeZone) : CalendarDate;
	isSameDate(arg1 : CalendarDate) : boolean;
	setDayOfWeek(arg1 : number) : void;
	setNormalized(arg1 : boolean) : void;
	getZoneOffset() : number;
	setZoneOffset(arg1 : number) : void;
	getDaylightSaving() : number;
	setDaylightSaving(arg1 : number) : void;
}


declare interface CalendarDate extends Cloneable {}
export = CalendarDate
