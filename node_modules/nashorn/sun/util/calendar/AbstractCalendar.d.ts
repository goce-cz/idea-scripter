import Era = require('nashorn/sun/util/calendar/Era');
import CalendarDate = require('nashorn/sun/util/calendar/CalendarDate');
import CalendarSystem = require('nashorn/sun/util/calendar/CalendarSystem');

declare class AbstractCalendar {
	eras : Era[];
	calendarDate : CalendarDate;
	weekLength : number;
	setEras(arg1 : Era[]) : void;
	getTimeOfDay(arg1 : CalendarDate) : number;
	getTimeOfDayValue(arg1 : CalendarDate) : number;
	isLeapYear(arg1 : CalendarDate) : boolean;
	static getDayOfWeekDateBefore(arg1 : number, arg2 : number) : number;
	static getDayOfWeekDateAfter(arg1 : number, arg2 : number) : number;
	static getDayOfWeekDateOnOrBefore(arg1 : number, arg2 : number) : number;
	getFixedDate(arg1 : CalendarDate) : number;
	getCalendarDateFromFixedDate(arg1 : CalendarDate, arg2 : number) : void;
	validateTime(arg1 : CalendarDate) : boolean;
	normalizeTime(arg1 : CalendarDate) : number;
}


declare interface AbstractCalendar extends CalendarSystem {}
export = AbstractCalendar
