import Object = require('nashorn/java/lang/Object');
import AttributeValues = require('nashorn/sun/font/AttributeValues');
import Map = require('nashorn/java/util/Map');
import Graphics2D = require('nashorn/java/awt/Graphics2D');
import Rectangle2D = require('nashorn/java/awt/geom/Rectangle2D');
import Shape = require('nashorn/java/awt/Shape');
import CoreMetrics = require('nashorn/sun/font/CoreMetrics');

declare class Decoration extends Object {
	static plainDecoration : Decoration;
	static getPlainDecoration() : Decoration;
	static getDecoration(arg1 : AttributeValues) : Decoration;
	static getDecoration(arg1 : Map) : Decoration;
	drawTextAndDecorations(arg1 : Decoration.Label, arg2 : Graphics2D, arg3 : number, arg4 : number) : void;
	getVisualBounds(arg1 : Decoration.Label) : Rectangle2D;
	getCharVisualBounds(arg1 : Decoration.Label, arg2 : number) : Rectangle2D;
	getOutline(arg1 : Decoration.Label, arg2 : number, arg3 : number) : Shape;
}


declare module Decoration {
	class DecorationImpl {
		static areEqual(arg1 : Object, arg2 : Object) : boolean;
		getUnderlineMaxY(arg1 : CoreMetrics) : number;
		drawTextAndEmbellishments(arg1 : Decoration.Label, arg2 : Graphics2D, arg3 : number, arg4 : number) : void;
	}


	interface DecorationImpl extends Decoration {}	class Label extends Object {
		coreMetrics : CoreMetrics;
		logicalBounds : Rectangle2D;
		getCoreMetrics() : CoreMetrics;
		getLogicalBounds() : Rectangle2D;
		handleDraw(arg1 : Graphics2D, arg2 : number, arg3 : number) : void;
		handleGetCharVisualBounds(arg1 : number) : Rectangle2D;
		handleGetVisualBounds() : Rectangle2D;
		handleGetOutline(arg1 : number, arg2 : number) : Shape;
	}
}

export = Decoration
