import Object = require('nashorn/java/lang/Object');
import Vector = require('nashorn/java/util/Vector');
import PathIterator = require('nashorn/java/awt/geom/PathIterator');

declare class Crossings extends Object {
	static debug : boolean;
	xLo : number;
	yLo : number;
	xHi : number;
	yHi : number;
	empty : boolean;
	constructor(arg1 : number, arg2 : number, arg3 : number, arg4 : number);
	getXLo() : number;
	getYLo() : number;
	getXHi() : number;
	getYHi() : number;
	record(arg1 : number, arg2 : number, arg3 : number) : void;
	print() : void;
	isEmpty() : boolean;
	covers(arg1 : number, arg2 : number) : boolean;
	static findCrossings(arg1 : Vector, arg2 : number, arg3 : number, arg4 : number, arg5 : number) : Crossings;
	static findCrossings(arg1 : PathIterator, arg2 : number, arg3 : number, arg4 : number, arg5 : number) : Crossings;
	accumulateLine(arg1 : number, arg2 : number, arg3 : number, arg4 : number) : boolean;
	accumulateLine(arg1 : number, arg2 : number, arg3 : number, arg4 : number, arg5 : number) : boolean;
	accumulateQuad(arg1 : number, arg2 : number, arg3 : number[]) : boolean;
	accumulateCubic(arg1 : number, arg2 : number, arg3 : number[]) : boolean;
}


declare module Crossings {
	class EvenOdd {
		constructor(arg1 : number, arg2 : number, arg3 : number, arg4 : number);
	}


	interface EvenOdd extends Crossings {}	class NonZero {
		constructor(arg1 : number, arg2 : number, arg3 : number, arg4 : number);
		remove(arg1 : number) : void;
		insert(arg1 : number, arg2 : number, arg3 : number, arg4 : number) : void;
	}


	interface NonZero extends Crossings {}}

export = Crossings
