import FormalTypeParameter = require('nashorn/sun/reflect/generics/tree/FormalTypeParameter');
import ClassTypeSignature = require('nashorn/sun/reflect/generics/tree/ClassTypeSignature');
import Visitor = require('nashorn/sun/reflect/generics/visitor/Visitor');
import Signature = require('nashorn/sun/reflect/generics/tree/Signature');

declare class ClassSignature {
	formalTypeParameters : FormalTypeParameter[];
	superclass : ClassTypeSignature;
	superInterfaces : ClassTypeSignature[];
	static make(arg1 : FormalTypeParameter[], arg2 : ClassTypeSignature, arg3 : ClassTypeSignature[]) : ClassSignature;
	getSuperclass() : ClassTypeSignature;
	getSuperInterfaces() : ClassTypeSignature[];
	accept(arg1 : Visitor<any>) : void;
}


declare interface ClassSignature extends Signature {}
export = ClassSignature
