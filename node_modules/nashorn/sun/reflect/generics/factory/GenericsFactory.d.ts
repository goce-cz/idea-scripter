import Object = require('nashorn/java/lang/Object');
import FieldTypeSignature = require('nashorn/sun/reflect/generics/tree/FieldTypeSignature');
import TypeVariable = require('nashorn/java/lang/reflect/TypeVariable');
import Type = require('nashorn/java/lang/reflect/Type');
import ParameterizedType = require('nashorn/java/lang/reflect/ParameterizedType');
import WildcardType = require('nashorn/java/lang/reflect/WildcardType');

declare class GenericsFactory extends Object {
	makeTypeVariable(arg1 : string, arg2 : FieldTypeSignature[]) : TypeVariable<any>;
	makeParameterizedType(arg1 : Type, arg2 : Type[], arg3 : Type) : ParameterizedType;
	findTypeVariable(arg1 : string) : TypeVariable<any>;
	makeWildcard(arg1 : FieldTypeSignature[], arg2 : FieldTypeSignature[]) : WildcardType;
	makeNamedType(arg1 : string) : Type;
	makeArrayType(arg1 : Type) : Type;
	makeByte() : Type;
	makeBool() : Type;
	makeShort() : Type;
	makeChar() : Type;
	makeInt() : Type;
	makeLong() : Type;
	makeFloat() : Type;
	makeDouble() : Type;
	makeVoid() : Type;
}

export = GenericsFactory
