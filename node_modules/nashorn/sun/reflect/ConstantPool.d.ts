import Object = require('nashorn/java/lang/Object');
import Class = require('nashorn/java/lang/Class');
import Member = require('nashorn/java/lang/reflect/Member');
import Field = require('nashorn/java/lang/reflect/Field');

declare class ConstantPool extends Object {
	size : number;
	constructor();
	getSize() : number;
	getClassAt(arg1 : number) : Class<any>;
	getClassAtIfLoaded(arg1 : number) : Class<any>;
	getMethodAt(arg1 : number) : Member;
	getMethodAtIfLoaded(arg1 : number) : Member;
	getFieldAt(arg1 : number) : Field;
	getFieldAtIfLoaded(arg1 : number) : Field;
	getMemberRefInfoAt(arg1 : number) : string[];
	getIntAt(arg1 : number) : number;
	getLongAt(arg1 : number) : number;
	getFloatAt(arg1 : number) : number;
	getDoubleAt(arg1 : number) : number;
	getStringAt(arg1 : number) : string;
	getUTF8At(arg1 : number) : string;
	getSize0(arg1 : Object) : number;
	getClassAt0(arg1 : Object, arg2 : number) : Class<any>;
	getClassAtIfLoaded0(arg1 : Object, arg2 : number) : Class<any>;
	getMethodAt0(arg1 : Object, arg2 : number) : Member;
	getMethodAtIfLoaded0(arg1 : Object, arg2 : number) : Member;
	getFieldAt0(arg1 : Object, arg2 : number) : Field;
	getFieldAtIfLoaded0(arg1 : Object, arg2 : number) : Field;
	getMemberRefInfoAt0(arg1 : Object, arg2 : number) : string[];
	getIntAt0(arg1 : Object, arg2 : number) : number;
	getLongAt0(arg1 : Object, arg2 : number) : number;
	getFloatAt0(arg1 : Object, arg2 : number) : number;
	getDoubleAt0(arg1 : Object, arg2 : number) : number;
	getStringAt0(arg1 : Object, arg2 : number) : string;
	getUTF8At0(arg1 : Object, arg2 : number) : string;
}

export = ConstantPool
